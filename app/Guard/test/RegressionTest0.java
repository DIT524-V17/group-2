
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

  public static boolean debug = false;

  @Test
  public void test001() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test001"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str4 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array6 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str7 = new java.util.ArrayList<java.lang.String>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str7, str_array6);
    boolean b9 = treeset_str4.retainAll((java.util.Collection<java.lang.String>)arraylist_str7);
    boolean b10 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str4);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str11 = treeset_str1.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test002() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test002"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Comparator<? super java.lang.String> comparator_wildcard2 = treeset_str0.comparator();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str3 = treeset_str0.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard2);

  }

  @Test
  public void test003() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test003"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    // The following exception was thrown during execution in test generation
    try {
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str0.subSet("hi!", "");
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);

  }

  @Test
  public void test004() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test004"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    // The following exception was thrown during execution in test generation
    try {
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str0.subSet("hi!", false, "", true);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  @Test
  public void test005() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test005"); }

    java.lang.String[] str_array3 = new java.lang.String[] { "", "[hi!]", "" };
    java.util.TreeSet<java.lang.String> treeset_str4 = new java.util.TreeSet<java.lang.String>();
    boolean b5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str4, str_array3);
    // The following exception was thrown during execution in test generation
    try {
    boolean b7 = treeset_str4.remove((java.lang.Object)100.0f);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);

  }

  @Test
  public void test006() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test006"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b25 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b26 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str8);
    // The following exception was thrown during execution in test generation
    try {
    boolean b28 = treeset_str3.contains((java.lang.Object)'a');
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test007() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test007"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    boolean b9 = treeset_str0.equals((java.lang.Object)100L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test008() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test008"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str4 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array6 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str7 = new java.util.ArrayList<java.lang.String>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str7, str_array6);
    boolean b9 = treeset_str4.retainAll((java.util.Collection<java.lang.String>)arraylist_str7);
    boolean b10 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str4);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.SortedSet<java.lang.String> sortedset_str14 = treeset_str12.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array17 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str18 = new java.util.ArrayList<java.lang.String>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str18, str_array17);
    boolean b20 = treeset_str15.retainAll((java.util.Collection<java.lang.String>)arraylist_str18);
    boolean b21 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)treeset_str15);
    java.lang.String str23 = treeset_str15.higher("");
    // The following exception was thrown during execution in test generation
    try {
    boolean b24 = treeset_str4.remove((java.lang.Object)str23);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str23);

  }

  @Test
  public void test009() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test009"); }

    java.lang.String[] str_array4 = new java.lang.String[] { "", "hi!", "hi!", "[]" };
    java.util.TreeSet<java.lang.String> treeset_str5 = new java.util.TreeSet<java.lang.String>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str5, str_array4);
    java.lang.String str7 = treeset_str5.first();
    // The following exception was thrown during execution in test generation
    try {
    java.util.NavigableSet<java.lang.String> navigableset_str12 = treeset_str5.subSet("[hi!]", true, "", false);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + ""+ "'", str7.equals(""));

  }

  @Test
  public void test010() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test010"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    boolean b4 = treeset_str1.isEmpty();
    java.lang.String str5 = treeset_str1.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str5);

  }

  @Test
  public void test011() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test011"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str11, str_array10);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str11.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str14 = treeset_str11.iterator();
    boolean b15 = treeset_str0.equals((java.lang.Object)iterator_str14);
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str19 = new java.util.ArrayList<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str19, str_array18);
    boolean b21 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)arraylist_str19);
    boolean b23 = treeset_str16.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str26 = treeset_str16.tailSet("hi!", true);
    java.lang.String str28 = treeset_str16.higher("[hi!]");
    // The following exception was thrown during execution in test generation
    try {
    boolean b29 = treeset_str0.remove((java.lang.Object)treeset_str16);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "hi!"+ "'", str28.equals("hi!"));

  }

  @Test
  public void test012() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test012"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Collection[] collection_array7 = new java.util.Collection[ 0 ];
    @SuppressWarnings("unchecked")
    java.util.Collection<java.lang.String>[] collection_str_array8 = (java.util.Collection<java.lang.String>[])collection_array7;
    java.util.Collection[] collection_array10 = new java.util.Collection[ 0 ];
    @SuppressWarnings("unchecked")
    java.util.Collection<java.lang.String>[] collection_str_array11 = (java.util.Collection<java.lang.String>[])collection_array10;
    java.util.Collection[] collection_array13 = new java.util.Collection[ 0 ];
    @SuppressWarnings("unchecked")
    java.util.Collection<java.lang.String>[] collection_str_array14 = (java.util.Collection<java.lang.String>[])collection_array13;
    java.util.Collection[] collection_array16 = new java.util.Collection[ 0 ];
    @SuppressWarnings("unchecked")
    java.util.Collection<java.lang.String>[] collection_str_array17 = (java.util.Collection<java.lang.String>[])collection_array16;
    java.util.Collection[][] collection_array_array19 = new java.util.Collection[ 4 ][];
    @SuppressWarnings("unchecked")
    java.util.Collection<java.lang.String>[][] collection_str_array_array20 = (java.util.Collection<java.lang.String>[][])collection_array_array19;
    collection_str_array_array20[0] = collection_array7;
    collection_str_array_array20[1] = collection_array10;
    collection_str_array_array20[2] = collection_array13;
    collection_str_array_array20[3] = collection_array16;
    // The following exception was thrown during execution in test generation
    try {
    java.util.Collection<java.lang.String>[][] collection_str_array_array29 = treeset_str3.toArray(collection_str_array_array20);
      org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException");
    } catch (java.lang.ArrayStoreException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_str_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_str_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_str_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_array_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_str_array_array20);

  }

  @Test
  public void test013() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test013"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b25 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b26 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str8);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str27 = treeset_str8.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test014() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test014"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    boolean b17 = treeset_str0.equals((java.lang.Object)0);
    // The following exception was thrown during execution in test generation
    try {
    java.util.NavigableSet<java.lang.String> navigableset_str22 = treeset_str0.subSet("[hi!]", false, "", false);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test015() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test015"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str14 = treeset_str1.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);

  }

  @Test
  public void test016() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test016"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    treeset_str0.clear();
    java.util.TreeSet<java.lang.String> treeset_str2 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array4 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str5 = new java.util.ArrayList<java.lang.String>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str5, str_array4);
    boolean b7 = treeset_str2.retainAll((java.util.Collection<java.lang.String>)arraylist_str5);
    java.lang.String str8 = treeset_str2.pollLast();
    java.util.Iterator<java.lang.String> iterator_str9 = treeset_str2.descendingIterator();
    java.util.NavigableSet<java.lang.String> navigableset_str12 = treeset_str2.tailSet("", false);
    // The following exception was thrown during execution in test generation
    try {
    boolean b13 = treeset_str0.remove((java.lang.Object)navigableset_str12);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str12);

  }

  @Test
  public void test017() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test017"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.stream.Stream<java.lang.String> stream_str7 = treeset_str0.parallelStream();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.lang.String str11 = treeset_str9.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("hi!", true);
    java.util.stream.Stream<java.lang.String> stream_str15 = treeset_str9.stream();
    // The following exception was thrown during execution in test generation
    try {
    boolean b16 = treeset_str0.contains((java.lang.Object)stream_str15);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str15);

  }

  @Test
  public void test018() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test018"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array10 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str11 = new java.util.ArrayList<java.lang.String>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str11, str_array10);
    boolean b13 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)arraylist_str11);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array16 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str17 = new java.util.ArrayList<java.lang.String>();
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str17, str_array16);
    boolean b19 = treeset_str14.retainAll((java.util.Collection<java.lang.String>)arraylist_str17);
    java.util.TreeSet<java.lang.String> treeset_str20 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array22 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str23 = new java.util.ArrayList<java.lang.String>();
    boolean b24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str23, str_array22);
    boolean b25 = treeset_str20.retainAll((java.util.Collection<java.lang.String>)arraylist_str23);
    java.util.List[] list_array27 = new java.util.List[ 3 ];
    @SuppressWarnings("unchecked")
    java.util.List<java.lang.String>[] list_str_array28 = (java.util.List<java.lang.String>[])list_array27;
    list_str_array28[0] = arraylist_str11;
    list_str_array28[1] = arraylist_str17;
    list_str_array28[2] = arraylist_str23;
    // The following exception was thrown during execution in test generation
    try {
    java.util.List<java.lang.String>[] list_str_array35 = treeset_str0.toArray(list_str_array28);
      org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException");
    } catch (java.lang.ArrayStoreException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_str_array28);

  }

  @Test
  public void test019() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test019"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str0.iterator();
    java.lang.String str27 = treeset_str0.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str30 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str29);
    java.util.TreeSet<java.lang.String> treeset_str31 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array33 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str34 = new java.util.ArrayList<java.lang.String>();
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str34, str_array33);
    boolean b36 = treeset_str31.retainAll((java.util.Collection<java.lang.String>)arraylist_str34);
    boolean b38 = treeset_str31.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str39 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str40 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str39);
    java.util.SortedSet<java.lang.String> sortedset_str42 = treeset_str40.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str45 = treeset_str40.headSet("", false);
    boolean b46 = treeset_str31.retainAll((java.util.Collection<java.lang.String>)navigableset_str45);
    boolean b47 = treeset_str30.retainAll((java.util.Collection<java.lang.String>)navigableset_str45);
    boolean b48 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)treeset_str30);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str49 = treeset_str30.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);

  }

  @Test
  public void test020() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test020"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    treeset_str0.clear();
    java.lang.Object obj2 = treeset_str0.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj2);

  }

  @Test
  public void test021() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test021"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str4 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array6 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str7 = new java.util.ArrayList<java.lang.String>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str7, str_array6);
    boolean b9 = treeset_str4.retainAll((java.util.Collection<java.lang.String>)arraylist_str7);
    boolean b10 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str4);
    java.util.Spliterator<java.lang.String> spliterator_str11 = treeset_str1.spliterator();
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str1.headSet("", true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);

  }

  @Test
  public void test022() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test022"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    // The following exception was thrown during execution in test generation
    try {
    java.util.NavigableSet<java.lang.String> navigableset_str8 = treeset_str1.subSet("[]", true, "", false);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);

  }

  @Test
  public void test023() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test023"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str0.headSet("[hi!]", true);
    java.util.stream.Stream<java.lang.String> stream_str28 = navigableset_str27.parallelStream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str28);

  }

  @Test
  public void test024() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test024"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.lang.String str6 = treeset_str3.pollLast();
    // The following exception was thrown during execution in test generation
    try {
    java.util.NavigableSet<java.lang.String> navigableset_str11 = treeset_str3.subSet("[hi!]", true, "[]", true);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!"+ "'", str6.equals("hi!"));

  }

  @Test
  public void test025() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test025"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.lang.String str6 = treeset_str3.pollLast();
    java.util.stream.Stream<java.lang.String> stream_str7 = treeset_str3.stream();
    java.util.Collection<java.lang.String> collection_str8 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b9 = treeset_str3.containsAll(collection_str8);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!"+ "'", str6.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str7);

  }

  @Test
  public void test026() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test026"); }

    java.util.SortedSet<java.lang.String> sortedset_str0 = null;
    // The following exception was thrown during execution in test generation
    try {
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>(sortedset_str0);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test027() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test027"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.TreeSet<java.lang.String> treeset_str2 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array4 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str5 = new java.util.ArrayList<java.lang.String>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str5, str_array4);
    boolean b7 = treeset_str2.retainAll((java.util.Collection<java.lang.String>)arraylist_str5);
    boolean b9 = treeset_str2.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str10);
    java.util.SortedSet<java.lang.String> sortedset_str13 = treeset_str11.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str11.headSet("", false);
    boolean b17 = treeset_str2.retainAll((java.util.Collection<java.lang.String>)navigableset_str16);
    boolean b18 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)navigableset_str16);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str1.headSet("hi!");
    java.util.stream.Stream<java.lang.String> stream_str21 = sortedset_str20.parallelStream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str21);

  }

  @Test
  public void test028() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test028"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str1.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str1.descendingSet();
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)navigableset_str18);
    java.util.SortedSet<java.lang.String> sortedset_str21 = treeset_str19.headSet("[]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str21);

  }

  @Test
  public void test029() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test029"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    boolean b15 = treeset_str1.add("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str19 = new java.util.ArrayList<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str19, str_array18);
    boolean b21 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)arraylist_str19);
    java.lang.String str22 = treeset_str16.pollLast();
    java.util.Spliterator<java.lang.String> spliterator_str23 = treeset_str16.spliterator();
    java.util.SortedSet<java.lang.String> sortedset_str25 = treeset_str16.tailSet("[hi!]");
    // The following exception was thrown during execution in test generation
    try {
    boolean b26 = treeset_str1.remove((java.lang.Object)treeset_str16);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str25);

  }

  @Test
  public void test030() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test030"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    int i6 = treeset_str3.size();
    // The following exception was thrown during execution in test generation
    try {
    boolean b8 = treeset_str3.remove((java.lang.Object)(-1));
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);

  }

  @Test
  public void test031() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test031"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str11, str_array10);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str11.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str14 = treeset_str11.iterator();
    boolean b15 = treeset_str0.equals((java.lang.Object)iterator_str14);
    java.util.Iterator<java.lang.String> iterator_str16 = treeset_str0.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str19 = treeset_str0.headSet("hi!", true);
    int i20 = treeset_str0.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);

  }

  @Test
  public void test032() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test032"); }

    java.lang.String[] str_array1 = new java.lang.String[] { "" };
    java.util.TreeSet<java.lang.String> treeset_str2 = new java.util.TreeSet<java.lang.String>();
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str2, str_array1);
    int i4 = treeset_str2.size();
    java.util.TreeSet<java.lang.String> treeset_str5 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array7 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str8 = new java.util.ArrayList<java.lang.String>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str8, str_array7);
    boolean b10 = treeset_str5.retainAll((java.util.Collection<java.lang.String>)arraylist_str8);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array13 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str14 = new java.util.ArrayList<java.lang.String>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str14, str_array13);
    boolean b16 = treeset_str11.retainAll((java.util.Collection<java.lang.String>)arraylist_str14);
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array19 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str20 = new java.util.ArrayList<java.lang.String>();
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str20, str_array19);
    boolean b22 = treeset_str17.retainAll((java.util.Collection<java.lang.String>)arraylist_str20);
    java.util.RandomAccess[] randomAccess_array23 = new java.util.RandomAccess[] { arraylist_str8, arraylist_str14, arraylist_str20 };
    // The following exception was thrown during execution in test generation
    try {
    java.util.RandomAccess[] randomAccess_array24 = treeset_str2.toArray(randomAccess_array23);
      org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException");
    } catch (java.lang.ArrayStoreException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(randomAccess_array23);

  }

  @Test
  public void test033() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test033"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str4 = treeset_str1.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);

  }

  @Test
  public void test034() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test034"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.Spliterator<java.lang.String> spliterator_str8 = treeset_str0.spliterator();
    int i9 = treeset_str0.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 1);

  }

  @Test
  public void test035() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test035"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array27 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str28 = new java.util.ArrayList<java.lang.String>();
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str28, str_array27);
    boolean b30 = treeset_str25.retainAll((java.util.Collection<java.lang.String>)arraylist_str28);
    java.lang.String str31 = treeset_str25.pollLast();
    java.util.stream.Stream<java.lang.String> stream_str32 = treeset_str25.parallelStream();
    // The following exception was thrown during execution in test generation
    try {
    boolean b33 = treeset_str0.contains((java.lang.Object)treeset_str25);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str32);

  }

  @Test
  public void test036() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test036"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Spliterator<java.lang.String> spliterator_str7 = treeset_str0.spliterator();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.lang.String str13 = treeset_str9.higher("");
    boolean b14 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)treeset_str9);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str15 = treeset_str0.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test037() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test037"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.lang.String str8 = treeset_str0.lower("");
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    java.lang.String[] str_array27 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>();
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str28, str_array27);
    java.util.NavigableSet<java.lang.String> navigableset_str30 = treeset_str28.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str31 = treeset_str28.iterator();
    java.util.Iterator<java.lang.String> iterator_str32 = treeset_str28.iterator();
    boolean b33 = treeset_str9.removeAll((java.util.Collection<java.lang.String>)treeset_str28);
    java.util.Iterator<java.lang.String> iterator_str34 = treeset_str9.iterator();
    java.util.TreeSet<java.lang.String> treeset_str35 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str36 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str35);
    java.util.Iterator<java.lang.String> iterator_str37 = treeset_str36.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str38 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array40 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str41 = new java.util.ArrayList<java.lang.String>();
    boolean b42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str41, str_array40);
    boolean b43 = treeset_str38.retainAll((java.util.Collection<java.lang.String>)arraylist_str41);
    boolean b45 = treeset_str38.add("hi!");
    boolean b46 = treeset_str36.contains((java.lang.Object)"hi!");
    java.lang.String str48 = treeset_str36.ceiling("hi!");
    treeset_str36.clear();
    java.util.TreeSet<java.lang.String> treeset_str50 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str51 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str50);
    java.util.Iterator<java.lang.String> iterator_str52 = treeset_str51.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str53 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array55 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str56 = new java.util.ArrayList<java.lang.String>();
    boolean b57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str56, str_array55);
    boolean b58 = treeset_str53.retainAll((java.util.Collection<java.lang.String>)arraylist_str56);
    boolean b60 = treeset_str53.add("hi!");
    boolean b61 = treeset_str51.contains((java.lang.Object)"hi!");
    java.lang.String str63 = treeset_str51.ceiling("hi!");
    java.util.TreeSet<java.lang.String> treeset_str64 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str65 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str64);
    java.util.SortedSet<java.lang.String> sortedset_str67 = treeset_str65.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str70 = treeset_str65.headSet("", false);
    java.util.SortedSet[] sortedSet_array72 = new java.util.SortedSet[ 4 ];
    @SuppressWarnings("unchecked")
    java.util.SortedSet<java.lang.String>[] sortedset_str_array73 = (java.util.SortedSet<java.lang.String>[])sortedSet_array72;
    sortedset_str_array73[0] = treeset_str9;
    sortedset_str_array73[1] = treeset_str36;
    sortedset_str_array73[2] = treeset_str51;
    sortedset_str_array73[3] = treeset_str65;
    java.util.SortedSet<java.lang.String>[] sortedset_str_array82 = treeset_str0.toArray(sortedset_str_array73);
    int i83 = treeset_str0.size();
    treeset_str0.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i83 == 0);

  }

  @Test
  public void test038() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test038"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str0.tailSet("", false);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str11 = treeset_str0.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);

  }

  @Test
  public void test039() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test039"); }

    java.lang.String[] str_array1 = new java.lang.String[] { "" };
    java.util.TreeSet<java.lang.String> treeset_str2 = new java.util.TreeSet<java.lang.String>();
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str2, str_array1);
    int i4 = treeset_str2.size();
    java.util.NavigableSet<java.lang.String> navigableset_str7 = treeset_str2.headSet("", true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str7);

  }

  @Test
  public void test040() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test040"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array16 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str17 = new java.util.ArrayList<java.lang.String>();
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str17, str_array16);
    boolean b19 = treeset_str14.retainAll((java.util.Collection<java.lang.String>)arraylist_str17);
    java.util.stream.Stream<java.lang.String> stream_str20 = treeset_str14.parallelStream();
    java.lang.String str22 = treeset_str14.lower("");
    java.util.TreeSet<java.lang.String> treeset_str23 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array25 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str26 = new java.util.ArrayList<java.lang.String>();
    boolean b27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str26, str_array25);
    boolean b28 = treeset_str23.retainAll((java.util.Collection<java.lang.String>)arraylist_str26);
    boolean b30 = treeset_str23.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str31 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str32 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str31);
    java.util.SortedSet<java.lang.String> sortedset_str34 = treeset_str32.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str37 = treeset_str32.headSet("", false);
    boolean b38 = treeset_str23.retainAll((java.util.Collection<java.lang.String>)navigableset_str37);
    java.lang.String[] str_array41 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str42 = new java.util.TreeSet<java.lang.String>();
    boolean b43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str42, str_array41);
    java.util.NavigableSet<java.lang.String> navigableset_str44 = treeset_str42.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str45 = treeset_str42.iterator();
    java.util.Iterator<java.lang.String> iterator_str46 = treeset_str42.iterator();
    boolean b47 = treeset_str23.removeAll((java.util.Collection<java.lang.String>)treeset_str42);
    java.util.Iterator<java.lang.String> iterator_str48 = treeset_str23.iterator();
    java.util.TreeSet<java.lang.String> treeset_str49 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str50 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str49);
    java.util.Iterator<java.lang.String> iterator_str51 = treeset_str50.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str52 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array54 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str55 = new java.util.ArrayList<java.lang.String>();
    boolean b56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str55, str_array54);
    boolean b57 = treeset_str52.retainAll((java.util.Collection<java.lang.String>)arraylist_str55);
    boolean b59 = treeset_str52.add("hi!");
    boolean b60 = treeset_str50.contains((java.lang.Object)"hi!");
    java.lang.String str62 = treeset_str50.ceiling("hi!");
    treeset_str50.clear();
    java.util.TreeSet<java.lang.String> treeset_str64 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str65 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str64);
    java.util.Iterator<java.lang.String> iterator_str66 = treeset_str65.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str67 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array69 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str70 = new java.util.ArrayList<java.lang.String>();
    boolean b71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str70, str_array69);
    boolean b72 = treeset_str67.retainAll((java.util.Collection<java.lang.String>)arraylist_str70);
    boolean b74 = treeset_str67.add("hi!");
    boolean b75 = treeset_str65.contains((java.lang.Object)"hi!");
    java.lang.String str77 = treeset_str65.ceiling("hi!");
    java.util.TreeSet<java.lang.String> treeset_str78 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str79 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str78);
    java.util.SortedSet<java.lang.String> sortedset_str81 = treeset_str79.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str84 = treeset_str79.headSet("", false);
    java.util.SortedSet[] sortedSet_array86 = new java.util.SortedSet[ 4 ];
    @SuppressWarnings("unchecked")
    java.util.SortedSet<java.lang.String>[] sortedset_str_array87 = (java.util.SortedSet<java.lang.String>[])sortedSet_array86;
    sortedset_str_array87[0] = treeset_str23;
    sortedset_str_array87[1] = treeset_str50;
    sortedset_str_array87[2] = treeset_str65;
    sortedset_str_array87[3] = treeset_str79;
    java.util.SortedSet<java.lang.String>[] sortedset_str_array96 = treeset_str14.toArray(sortedset_str_array87);
    java.util.Collection<java.lang.String>[] collection_str_array97 = treeset_str1.toArray((java.util.Collection<java.lang.String>[])sortedset_str_array87);
    java.util.SortedSet<java.lang.String> sortedset_str99 = treeset_str1.tailSet("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b74 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str81);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str84);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet_array86);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array87);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array96);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_str_array97);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str99);

  }

  @Test
  public void test041() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test041"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str11, str_array10);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str11.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str14 = treeset_str11.iterator();
    boolean b15 = treeset_str0.equals((java.lang.Object)iterator_str14);
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str0.headSet("", true);
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str20 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str21 = treeset_str20.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array24 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str25 = new java.util.ArrayList<java.lang.String>();
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str25, str_array24);
    boolean b27 = treeset_str22.retainAll((java.util.Collection<java.lang.String>)arraylist_str25);
    boolean b29 = treeset_str22.add("hi!");
    boolean b30 = treeset_str20.contains((java.lang.Object)"hi!");
    java.lang.String str32 = treeset_str20.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str35 = treeset_str20.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str36 = treeset_str20.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str37 = treeset_str20.descendingSet();
    java.util.TreeSet<java.lang.String> treeset_str38 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)navigableset_str37);
    java.util.TreeSet<java.lang.String> treeset_str39 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str40 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str39);
    java.util.SortedSet<java.lang.String> sortedset_str42 = treeset_str39.tailSet("[hi!]");
    java.lang.Object obj43 = treeset_str39.clone();
    boolean b44 = treeset_str38.retainAll((java.util.Collection<java.lang.String>)treeset_str39);
    boolean b45 = treeset_str0.containsAll((java.util.Collection<java.lang.String>)treeset_str38);
    // The following exception was thrown during execution in test generation
    try {
    java.util.SortedSet<java.lang.String> sortedset_str48 = treeset_str0.subSet("[hi!]", "");
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);

  }

  @Test
  public void test042() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test042"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    treeset_str0.clear();
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str0.iterator();
    java.lang.String str4 = treeset_str0.ceiling("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);

  }

  @Test
  public void test043() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test043"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str0.tailSet("hi!", true);
    java.lang.String str12 = treeset_str0.higher("[hi!]");
    java.util.SortedSet<java.lang.String> sortedset_str14 = treeset_str0.headSet("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!"+ "'", str12.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str14);

  }

  @Test
  public void test044() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test044"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str0.tailSet("hi!", true);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    java.lang.String str12 = treeset_str0.toString();
    java.lang.String str14 = treeset_str0.ceiling("[]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "[hi!]"+ "'", str12.equals("[hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!"+ "'", str14.equals("hi!"));

  }

  @Test
  public void test045() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test045"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str1.subSet("[hi!]", true, "[hi!]", true);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str19 = treeset_str1.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);

  }

  @Test
  public void test046() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test046"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str11, str_array10);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str11.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str14 = treeset_str11.iterator();
    boolean b15 = treeset_str0.equals((java.lang.Object)iterator_str14);
    java.util.Iterator<java.lang.String> iterator_str16 = treeset_str0.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str17 = treeset_str0.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str17);

  }

  @Test
  public void test047() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test047"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str0.tailSet("hi!", true);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    java.lang.String str12 = treeset_str0.toString();
    java.lang.String str13 = treeset_str0.toString();
    java.util.Iterator<java.lang.String> iterator_str14 = treeset_str0.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "[hi!]"+ "'", str12.equals("[hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "[hi!]"+ "'", str13.equals("[hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str14);

  }

  @Test
  public void test048() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test048"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.lang.String str4 = treeset_str1.pollFirst();
    java.util.NavigableSet<java.lang.String> navigableset_str9 = treeset_str1.subSet("", false, "[hi!]", false);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str1.headSet("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);

  }

  @Test
  public void test049() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test049"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str0.tailSet("[hi!]");
    java.lang.Object obj4 = treeset_str0.clone();
    java.util.TreeSet<java.lang.String> treeset_str5 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array7 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str8 = new java.util.ArrayList<java.lang.String>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str8, str_array7);
    boolean b10 = treeset_str5.retainAll((java.util.Collection<java.lang.String>)arraylist_str8);
    java.util.stream.Stream<java.lang.String> stream_str11 = treeset_str5.parallelStream();
    java.lang.String str13 = treeset_str5.lower("");
    java.lang.String str15 = treeset_str5.higher("");
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str19 = new java.util.ArrayList<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str19, str_array18);
    boolean b21 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)arraylist_str19);
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array24 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str25 = new java.util.ArrayList<java.lang.String>();
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str25, str_array24);
    boolean b27 = treeset_str22.retainAll((java.util.Collection<java.lang.String>)arraylist_str25);
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array30 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str31 = new java.util.ArrayList<java.lang.String>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str31, str_array30);
    boolean b33 = treeset_str28.retainAll((java.util.Collection<java.lang.String>)arraylist_str31);
    java.util.TreeSet<java.lang.String> treeset_str34 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array36 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str37 = new java.util.ArrayList<java.lang.String>();
    boolean b38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str37, str_array36);
    boolean b39 = treeset_str34.retainAll((java.util.Collection<java.lang.String>)arraylist_str37);
    java.util.ArrayList[] arrayList_array41 = new java.util.ArrayList[ 4 ];
    @SuppressWarnings("unchecked")
    java.util.ArrayList<java.lang.String>[] arraylist_str_array42 = (java.util.ArrayList<java.lang.String>[])arrayList_array41;
    arraylist_str_array42[0] = arraylist_str19;
    arraylist_str_array42[1] = arraylist_str25;
    arraylist_str_array42[2] = arraylist_str31;
    arraylist_str_array42[3] = arraylist_str37;
    java.util.TreeSet<java.lang.String> treeset_str51 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array53 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str54 = new java.util.ArrayList<java.lang.String>();
    boolean b55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str54, str_array53);
    boolean b56 = treeset_str51.retainAll((java.util.Collection<java.lang.String>)arraylist_str54);
    java.util.TreeSet<java.lang.String> treeset_str57 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array59 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str60 = new java.util.ArrayList<java.lang.String>();
    boolean b61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str60, str_array59);
    boolean b62 = treeset_str57.retainAll((java.util.Collection<java.lang.String>)arraylist_str60);
    java.util.TreeSet<java.lang.String> treeset_str63 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array65 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str66 = new java.util.ArrayList<java.lang.String>();
    boolean b67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str66, str_array65);
    boolean b68 = treeset_str63.retainAll((java.util.Collection<java.lang.String>)arraylist_str66);
    java.util.TreeSet<java.lang.String> treeset_str69 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array71 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str72 = new java.util.ArrayList<java.lang.String>();
    boolean b73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str72, str_array71);
    boolean b74 = treeset_str69.retainAll((java.util.Collection<java.lang.String>)arraylist_str72);
    java.util.ArrayList[] arrayList_array76 = new java.util.ArrayList[ 4 ];
    @SuppressWarnings("unchecked")
    java.util.ArrayList<java.lang.String>[] arraylist_str_array77 = (java.util.ArrayList<java.lang.String>[])arrayList_array76;
    arraylist_str_array77[0] = arraylist_str54;
    arraylist_str_array77[1] = arraylist_str60;
    arraylist_str_array77[2] = arraylist_str66;
    arraylist_str_array77[3] = arraylist_str72;
    java.util.ArrayList[][] arrayList_array_array87 = new java.util.ArrayList[ 2 ][];
    @SuppressWarnings("unchecked")
    java.util.ArrayList<java.lang.String>[][] arraylist_str_array_array88 = (java.util.ArrayList<java.lang.String>[][])arrayList_array_array87;
    arraylist_str_array_array88[0] = arraylist_str_array42;
    arraylist_str_array_array88[1] = arraylist_str_array77;
    java.util.ArrayList<java.lang.String>[][] arraylist_str_array_array93 = treeset_str5.toArray(arraylist_str_array_array88);
    // The following exception was thrown during execution in test generation
    try {
    boolean b94 = treeset_str0.remove((java.lang.Object)arraylist_str_array_array93);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arrayList_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arrayList_array76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arrayList_array_array87);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array_array88);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array_array93);

  }

  @Test
  public void test050() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test050"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str0.iterator();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str26 = treeset_str0.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);

  }

  @Test
  public void test051() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test051"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.lang.String str8 = treeset_str0.toString();
    java.util.SortedSet<java.lang.String> sortedset_str10 = treeset_str0.headSet("");
    java.util.Iterator<java.lang.String> iterator_str11 = treeset_str0.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "[hi!]"+ "'", str8.equals("[hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str11);

  }

  @Test
  public void test052() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test052"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.lang.String str7 = treeset_str3.ceiling("[hi!]");
    java.util.Spliterator<java.lang.String> spliterator_str8 = treeset_str3.spliterator();
    java.lang.String str9 = treeset_str3.last();
    java.lang.String str10 = treeset_str3.toString();
    boolean b11 = treeset_str3.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hi!"+ "'", str7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!"+ "'", str9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "[, hi!]"+ "'", str10.equals("[, hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test053() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test053"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str11, str_array10);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str11.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str14 = treeset_str11.iterator();
    boolean b15 = treeset_str0.equals((java.lang.Object)iterator_str14);
    java.util.Iterator<java.lang.String> iterator_str16 = treeset_str0.iterator();
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array19 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str20 = new java.util.ArrayList<java.lang.String>();
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str20, str_array19);
    boolean b22 = treeset_str17.retainAll((java.util.Collection<java.lang.String>)arraylist_str20);
    boolean b24 = treeset_str17.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str26 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str25);
    java.util.SortedSet<java.lang.String> sortedset_str28 = treeset_str26.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str31 = treeset_str26.headSet("", false);
    boolean b32 = treeset_str17.retainAll((java.util.Collection<java.lang.String>)navigableset_str31);
    java.lang.String[] str_array35 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str36 = new java.util.TreeSet<java.lang.String>();
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str36, str_array35);
    java.util.NavigableSet<java.lang.String> navigableset_str38 = treeset_str36.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str39 = treeset_str36.iterator();
    java.util.Iterator<java.lang.String> iterator_str40 = treeset_str36.iterator();
    boolean b41 = treeset_str17.removeAll((java.util.Collection<java.lang.String>)treeset_str36);
    java.util.SortedSet[] sortedSet_array43 = new java.util.SortedSet[ 1 ];
    @SuppressWarnings("unchecked")
    java.util.SortedSet<java.lang.String>[] sortedset_str_array44 = (java.util.SortedSet<java.lang.String>[])sortedSet_array43;
    sortedset_str_array44[0] = treeset_str17;
    java.util.SortedSet[][] sortedSet_array_array48 = new java.util.SortedSet[ 1 ][];
    @SuppressWarnings("unchecked")
    java.util.SortedSet<java.lang.String>[][] sortedset_str_array_array49 = (java.util.SortedSet<java.lang.String>[][])sortedSet_array_array48;
    sortedset_str_array_array49[0] = sortedset_str_array44;
    java.util.SortedSet<java.lang.String>[][] sortedset_str_array_array52 = treeset_str0.toArray(sortedset_str_array_array49);
    java.util.TreeSet<java.lang.String> treeset_str53 = new java.util.TreeSet<java.lang.String>();
    boolean b54 = treeset_str0.containsAll((java.util.Collection<java.lang.String>)treeset_str53);
    java.lang.String str56 = treeset_str53.floor("[hi!]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet_array_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str56);

  }

  @Test
  public void test054() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test054"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("", false);
    java.lang.String str7 = treeset_str1.pollLast();
    boolean b8 = treeset_str1.isEmpty();
    java.lang.String str10 = treeset_str1.floor("[]");
    java.lang.String str11 = treeset_str1.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "[]"+ "'", str11.equals("[]"));

  }

  @Test
  public void test055() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test055"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str0.tailSet("hi!", true);
    java.util.Iterator<java.lang.String> iterator_str11 = treeset_str0.iterator();
    java.lang.Object obj12 = treeset_str0.clone();
    java.util.NavigableSet<java.lang.String> navigableset_str15 = treeset_str0.headSet("[hi!]", false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str15);

  }

  @Test
  public void test056() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test056"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str11, str_array10);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str11.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str14 = treeset_str11.iterator();
    boolean b15 = treeset_str0.equals((java.lang.Object)iterator_str14);
    java.util.Iterator<java.lang.String> iterator_str16 = treeset_str0.iterator();
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array19 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str20 = new java.util.ArrayList<java.lang.String>();
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str20, str_array19);
    boolean b22 = treeset_str17.retainAll((java.util.Collection<java.lang.String>)arraylist_str20);
    boolean b24 = treeset_str17.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str26 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str25);
    java.util.SortedSet<java.lang.String> sortedset_str28 = treeset_str26.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str31 = treeset_str26.headSet("", false);
    boolean b32 = treeset_str17.retainAll((java.util.Collection<java.lang.String>)navigableset_str31);
    java.lang.String[] str_array35 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str36 = new java.util.TreeSet<java.lang.String>();
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str36, str_array35);
    java.util.NavigableSet<java.lang.String> navigableset_str38 = treeset_str36.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str39 = treeset_str36.iterator();
    java.util.Iterator<java.lang.String> iterator_str40 = treeset_str36.iterator();
    boolean b41 = treeset_str17.removeAll((java.util.Collection<java.lang.String>)treeset_str36);
    java.util.SortedSet[] sortedSet_array43 = new java.util.SortedSet[ 1 ];
    @SuppressWarnings("unchecked")
    java.util.SortedSet<java.lang.String>[] sortedset_str_array44 = (java.util.SortedSet<java.lang.String>[])sortedSet_array43;
    sortedset_str_array44[0] = treeset_str17;
    java.util.SortedSet[][] sortedSet_array_array48 = new java.util.SortedSet[ 1 ][];
    @SuppressWarnings("unchecked")
    java.util.SortedSet<java.lang.String>[][] sortedset_str_array_array49 = (java.util.SortedSet<java.lang.String>[][])sortedSet_array_array48;
    sortedset_str_array_array49[0] = sortedset_str_array44;
    java.util.SortedSet<java.lang.String>[][] sortedset_str_array_array52 = treeset_str0.toArray(sortedset_str_array_array49);
    java.util.TreeSet<java.lang.String> treeset_str53 = new java.util.TreeSet<java.lang.String>();
    boolean b54 = treeset_str0.containsAll((java.util.Collection<java.lang.String>)treeset_str53);
    java.util.TreeSet<java.lang.String> treeset_str55 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array57 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str58 = new java.util.ArrayList<java.lang.String>();
    boolean b59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str58, str_array57);
    boolean b60 = treeset_str55.retainAll((java.util.Collection<java.lang.String>)arraylist_str58);
    boolean b62 = treeset_str55.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str63 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str64 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str63);
    java.util.SortedSet<java.lang.String> sortedset_str66 = treeset_str64.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str69 = treeset_str64.headSet("", false);
    boolean b70 = treeset_str55.retainAll((java.util.Collection<java.lang.String>)navigableset_str69);
    java.lang.String[] str_array73 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str74 = new java.util.TreeSet<java.lang.String>();
    boolean b75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str74, str_array73);
    java.util.NavigableSet<java.lang.String> navigableset_str76 = treeset_str74.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str77 = treeset_str74.iterator();
    java.util.Iterator<java.lang.String> iterator_str78 = treeset_str74.iterator();
    boolean b79 = treeset_str55.removeAll((java.util.Collection<java.lang.String>)treeset_str74);
    java.util.Iterator<java.lang.String> iterator_str80 = treeset_str55.iterator();
    java.lang.String str82 = treeset_str55.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str83 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str55);
    int i84 = treeset_str55.size();
    // The following exception was thrown during execution in test generation
    try {
    boolean b85 = treeset_str0.contains((java.lang.Object)treeset_str55);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet_array_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str78);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i84 == 0);

  }

  @Test
  public void test057() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test057"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.lang.String str4 = treeset_str1.pollFirst();
    java.util.NavigableSet<java.lang.String> navigableset_str9 = treeset_str1.subSet("", false, "[hi!]", false);
    java.util.Iterator<java.lang.String> iterator_str10 = treeset_str1.descendingIterator();
    // The following exception was thrown during execution in test generation
    try {
    java.util.NavigableSet<java.lang.String> navigableset_str15 = treeset_str1.subSet("[]", true, "[[hi!]]", false);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str10);

  }

  @Test
  public void test058() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test058"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b25 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b26 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str8);
    java.util.TreeSet<java.lang.String> treeset_str27 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array29 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str30 = new java.util.ArrayList<java.lang.String>();
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str30, str_array29);
    boolean b32 = treeset_str27.retainAll((java.util.Collection<java.lang.String>)arraylist_str30);
    java.lang.String str33 = treeset_str27.pollLast();
    java.util.Iterator<java.lang.String> iterator_str34 = treeset_str27.descendingIterator();
    java.lang.String[] str_array37 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str38 = new java.util.TreeSet<java.lang.String>();
    boolean b39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str38, str_array37);
    java.util.NavigableSet<java.lang.String> navigableset_str40 = treeset_str38.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str41 = treeset_str38.iterator();
    boolean b42 = treeset_str27.equals((java.lang.Object)iterator_str41);
    java.util.Iterator<java.lang.String> iterator_str43 = treeset_str27.iterator();
    boolean b44 = treeset_str8.equals((java.lang.Object)treeset_str27);
    java.util.SortedSet<java.lang.String> sortedset_str46 = treeset_str8.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str47 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str48 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str47);
    java.util.TreeSet<java.lang.String> treeset_str49 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array51 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str52 = new java.util.ArrayList<java.lang.String>();
    boolean b53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str52, str_array51);
    boolean b54 = treeset_str49.retainAll((java.util.Collection<java.lang.String>)arraylist_str52);
    boolean b56 = treeset_str49.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str57 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str58 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str57);
    java.util.SortedSet<java.lang.String> sortedset_str60 = treeset_str58.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str63 = treeset_str58.headSet("", false);
    boolean b64 = treeset_str49.retainAll((java.util.Collection<java.lang.String>)navigableset_str63);
    boolean b65 = treeset_str48.retainAll((java.util.Collection<java.lang.String>)navigableset_str63);
    java.util.SortedSet<java.lang.String> sortedset_str67 = treeset_str48.headSet("hi!");
    boolean b68 = treeset_str8.containsAll((java.util.Collection<java.lang.String>)treeset_str48);
    java.util.TreeSet<java.lang.String> treeset_str69 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str70 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str69);
    java.util.Comparator<? super java.lang.String> comparator_wildcard71 = treeset_str69.comparator();
    java.util.SortedSet<java.lang.String> sortedset_str74 = treeset_str69.subSet("[hi!]", "[hi!]");
    boolean b75 = treeset_str69.isEmpty();
    // The following exception was thrown during execution in test generation
    try {
    boolean b76 = treeset_str48.contains((java.lang.Object)treeset_str69);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == true);

  }

  @Test
  public void test059() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test059"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str4 = treeset_str1.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);

  }

  @Test
  public void test060() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test060"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str9);
    java.util.SortedSet<java.lang.String> sortedset_str12 = treeset_str10.tailSet("");
    boolean b13 = treeset_str3.equals((java.lang.Object)treeset_str10);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str14);
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str19 = new java.util.ArrayList<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str19, str_array18);
    boolean b21 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)arraylist_str19);
    boolean b23 = treeset_str16.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str24 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str24);
    java.util.SortedSet<java.lang.String> sortedset_str27 = treeset_str25.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str30 = treeset_str25.headSet("", false);
    boolean b31 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)navigableset_str30);
    boolean b32 = treeset_str15.retainAll((java.util.Collection<java.lang.String>)navigableset_str30);
    boolean b33 = treeset_str3.equals((java.lang.Object)b32);
    java.lang.String str35 = treeset_str3.ceiling("[hi!]");
    boolean b36 = treeset_str1.addAll((java.util.Collection<java.lang.String>)treeset_str3);
    java.util.TreeSet<java.lang.String> treeset_str37 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array39 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str40 = new java.util.ArrayList<java.lang.String>();
    boolean b41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str40, str_array39);
    boolean b42 = treeset_str37.retainAll((java.util.Collection<java.lang.String>)arraylist_str40);
    boolean b44 = treeset_str37.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str47 = treeset_str37.tailSet("hi!", true);
    java.util.TreeSet<java.lang.String> treeset_str48 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str37);
    java.util.TreeSet<java.lang.String> treeset_str49 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str37);
    // The following exception was thrown during execution in test generation
    try {
    boolean b50 = treeset_str1.contains((java.lang.Object)treeset_str37);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str47);

  }

  @Test
  public void test061() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test061"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str8 = treeset_str0.headSet("");
    java.util.stream.Stream<java.lang.String> stream_str9 = treeset_str0.parallelStream();
    int i10 = treeset_str0.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);

  }

  @Test
  public void test062() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test062"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str0.subSet("", true, "[hi!]", true);
    java.lang.String str7 = treeset_str0.pollLast();
    java.lang.String str8 = treeset_str0.pollLast();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str9);
    java.util.Iterator<java.lang.String> iterator_str11 = treeset_str10.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array14 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str15 = new java.util.ArrayList<java.lang.String>();
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str15, str_array14);
    boolean b17 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)arraylist_str15);
    boolean b19 = treeset_str12.add("hi!");
    boolean b20 = treeset_str10.contains((java.lang.Object)"hi!");
    java.lang.String str22 = treeset_str10.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str25 = treeset_str10.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str26 = treeset_str10.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str10.descendingSet();
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)navigableset_str27);
    // The following exception was thrown during execution in test generation
    try {
    boolean b29 = treeset_str0.contains((java.lang.Object)navigableset_str27);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);

  }

  @Test
  public void test063() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test063"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str4 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array6 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str7 = new java.util.ArrayList<java.lang.String>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str7, str_array6);
    boolean b9 = treeset_str4.retainAll((java.util.Collection<java.lang.String>)arraylist_str7);
    boolean b10 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str4);
    java.util.Spliterator<java.lang.String> spliterator_str11 = treeset_str1.spliterator();
    java.lang.String[] str_array14 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>();
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str15, str_array14);
    java.util.NavigableSet<java.lang.String> navigableset_str17 = treeset_str15.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str18 = treeset_str15.iterator();
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str20 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str19);
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array23 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str24 = new java.util.ArrayList<java.lang.String>();
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str24, str_array23);
    boolean b26 = treeset_str21.retainAll((java.util.Collection<java.lang.String>)arraylist_str24);
    boolean b28 = treeset_str21.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str30 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str29);
    java.util.SortedSet<java.lang.String> sortedset_str32 = treeset_str30.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str35 = treeset_str30.headSet("", false);
    boolean b36 = treeset_str21.retainAll((java.util.Collection<java.lang.String>)navigableset_str35);
    boolean b37 = treeset_str20.retainAll((java.util.Collection<java.lang.String>)navigableset_str35);
    boolean b38 = treeset_str15.removeAll((java.util.Collection<java.lang.String>)treeset_str20);
    boolean b40 = treeset_str20.add("[hi!]");
    java.util.NavigableSet<java.lang.String> navigableset_str43 = treeset_str20.headSet("", false);
    java.util.TreeSet<java.lang.String> treeset_str44 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array46 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str47 = new java.util.ArrayList<java.lang.String>();
    boolean b48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str47, str_array46);
    boolean b49 = treeset_str44.retainAll((java.util.Collection<java.lang.String>)arraylist_str47);
    java.util.stream.Stream<java.lang.String> stream_str50 = treeset_str44.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str52 = treeset_str44.headSet("");
    boolean b53 = treeset_str20.removeAll((java.util.Collection<java.lang.String>)treeset_str44);
    int i54 = treeset_str44.size();
    java.util.Iterator<java.lang.String> iterator_str55 = treeset_str44.iterator();
    // The following exception was thrown during execution in test generation
    try {
    boolean b56 = treeset_str1.remove((java.lang.Object)treeset_str44);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i54 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str55);

  }

  @Test
  public void test064() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test064"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str1.iterator();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str1);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str19 = treeset_str1.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);

  }

  @Test
  public void test065() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test065"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b25 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b26 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str8);
    boolean b28 = treeset_str8.add("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array31 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str32 = new java.util.ArrayList<java.lang.String>();
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str32, str_array31);
    boolean b34 = treeset_str29.retainAll((java.util.Collection<java.lang.String>)arraylist_str32);
    java.util.TreeSet<java.lang.String> treeset_str35 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str36 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str35);
    java.util.SortedSet<java.lang.String> sortedset_str38 = treeset_str36.tailSet("");
    boolean b39 = treeset_str29.equals((java.lang.Object)treeset_str36);
    java.util.TreeSet<java.lang.String> treeset_str40 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str41 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str40);
    java.util.TreeSet<java.lang.String> treeset_str42 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array44 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str45 = new java.util.ArrayList<java.lang.String>();
    boolean b46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str45, str_array44);
    boolean b47 = treeset_str42.retainAll((java.util.Collection<java.lang.String>)arraylist_str45);
    boolean b49 = treeset_str42.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str50 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str51 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str50);
    java.util.SortedSet<java.lang.String> sortedset_str53 = treeset_str51.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str56 = treeset_str51.headSet("", false);
    boolean b57 = treeset_str42.retainAll((java.util.Collection<java.lang.String>)navigableset_str56);
    boolean b58 = treeset_str41.retainAll((java.util.Collection<java.lang.String>)navigableset_str56);
    boolean b59 = treeset_str29.equals((java.lang.Object)b58);
    java.lang.String str61 = treeset_str29.ceiling("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str62 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str29);
    java.util.stream.Stream<java.lang.String> stream_str63 = treeset_str29.parallelStream();
    boolean b64 = treeset_str8.containsAll((java.util.Collection<java.lang.String>)treeset_str29);
    java.util.NavigableSet<java.lang.String> navigableset_str67 = treeset_str29.tailSet("[, hi!]", false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str67);

  }

  @Test
  public void test066() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test066"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str1 = treeset_str0.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }

  }

  @Test
  public void test067() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test067"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.stream.Stream<java.lang.String> stream_str11 = treeset_str0.stream();
    java.util.Iterator<java.lang.String> iterator_str12 = treeset_str0.descendingIterator();
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str0.descendingSet();
    java.lang.Object[] obj_array14 = treeset_str0.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);

  }

  @Test
  public void test068() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test068"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str0.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str26 = treeset_str0.descendingSet();
    java.util.NavigableSet<java.lang.String> navigableset_str29 = treeset_str0.headSet("[]", true);
    java.util.Iterator<java.lang.String> iterator_str30 = treeset_str0.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str30);

  }

  @Test
  public void test069() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test069"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.lang.String str6 = treeset_str3.pollLast();
    java.util.stream.Stream<java.lang.String> stream_str7 = treeset_str3.stream();
    java.util.Iterator<java.lang.String> iterator_str8 = treeset_str3.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str9);
    java.lang.String str12 = treeset_str10.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str15 = treeset_str10.headSet("hi!", true);
    java.util.stream.Stream<java.lang.String> stream_str16 = treeset_str10.stream();
    java.util.Spliterator<java.lang.String> spliterator_str17 = treeset_str10.spliterator();
    boolean b18 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str10);
    java.util.Spliterator<java.lang.String> spliterator_str19 = treeset_str3.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!"+ "'", str6.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str19);

  }

  @Test
  public void test070() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test070"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("hi!", true);
    boolean b7 = treeset_str1.isEmpty();
    java.util.stream.Stream<java.lang.String> stream_str8 = treeset_str1.parallelStream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str8);

  }

  @Test
  public void test071() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test071"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.lang.String str4 = treeset_str1.pollFirst();
    boolean b6 = treeset_str1.contains((java.lang.Object)10L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);

  }

  @Test
  public void test072() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test072"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("", false);
    java.lang.String str7 = treeset_str1.pollLast();
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str1.tailSet("[, hi!]");
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str12, str_array11);
    int i14 = treeset_str12.size();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str12);
    java.lang.String str17 = treeset_str15.higher("");
    boolean b18 = treeset_str1.addAll((java.util.Collection<java.lang.String>)treeset_str15);
    java.lang.String str19 = treeset_str1.first();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + ""+ "'", str19.equals(""));

  }

  @Test
  public void test073() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test073"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str8 = treeset_str0.headSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str0.subSet("[hi!]", true, "hi!", false);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str14);
    java.lang.String str17 = treeset_str15.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str20 = treeset_str15.headSet("hi!", true);
    boolean b21 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str15);
    java.util.stream.Stream<java.lang.String> stream_str22 = treeset_str0.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str25 = treeset_str0.subSet("[]", "[]");
    int i26 = treeset_str0.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);

  }

  @Test
  public void test074() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test074"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str4 = new java.util.TreeSet<java.lang.String>(sortedset_str3);
    java.lang.Object[] obj_array5 = treeset_str4.toArray();
    java.lang.String[] str_array8 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str9, str_array8);
    java.util.NavigableSet<java.lang.String> navigableset_str11 = treeset_str9.descendingSet();
    java.lang.String str12 = treeset_str9.pollLast();
    java.util.stream.Stream<java.lang.String> stream_str13 = treeset_str9.stream();
    // The following exception was thrown during execution in test generation
    try {
    boolean b14 = treeset_str4.remove((java.lang.Object)treeset_str9);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!"+ "'", str12.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str13);

  }

  @Test
  public void test075() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test075"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.SortedSet<java.lang.String> sortedset_str15 = treeset_str1.tailSet("");
    java.util.stream.Stream<java.lang.String> stream_str16 = treeset_str1.stream();
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str1);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str18 = treeset_str17.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str16);

  }

  @Test
  public void test076() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test076"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b25 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b26 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str8);
    boolean b28 = treeset_str8.add("[hi!]");
    java.util.NavigableSet<java.lang.String> navigableset_str31 = treeset_str8.headSet("", false);
    java.util.TreeSet<java.lang.String> treeset_str32 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array34 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str35 = new java.util.ArrayList<java.lang.String>();
    boolean b36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str35, str_array34);
    boolean b37 = treeset_str32.retainAll((java.util.Collection<java.lang.String>)arraylist_str35);
    java.util.stream.Stream<java.lang.String> stream_str38 = treeset_str32.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str40 = treeset_str32.headSet("");
    boolean b41 = treeset_str8.removeAll((java.util.Collection<java.lang.String>)treeset_str32);
    treeset_str32.clear();
    // The following exception was thrown during execution in test generation
    try {
    java.util.NavigableSet<java.lang.String> navigableset_str47 = treeset_str32.subSet("hi!", true, "[hi!]", true);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);

  }

  @Test
  public void test077() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test077"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str4 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array6 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str7 = new java.util.ArrayList<java.lang.String>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str7, str_array6);
    boolean b9 = treeset_str4.retainAll((java.util.Collection<java.lang.String>)arraylist_str7);
    boolean b10 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str4);
    java.lang.String[] str_array13 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str14, str_array13);
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str14.descendingSet();
    java.lang.String str18 = treeset_str14.ceiling("[hi!]");
    boolean b19 = treeset_str4.remove((java.lang.Object)"[hi!]");
    boolean b20 = treeset_str4.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!"+ "'", str18.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);

  }

  @Test
  public void test078() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test078"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str0.tailSet("hi!", true);
    java.util.Iterator<java.lang.String> iterator_str11 = treeset_str0.iterator();
    java.lang.Object obj12 = treeset_str0.clone();
    boolean b13 = treeset_str0.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);

  }

  @Test
  public void test079() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test079"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str8 = treeset_str0.tailSet("[]");
    java.util.NavigableSet<java.lang.String> navigableset_str9 = treeset_str0.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str9);

  }

  @Test
  public void test080() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test080"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("hi!", true);
    treeset_str1.clear();
    // The following exception was thrown during execution in test generation
    try {
    java.util.SortedSet<java.lang.String> sortedset_str10 = treeset_str1.subSet("hi!", "[]");
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);

  }

  @Test
  public void test081() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test081"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str9);
    java.util.SortedSet<java.lang.String> sortedset_str12 = treeset_str10.tailSet("");
    boolean b13 = treeset_str3.equals((java.lang.Object)treeset_str10);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str14);
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str19 = new java.util.ArrayList<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str19, str_array18);
    boolean b21 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)arraylist_str19);
    boolean b23 = treeset_str16.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str24 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str24);
    java.util.SortedSet<java.lang.String> sortedset_str27 = treeset_str25.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str30 = treeset_str25.headSet("", false);
    boolean b31 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)navigableset_str30);
    boolean b32 = treeset_str15.retainAll((java.util.Collection<java.lang.String>)navigableset_str30);
    boolean b33 = treeset_str3.equals((java.lang.Object)b32);
    java.lang.String str35 = treeset_str3.ceiling("[hi!]");
    boolean b36 = treeset_str1.addAll((java.util.Collection<java.lang.String>)treeset_str3);
    java.lang.String str38 = treeset_str1.floor("[]");
    java.util.Comparator<? super java.lang.String> comparator_wildcard39 = treeset_str1.comparator();
    java.util.TreeSet<java.lang.String> treeset_str40 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array42 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str43 = new java.util.ArrayList<java.lang.String>();
    boolean b44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str43, str_array42);
    boolean b45 = treeset_str40.retainAll((java.util.Collection<java.lang.String>)arraylist_str43);
    boolean b47 = treeset_str40.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str48 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str49 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str48);
    java.util.SortedSet<java.lang.String> sortedset_str51 = treeset_str49.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str54 = treeset_str49.headSet("", false);
    boolean b55 = treeset_str40.retainAll((java.util.Collection<java.lang.String>)navigableset_str54);
    java.lang.String[] str_array58 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str59 = new java.util.TreeSet<java.lang.String>();
    boolean b60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str59, str_array58);
    java.util.NavigableSet<java.lang.String> navigableset_str61 = treeset_str59.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str62 = treeset_str59.iterator();
    java.util.Iterator<java.lang.String> iterator_str63 = treeset_str59.iterator();
    boolean b64 = treeset_str40.removeAll((java.util.Collection<java.lang.String>)treeset_str59);
    java.util.Iterator<java.lang.String> iterator_str65 = treeset_str40.iterator();
    java.lang.String str67 = treeset_str40.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str68 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str40);
    java.util.NavigableSet<java.lang.String> navigableset_str71 = treeset_str68.headSet("[hi!]", true);
    boolean b72 = treeset_str1.removeAll((java.util.Collection<java.lang.String>)treeset_str68);
    java.util.NavigableSet<java.lang.String> navigableset_str75 = treeset_str1.headSet("[]", false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str75);

  }

  @Test
  public void test082() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test082"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str26 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str25);
    java.util.Iterator<java.lang.String> iterator_str27 = treeset_str26.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array30 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str31 = new java.util.ArrayList<java.lang.String>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str31, str_array30);
    boolean b33 = treeset_str28.retainAll((java.util.Collection<java.lang.String>)arraylist_str31);
    boolean b35 = treeset_str28.add("hi!");
    boolean b36 = treeset_str26.contains((java.lang.Object)"hi!");
    java.lang.String str38 = treeset_str26.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str43 = treeset_str26.subSet("[hi!]", true, "[hi!]", true);
    boolean b44 = treeset_str0.containsAll((java.util.Collection<java.lang.String>)treeset_str26);
    java.util.NavigableSet<java.lang.String> navigableset_str47 = treeset_str26.headSet("[, hi!]", true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str47);

  }

  @Test
  public void test083() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test083"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.lang.String str8 = treeset_str0.toString();
    java.util.Spliterator<java.lang.String> spliterator_str9 = treeset_str0.spliterator();
    java.util.NavigableSet<java.lang.String> navigableset_str12 = treeset_str0.headSet("hi!", false);
    java.lang.Cloneable[] cloneable_array13 = null;
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Cloneable[] cloneable_array14 = treeset_str0.toArray(cloneable_array13);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "[hi!]"+ "'", str8.equals("[hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str12);

  }

  @Test
  public void test084() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test084"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Comparator<? super java.lang.String> comparator_wildcard2 = treeset_str0.comparator();
    java.util.SortedSet<java.lang.String> sortedset_str5 = treeset_str0.subSet("[hi!]", "[hi!]");
    boolean b6 = treeset_str0.isEmpty();
    treeset_str0.clear();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str8 = treeset_str0.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);

  }

  @Test
  public void test085() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test085"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.lang.String str7 = treeset_str3.ceiling("[hi!]");
    java.util.Spliterator<java.lang.String> spliterator_str8 = treeset_str3.spliterator();
    java.lang.String str9 = treeset_str3.last();
    java.lang.String[] str_array12 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    boolean b14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str13, str_array12);
    java.util.NavigableSet<java.lang.String> navigableset_str15 = treeset_str13.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str16 = treeset_str13.iterator();
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array21 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str22 = new java.util.ArrayList<java.lang.String>();
    boolean b23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str22, str_array21);
    boolean b24 = treeset_str19.retainAll((java.util.Collection<java.lang.String>)arraylist_str22);
    boolean b26 = treeset_str19.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str27 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str27);
    java.util.SortedSet<java.lang.String> sortedset_str30 = treeset_str28.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str33 = treeset_str28.headSet("", false);
    boolean b34 = treeset_str19.retainAll((java.util.Collection<java.lang.String>)navigableset_str33);
    boolean b35 = treeset_str18.retainAll((java.util.Collection<java.lang.String>)navigableset_str33);
    boolean b36 = treeset_str13.removeAll((java.util.Collection<java.lang.String>)treeset_str18);
    java.util.TreeSet<java.lang.String> treeset_str37 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array39 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str40 = new java.util.ArrayList<java.lang.String>();
    boolean b41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str40, str_array39);
    boolean b42 = treeset_str37.retainAll((java.util.Collection<java.lang.String>)arraylist_str40);
    java.lang.String str43 = treeset_str37.pollLast();
    java.util.Iterator<java.lang.String> iterator_str44 = treeset_str37.descendingIterator();
    java.lang.String[] str_array47 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str48 = new java.util.TreeSet<java.lang.String>();
    boolean b49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str48, str_array47);
    java.util.NavigableSet<java.lang.String> navigableset_str50 = treeset_str48.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str51 = treeset_str48.iterator();
    boolean b52 = treeset_str37.equals((java.lang.Object)iterator_str51);
    java.util.Iterator<java.lang.String> iterator_str53 = treeset_str37.iterator();
    boolean b54 = treeset_str18.equals((java.lang.Object)treeset_str37);
    java.util.SortedSet<java.lang.String> sortedset_str56 = treeset_str18.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str57 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str58 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str57);
    java.util.Iterator<java.lang.String> iterator_str59 = treeset_str58.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str60 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array62 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str63 = new java.util.ArrayList<java.lang.String>();
    boolean b64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str63, str_array62);
    boolean b65 = treeset_str60.retainAll((java.util.Collection<java.lang.String>)arraylist_str63);
    boolean b67 = treeset_str60.add("hi!");
    boolean b68 = treeset_str58.contains((java.lang.Object)"hi!");
    java.lang.String str70 = treeset_str58.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str73 = treeset_str58.headSet("", false);
    boolean b74 = treeset_str18.remove((java.lang.Object)"");
    boolean b75 = treeset_str3.equals((java.lang.Object)"");
    java.lang.String str77 = treeset_str3.floor("[, hi!]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hi!"+ "'", str7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!"+ "'", str9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str77 + "' != '" + ""+ "'", str77.equals(""));

  }

  @Test
  public void test086() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test086"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b25 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b26 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str8);
    boolean b28 = treeset_str8.add("[hi!]");
    java.util.NavigableSet<java.lang.String> navigableset_str31 = treeset_str8.headSet("", false);
    java.util.TreeSet<java.lang.String> treeset_str32 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array34 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str35 = new java.util.ArrayList<java.lang.String>();
    boolean b36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str35, str_array34);
    boolean b37 = treeset_str32.retainAll((java.util.Collection<java.lang.String>)arraylist_str35);
    java.util.stream.Stream<java.lang.String> stream_str38 = treeset_str32.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str40 = treeset_str32.headSet("");
    boolean b41 = treeset_str8.removeAll((java.util.Collection<java.lang.String>)treeset_str32);
    java.util.SortedSet<java.lang.String> sortedset_str44 = treeset_str8.subSet("[[hi!]]", "[hi!]");
    java.util.stream.Stream<java.lang.String> stream_str45 = treeset_str8.parallelStream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str45);

  }

  @Test
  public void test087() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test087"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("hi!", true);
    treeset_str1.clear();
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str1.headSet("hi!", true);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array13 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str14 = new java.util.ArrayList<java.lang.String>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str14, str_array13);
    boolean b16 = treeset_str11.retainAll((java.util.Collection<java.lang.String>)arraylist_str14);
    java.lang.String str17 = treeset_str11.pollLast();
    java.util.Iterator<java.lang.String> iterator_str18 = treeset_str11.descendingIterator();
    java.lang.String[] str_array21 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>();
    boolean b23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str22, str_array21);
    java.util.NavigableSet<java.lang.String> navigableset_str24 = treeset_str22.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str22.iterator();
    boolean b26 = treeset_str11.equals((java.lang.Object)iterator_str25);
    java.util.NavigableSet<java.lang.String> navigableset_str29 = treeset_str11.headSet("", true);
    java.util.SortedSet<java.lang.String> sortedset_str31 = treeset_str11.tailSet("[]");
    boolean b32 = treeset_str1.remove((java.lang.Object)"[]");
    java.lang.Object obj33 = treeset_str1.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj33);

  }

  @Test
  public void test088() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test088"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.SortedSet<java.lang.String> sortedset_str15 = treeset_str1.tailSet("");
    java.util.Spliterator<java.lang.String> spliterator_str16 = treeset_str1.spliterator();
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array19 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str20 = new java.util.ArrayList<java.lang.String>();
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str20, str_array19);
    boolean b22 = treeset_str17.retainAll((java.util.Collection<java.lang.String>)arraylist_str20);
    boolean b24 = treeset_str17.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str26 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str25);
    java.util.SortedSet<java.lang.String> sortedset_str28 = treeset_str26.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str31 = treeset_str26.headSet("", false);
    boolean b32 = treeset_str17.retainAll((java.util.Collection<java.lang.String>)navigableset_str31);
    java.lang.String[] str_array35 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str36 = new java.util.TreeSet<java.lang.String>();
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str36, str_array35);
    java.util.NavigableSet<java.lang.String> navigableset_str38 = treeset_str36.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str39 = treeset_str36.iterator();
    java.util.Iterator<java.lang.String> iterator_str40 = treeset_str36.iterator();
    boolean b41 = treeset_str17.removeAll((java.util.Collection<java.lang.String>)treeset_str36);
    java.util.Iterator<java.lang.String> iterator_str42 = treeset_str17.iterator();
    java.lang.String str44 = treeset_str17.lower("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str47 = treeset_str17.tailSet("[]", false);
    boolean b48 = treeset_str1.contains((java.lang.Object)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);

  }

  @Test
  public void test089() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test089"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str11, str_array10);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str11.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str14 = treeset_str11.iterator();
    boolean b15 = treeset_str0.equals((java.lang.Object)iterator_str14);
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str0.headSet("", true);
    java.util.Iterator<java.lang.String> iterator_str19 = treeset_str0.descendingIterator();
    java.util.Spliterator<java.lang.String> spliterator_str20 = treeset_str0.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str20);

  }

  @Test
  public void test090() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test090"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("", false);
    java.lang.String str7 = treeset_str1.toString();
    boolean b9 = treeset_str1.remove((java.lang.Object)3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "[]"+ "'", str7.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test091() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test091"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.lang.String str4 = treeset_str1.pollFirst();
    java.lang.Object[] obj_array5 = treeset_str1.toArray();
    java.lang.String str6 = treeset_str1.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);

  }

  @Test
  public void test092() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test092"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    boolean b20 = treeset_str13.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str21);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str22.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str22.headSet("", false);
    boolean b28 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b29 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b30 = treeset_str0.equals((java.lang.Object)b29);
    java.lang.String str32 = treeset_str0.ceiling("[hi!]");
    java.lang.String str34 = treeset_str0.floor("[[hi!]]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str34);

  }

  @Test
  public void test093() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test093"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str0.subSet("", true, "[hi!]", true);
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.SortedSet<java.lang.String> sortedset_str10 = treeset_str8.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array13 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str14 = new java.util.ArrayList<java.lang.String>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str14, str_array13);
    boolean b16 = treeset_str11.retainAll((java.util.Collection<java.lang.String>)arraylist_str14);
    boolean b17 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)treeset_str11);
    java.util.NavigableSet<java.lang.String> navigableset_str20 = treeset_str8.headSet("", false);
    boolean b21 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)treeset_str8);
    java.lang.String str23 = treeset_str8.higher("[[]]");
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str24 = treeset_str8.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str23);

  }

  @Test
  public void test094() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test094"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str1.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str1.descendingSet();
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)navigableset_str18);
    java.util.Iterator<java.lang.String> iterator_str20 = treeset_str19.descendingIterator();
    treeset_str19.clear();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str22 = treeset_str19.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str20);

  }

  @Test
  public void test095() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test095"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str26 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str25);
    java.util.Iterator<java.lang.String> iterator_str27 = treeset_str26.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array30 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str31 = new java.util.ArrayList<java.lang.String>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str31, str_array30);
    boolean b33 = treeset_str28.retainAll((java.util.Collection<java.lang.String>)arraylist_str31);
    boolean b35 = treeset_str28.add("hi!");
    boolean b36 = treeset_str26.contains((java.lang.Object)"hi!");
    java.lang.String str38 = treeset_str26.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str43 = treeset_str26.subSet("[hi!]", true, "[hi!]", true);
    boolean b44 = treeset_str0.containsAll((java.util.Collection<java.lang.String>)treeset_str26);
    java.util.SortedSet<java.lang.String> sortedset_str46 = treeset_str0.tailSet("[, hi!]");
    java.util.TreeSet<java.lang.String> treeset_str47 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.Object obj48 = treeset_str0.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj48);

  }

  @Test
  public void test096() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test096"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.lang.String str4 = treeset_str1.pollFirst();
    java.util.NavigableSet<java.lang.String> navigableset_str9 = treeset_str1.subSet("", false, "[hi!]", false);
    boolean b10 = treeset_str1.isEmpty();
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array13 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str14 = new java.util.ArrayList<java.lang.String>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str14, str_array13);
    boolean b16 = treeset_str11.retainAll((java.util.Collection<java.lang.String>)arraylist_str14);
    java.lang.String str17 = treeset_str11.pollLast();
    java.util.Spliterator<java.lang.String> spliterator_str18 = treeset_str11.spliterator();
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str20 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str19);
    java.util.SortedSet<java.lang.String> sortedset_str22 = treeset_str20.tailSet("");
    java.lang.String str24 = treeset_str20.higher("");
    boolean b25 = treeset_str11.retainAll((java.util.Collection<java.lang.String>)treeset_str20);
    java.util.SortedSet<java.lang.String> sortedset_str27 = treeset_str11.tailSet("");
    boolean b28 = treeset_str1.containsAll((java.util.Collection<java.lang.String>)sortedset_str27);
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str30 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str29);
    java.lang.String str32 = treeset_str30.lower("");
    boolean b33 = treeset_str30.isEmpty();
    // The following exception was thrown during execution in test generation
    try {
    boolean b34 = treeset_str1.remove((java.lang.Object)treeset_str30);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);

  }

  @Test
  public void test097() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test097"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.SortedSet<java.lang.String> sortedset_str15 = treeset_str1.tailSet("");
    java.util.stream.Stream<java.lang.String> stream_str16 = treeset_str1.stream();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str17 = treeset_str1.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str16);

  }

  @Test
  public void test098() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test098"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str4 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array6 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str7 = new java.util.ArrayList<java.lang.String>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str7, str_array6);
    boolean b9 = treeset_str4.retainAll((java.util.Collection<java.lang.String>)arraylist_str7);
    boolean b10 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str4);
    boolean b11 = treeset_str4.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);

  }

  @Test
  public void test099() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test099"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str4 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array6 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str7 = new java.util.ArrayList<java.lang.String>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str7, str_array6);
    boolean b9 = treeset_str4.retainAll((java.util.Collection<java.lang.String>)arraylist_str7);
    boolean b10 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str4);
    java.util.Spliterator<java.lang.String> spliterator_str11 = treeset_str1.spliterator();
    java.lang.String str13 = treeset_str1.ceiling("[[]]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);

  }

  @Test
  public void test100() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test100"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str0.tailSet("[hi!]");
    java.lang.Object obj4 = treeset_str0.clone();
    java.util.Spliterator<java.lang.String> spliterator_str5 = treeset_str0.spliterator();
    java.lang.String str6 = treeset_str0.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);

  }

  @Test
  public void test101() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test101"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.Spliterator<java.lang.String> spliterator_str8 = treeset_str0.spliterator();
    java.util.Iterator<java.lang.String> iterator_str9 = treeset_str0.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str9);

  }

  @Test
  public void test102() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test102"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str11, str_array10);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str11.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str14 = treeset_str11.iterator();
    boolean b15 = treeset_str0.equals((java.lang.Object)iterator_str14);
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str0.headSet("", true);
    java.util.Iterator<java.lang.String> iterator_str19 = treeset_str0.descendingIterator();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str20 = treeset_str0.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str19);

  }

  @Test
  public void test103() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test103"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("", false);
    java.lang.String str7 = treeset_str1.pollLast();
    boolean b8 = treeset_str1.isEmpty();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str9);
    java.util.SortedSet<java.lang.String> sortedset_str12 = treeset_str10.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    boolean b19 = treeset_str10.retainAll((java.util.Collection<java.lang.String>)treeset_str13);
    java.util.NavigableSet<java.lang.String> navigableset_str22 = treeset_str10.headSet("", false);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str10.tailSet("");
    boolean b25 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str10);
    java.util.TreeSet<java.lang.String> treeset_str26 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);

  }

  @Test
  public void test104() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test104"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str1.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str1.descendingSet();
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)navigableset_str18);
    java.lang.Object obj20 = treeset_str19.clone();
    java.lang.Object[] obj_array21 = treeset_str19.toArray();
    java.lang.String str22 = treeset_str19.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str22);

  }

  @Test
  public void test105() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test105"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    boolean b20 = treeset_str13.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str21);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str22.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str22.headSet("", false);
    boolean b28 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b29 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b30 = treeset_str0.equals((java.lang.Object)b29);
    java.lang.String str32 = treeset_str0.ceiling("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str33 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    int i34 = treeset_str0.size();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str35 = treeset_str0.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);

  }

  @Test
  public void test106() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test106"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str4 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array6 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str7 = new java.util.ArrayList<java.lang.String>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str7, str_array6);
    boolean b9 = treeset_str4.retainAll((java.util.Collection<java.lang.String>)arraylist_str7);
    boolean b10 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str4);
    java.util.SortedSet<java.lang.String> sortedset_str12 = treeset_str4.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str15 = treeset_str4.tailSet("[]", false);
    // The following exception was thrown during execution in test generation
    try {
    java.util.SortedSet<java.lang.String> sortedset_str18 = treeset_str4.subSet("[]", "[[]]");
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str15);

  }

  @Test
  public void test107() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test107"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b25 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b26 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str8);
    boolean b28 = treeset_str8.add("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array31 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str32 = new java.util.ArrayList<java.lang.String>();
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str32, str_array31);
    boolean b34 = treeset_str29.retainAll((java.util.Collection<java.lang.String>)arraylist_str32);
    java.util.TreeSet<java.lang.String> treeset_str35 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str36 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str35);
    java.util.SortedSet<java.lang.String> sortedset_str38 = treeset_str36.tailSet("");
    boolean b39 = treeset_str29.equals((java.lang.Object)treeset_str36);
    java.util.TreeSet<java.lang.String> treeset_str40 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str41 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str40);
    java.util.TreeSet<java.lang.String> treeset_str42 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array44 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str45 = new java.util.ArrayList<java.lang.String>();
    boolean b46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str45, str_array44);
    boolean b47 = treeset_str42.retainAll((java.util.Collection<java.lang.String>)arraylist_str45);
    boolean b49 = treeset_str42.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str50 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str51 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str50);
    java.util.SortedSet<java.lang.String> sortedset_str53 = treeset_str51.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str56 = treeset_str51.headSet("", false);
    boolean b57 = treeset_str42.retainAll((java.util.Collection<java.lang.String>)navigableset_str56);
    boolean b58 = treeset_str41.retainAll((java.util.Collection<java.lang.String>)navigableset_str56);
    boolean b59 = treeset_str29.equals((java.lang.Object)b58);
    java.lang.String str61 = treeset_str29.ceiling("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str62 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str29);
    java.util.stream.Stream<java.lang.String> stream_str63 = treeset_str29.parallelStream();
    boolean b64 = treeset_str8.containsAll((java.util.Collection<java.lang.String>)treeset_str29);
    java.util.NavigableSet<java.lang.String> navigableset_str67 = treeset_str8.tailSet("[, hi!]", false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str67);

  }

  @Test
  public void test108() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test108"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.util.Iterator<java.lang.String> iterator_str16 = treeset_str0.descendingIterator();
    treeset_str0.clear();
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str0.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);

  }

  @Test
  public void test109() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test109"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.lang.String str6 = treeset_str3.pollLast();
    java.util.stream.Stream<java.lang.String> stream_str7 = treeset_str3.stream();
    java.util.Iterator<java.lang.String> iterator_str8 = treeset_str3.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str9);
    java.lang.String str12 = treeset_str10.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str15 = treeset_str10.headSet("hi!", true);
    java.util.stream.Stream<java.lang.String> stream_str16 = treeset_str10.stream();
    java.util.Spliterator<java.lang.String> spliterator_str17 = treeset_str10.spliterator();
    boolean b18 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str10);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str10.tailSet("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!"+ "'", str6.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);

  }

  @Test
  public void test110() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test110"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str7.tailSet("hi!", false);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array16 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str17 = new java.util.ArrayList<java.lang.String>();
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str17, str_array16);
    boolean b19 = treeset_str14.retainAll((java.util.Collection<java.lang.String>)arraylist_str17);
    java.util.stream.Stream<java.lang.String> stream_str20 = treeset_str14.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str22 = treeset_str14.headSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str14.subSet("[hi!]", true, "hi!", false);
    boolean b28 = treeset_str7.equals((java.lang.Object)false);
    java.util.SortedSet<java.lang.String> sortedset_str30 = treeset_str7.headSet("[]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str30);

  }

  @Test
  public void test111() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test111"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.lang.String str4 = treeset_str1.pollFirst();
    java.util.NavigableSet<java.lang.String> navigableset_str9 = treeset_str1.subSet("", false, "[hi!]", false);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str1.headSet("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array14 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str15 = new java.util.ArrayList<java.lang.String>();
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str15, str_array14);
    boolean b17 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)arraylist_str15);
    java.lang.String str18 = treeset_str12.pollLast();
    boolean b19 = treeset_str1.containsAll((java.util.Collection<java.lang.String>)treeset_str12);
    java.lang.String str21 = treeset_str12.floor("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str21);

  }

  @Test
  public void test112() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test112"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.lang.String str8 = treeset_str0.toString();
    java.util.NavigableSet<java.lang.String> navigableset_str11 = treeset_str0.headSet("[]", false);
    java.util.NavigableSet<java.lang.String> navigableset_str12 = treeset_str0.descendingSet();
    java.util.stream.Stream<java.lang.String> stream_str13 = navigableset_str12.parallelStream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "[hi!]"+ "'", str8.equals("[hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str13);

  }

  @Test
  public void test113() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test113"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str7.tailSet("hi!", false);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array16 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str17 = new java.util.ArrayList<java.lang.String>();
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str17, str_array16);
    boolean b19 = treeset_str14.retainAll((java.util.Collection<java.lang.String>)arraylist_str17);
    java.util.stream.Stream<java.lang.String> stream_str20 = treeset_str14.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str22 = treeset_str14.headSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str14.subSet("[hi!]", true, "hi!", false);
    boolean b28 = treeset_str7.equals((java.lang.Object)false);
    boolean b29 = treeset_str7.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);

  }

  @Test
  public void test114() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test114"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.util.Iterator<java.lang.String> iterator_str8 = treeset_str0.descendingIterator();
    boolean b10 = treeset_str0.add("");
    java.lang.Object obj11 = treeset_str0.clone();
    java.lang.String str12 = treeset_str0.last();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + ""+ "'", str12.equals(""));

  }

  @Test
  public void test115() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test115"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("", false);
    int i7 = treeset_str1.size();
    java.lang.String str9 = treeset_str1.ceiling("[]");
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array12 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str13 = new java.util.ArrayList<java.lang.String>();
    boolean b14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str13, str_array12);
    boolean b15 = treeset_str10.retainAll((java.util.Collection<java.lang.String>)arraylist_str13);
    java.lang.String str16 = treeset_str10.pollLast();
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str10.descendingIterator();
    java.util.NavigableSet<java.lang.String> navigableset_str20 = treeset_str10.tailSet("", false);
    boolean b21 = treeset_str1.equals((java.lang.Object)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);

  }

  @Test
  public void test116() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test116"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str0.tailSet("[hi!]");
    java.lang.Object obj4 = treeset_str0.clone();
    java.util.NavigableSet<java.lang.String> navigableset_str7 = treeset_str0.headSet("hi!", false);
    java.lang.String str8 = treeset_str0.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str8);

  }

  @Test
  public void test117() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test117"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b25 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b26 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str8);
    java.util.TreeSet<java.lang.String> treeset_str27 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array29 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str30 = new java.util.ArrayList<java.lang.String>();
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str30, str_array29);
    boolean b32 = treeset_str27.retainAll((java.util.Collection<java.lang.String>)arraylist_str30);
    java.lang.String str33 = treeset_str27.pollLast();
    java.util.Iterator<java.lang.String> iterator_str34 = treeset_str27.descendingIterator();
    java.lang.String[] str_array37 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str38 = new java.util.TreeSet<java.lang.String>();
    boolean b39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str38, str_array37);
    java.util.NavigableSet<java.lang.String> navigableset_str40 = treeset_str38.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str41 = treeset_str38.iterator();
    boolean b42 = treeset_str27.equals((java.lang.Object)iterator_str41);
    java.util.Iterator<java.lang.String> iterator_str43 = treeset_str27.iterator();
    boolean b44 = treeset_str8.equals((java.lang.Object)treeset_str27);
    java.util.TreeSet<java.lang.String> treeset_str45 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str8);
    java.lang.String str46 = treeset_str45.pollFirst();
    java.lang.String str47 = treeset_str45.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str47);

  }

  @Test
  public void test118() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test118"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.lang.String str8 = treeset_str0.lower("");
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    java.lang.String[] str_array27 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>();
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str28, str_array27);
    java.util.NavigableSet<java.lang.String> navigableset_str30 = treeset_str28.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str31 = treeset_str28.iterator();
    java.util.Iterator<java.lang.String> iterator_str32 = treeset_str28.iterator();
    boolean b33 = treeset_str9.removeAll((java.util.Collection<java.lang.String>)treeset_str28);
    java.util.Iterator<java.lang.String> iterator_str34 = treeset_str9.iterator();
    java.util.TreeSet<java.lang.String> treeset_str35 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str36 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str35);
    java.util.Iterator<java.lang.String> iterator_str37 = treeset_str36.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str38 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array40 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str41 = new java.util.ArrayList<java.lang.String>();
    boolean b42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str41, str_array40);
    boolean b43 = treeset_str38.retainAll((java.util.Collection<java.lang.String>)arraylist_str41);
    boolean b45 = treeset_str38.add("hi!");
    boolean b46 = treeset_str36.contains((java.lang.Object)"hi!");
    java.lang.String str48 = treeset_str36.ceiling("hi!");
    treeset_str36.clear();
    java.util.TreeSet<java.lang.String> treeset_str50 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str51 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str50);
    java.util.Iterator<java.lang.String> iterator_str52 = treeset_str51.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str53 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array55 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str56 = new java.util.ArrayList<java.lang.String>();
    boolean b57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str56, str_array55);
    boolean b58 = treeset_str53.retainAll((java.util.Collection<java.lang.String>)arraylist_str56);
    boolean b60 = treeset_str53.add("hi!");
    boolean b61 = treeset_str51.contains((java.lang.Object)"hi!");
    java.lang.String str63 = treeset_str51.ceiling("hi!");
    java.util.TreeSet<java.lang.String> treeset_str64 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str65 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str64);
    java.util.SortedSet<java.lang.String> sortedset_str67 = treeset_str65.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str70 = treeset_str65.headSet("", false);
    java.util.SortedSet[] sortedSet_array72 = new java.util.SortedSet[ 4 ];
    @SuppressWarnings("unchecked")
    java.util.SortedSet<java.lang.String>[] sortedset_str_array73 = (java.util.SortedSet<java.lang.String>[])sortedSet_array72;
    sortedset_str_array73[0] = treeset_str9;
    sortedset_str_array73[1] = treeset_str36;
    sortedset_str_array73[2] = treeset_str51;
    sortedset_str_array73[3] = treeset_str65;
    java.util.SortedSet<java.lang.String>[] sortedset_str_array82 = treeset_str0.toArray(sortedset_str_array73);
    int i83 = treeset_str0.size();
    boolean b85 = treeset_str0.add("[hi!]");
    java.lang.String str87 = treeset_str0.higher("[[hi!]]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i83 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b85 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str87 + "' != '" + "[hi!]"+ "'", str87.equals("[hi!]"));

  }

  @Test
  public void test119() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test119"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.SortedSet<java.lang.String> sortedset_str15 = treeset_str1.tailSet("");
    java.util.Spliterator<java.lang.String> spliterator_str16 = treeset_str1.spliterator();
    java.util.Comparator<? super java.lang.String> comparator_wildcard17 = treeset_str1.comparator();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array20 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str21 = new java.util.ArrayList<java.lang.String>();
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str21, str_array20);
    boolean b23 = treeset_str18.retainAll((java.util.Collection<java.lang.String>)arraylist_str21);
    java.lang.String str24 = treeset_str18.pollLast();
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str18.descendingIterator();
    java.lang.String[] str_array28 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>();
    boolean b30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str29, str_array28);
    java.util.NavigableSet<java.lang.String> navigableset_str31 = treeset_str29.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str32 = treeset_str29.iterator();
    boolean b33 = treeset_str18.equals((java.lang.Object)iterator_str32);
    java.lang.CharSequence[] charSequence_array38 = new java.lang.CharSequence[] { "[]", "[]", "[]", "" };
    java.lang.CharSequence[] charSequence_array39 = treeset_str18.toArray(charSequence_array38);
    java.lang.CharSequence[] charSequence_array40 = treeset_str1.toArray(charSequence_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(charSequence_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(charSequence_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(charSequence_array40);

  }

  @Test
  public void test120() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test120"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str11, str_array10);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str11.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str14 = treeset_str11.iterator();
    boolean b15 = treeset_str0.equals((java.lang.Object)iterator_str14);
    java.util.Iterator<java.lang.String> iterator_str16 = treeset_str0.iterator();
    java.lang.String str18 = treeset_str0.lower("[hi!]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str18);

  }

  @Test
  public void test121() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test121"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.lang.String str7 = treeset_str3.ceiling("[hi!]");
    java.util.Spliterator<java.lang.String> spliterator_str8 = treeset_str3.spliterator();
    java.lang.String str9 = treeset_str3.last();
    java.lang.String str10 = treeset_str3.toString();
    java.lang.Object[] obj_array11 = treeset_str3.toArray();
    // The following exception was thrown during execution in test generation
    try {
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str3.subSet("[hi!]", false, "[[hi!]]", true);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hi!"+ "'", str7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!"+ "'", str9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "[, hi!]"+ "'", str10.equals("[, hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);

  }

  @Test
  public void test122() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test122"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.lang.String str26 = treeset_str0.floor("[, hi!]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str26);

  }

  @Test
  public void test123() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test123"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str8 = treeset_str0.headSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str0.subSet("[hi!]", true, "hi!", false);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str14);
    java.lang.String str17 = treeset_str15.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str20 = treeset_str15.headSet("hi!", true);
    boolean b21 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str15);
    java.util.stream.Stream<java.lang.String> stream_str22 = treeset_str0.parallelStream();
    java.lang.String str24 = treeset_str0.lower("[, hi!]");
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str26 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str25);
    java.util.SortedSet<java.lang.String> sortedset_str28 = treeset_str26.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array31 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str32 = new java.util.ArrayList<java.lang.String>();
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str32, str_array31);
    boolean b34 = treeset_str29.retainAll((java.util.Collection<java.lang.String>)arraylist_str32);
    boolean b35 = treeset_str26.retainAll((java.util.Collection<java.lang.String>)treeset_str29);
    java.util.NavigableSet<java.lang.String> navigableset_str38 = treeset_str26.headSet("", false);
    java.util.SortedSet<java.lang.String> sortedset_str40 = treeset_str26.tailSet("");
    boolean b41 = treeset_str0.remove((java.lang.Object)"");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);

  }

  @Test
  public void test124() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test124"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str12 = treeset_str1.toString();
    // The following exception was thrown during execution in test generation
    try {
    java.util.SortedSet<java.lang.String> sortedset_str15 = treeset_str1.subSet("[[hi!]]", "");
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "[]"+ "'", str12.equals("[]"));

  }

  @Test
  public void test125() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test125"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str7.tailSet("hi!", false);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str7);
    java.lang.Object[] obj_array15 = treeset_str7.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);

  }

  @Test
  public void test126() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test126"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str4 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array6 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str7 = new java.util.ArrayList<java.lang.String>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str7, str_array6);
    boolean b9 = treeset_str4.retainAll((java.util.Collection<java.lang.String>)arraylist_str7);
    boolean b10 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str4);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str1.headSet("", false);
    java.util.SortedSet<java.lang.String> sortedset_str15 = treeset_str1.tailSet("");
    boolean b17 = treeset_str1.add("[]");
    java.lang.String str19 = treeset_str1.floor("[hi!]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "[]"+ "'", str19.equals("[]"));

  }

  @Test
  public void test127() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test127"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.lang.String str4 = treeset_str1.pollFirst();
    java.util.TreeSet<java.lang.String> treeset_str5 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str1);
    java.util.Collection<java.lang.String> collection_str6 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b7 = treeset_str1.removeAll(collection_str6);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);

  }

  @Test
  public void test128() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test128"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.stream.Stream<java.lang.String> stream_str11 = treeset_str0.stream();
    java.util.Iterator<java.lang.String> iterator_str12 = treeset_str0.descendingIterator();
    // The following exception was thrown during execution in test generation
    try {
    java.util.NavigableSet<java.lang.String> navigableset_str17 = treeset_str0.subSet("[[hi!]]", true, "", true);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str12);

  }

  @Test
  public void test129() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test129"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str0.iterator();
    java.lang.String str27 = treeset_str0.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array31 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str32 = new java.util.ArrayList<java.lang.String>();
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str32, str_array31);
    boolean b34 = treeset_str29.retainAll((java.util.Collection<java.lang.String>)arraylist_str32);
    java.lang.String str35 = treeset_str29.pollLast();
    java.util.Iterator<java.lang.String> iterator_str36 = treeset_str29.descendingIterator();
    java.util.Iterator<java.lang.String> iterator_str37 = treeset_str29.descendingIterator();
    boolean b38 = treeset_str28.retainAll((java.util.Collection<java.lang.String>)treeset_str29);
    java.lang.Object obj39 = treeset_str28.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj39);

  }

  @Test
  public void test130() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test130"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str0.tailSet("hi!", true);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    boolean b13 = treeset_str11.add("[]");
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str14);
    java.lang.String str17 = treeset_str15.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str20 = treeset_str15.headSet("hi!", true);
    treeset_str15.clear();
    boolean b22 = treeset_str11.equals((java.lang.Object)treeset_str15);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str11.tailSet("[, hi!]");
    java.lang.String str26 = treeset_str11.lower("[[hi!]]");
    java.lang.Object obj27 = treeset_str11.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj27);

  }

  @Test
  public void test131() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test131"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str0.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str26 = treeset_str0.descendingSet();
    java.lang.String str27 = treeset_str0.pollFirst();
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str28);
    java.util.SortedSet<java.lang.String> sortedset_str31 = treeset_str29.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str32 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array34 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str35 = new java.util.ArrayList<java.lang.String>();
    boolean b36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str35, str_array34);
    boolean b37 = treeset_str32.retainAll((java.util.Collection<java.lang.String>)arraylist_str35);
    boolean b38 = treeset_str29.retainAll((java.util.Collection<java.lang.String>)treeset_str32);
    java.util.NavigableSet<java.lang.String> navigableset_str41 = treeset_str29.headSet("", false);
    java.lang.String str42 = treeset_str29.pollFirst();
    boolean b43 = treeset_str0.containsAll((java.util.Collection<java.lang.String>)treeset_str29);
    java.util.Iterator<java.lang.String> iterator_str44 = treeset_str0.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str44);

  }

  @Test
  public void test132() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test132"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array10 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str11 = new java.util.ArrayList<java.lang.String>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str11, str_array10);
    boolean b13 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)arraylist_str11);
    java.util.stream.Stream<java.lang.String> stream_str14 = treeset_str8.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str16 = treeset_str8.headSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str8.subSet("[hi!]", true, "hi!", false);
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>();
    treeset_str22.clear();
    java.util.Iterator<java.lang.String> iterator_str24 = treeset_str22.iterator();
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array27 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str28 = new java.util.ArrayList<java.lang.String>();
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str28, str_array27);
    boolean b30 = treeset_str25.retainAll((java.util.Collection<java.lang.String>)arraylist_str28);
    boolean b32 = treeset_str25.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str33 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str34 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str33);
    java.util.SortedSet<java.lang.String> sortedset_str36 = treeset_str34.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str39 = treeset_str34.headSet("", false);
    boolean b40 = treeset_str25.retainAll((java.util.Collection<java.lang.String>)navigableset_str39);
    java.lang.String[] str_array43 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str44 = new java.util.TreeSet<java.lang.String>();
    boolean b45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str44, str_array43);
    java.util.NavigableSet<java.lang.String> navigableset_str46 = treeset_str44.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str47 = treeset_str44.iterator();
    java.util.Iterator<java.lang.String> iterator_str48 = treeset_str44.iterator();
    boolean b49 = treeset_str25.removeAll((java.util.Collection<java.lang.String>)treeset_str44);
    java.util.Iterator<java.lang.String> iterator_str50 = treeset_str25.iterator();
    java.util.TreeSet<java.lang.String> treeset_str51 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str52 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str51);
    java.util.SortedSet<java.lang.String> sortedset_str54 = treeset_str52.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str57 = treeset_str52.headSet("", false);
    int i58 = treeset_str52.size();
    java.util.Iterator<java.lang.String> iterator_str59 = treeset_str52.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str60 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array62 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str63 = new java.util.ArrayList<java.lang.String>();
    boolean b64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str63, str_array62);
    boolean b65 = treeset_str60.retainAll((java.util.Collection<java.lang.String>)arraylist_str63);
    java.lang.String str66 = treeset_str60.pollLast();
    java.util.Iterator<java.lang.String> iterator_str67 = treeset_str60.descendingIterator();
    java.util.Iterator<java.lang.String> iterator_str68 = treeset_str60.descendingIterator();
    java.util.Iterator[] iterator_array70 = new java.util.Iterator[ 4 ];
    @SuppressWarnings("unchecked")
    java.util.Iterator<java.lang.String>[] iterator_str_array71 = (java.util.Iterator<java.lang.String>[])iterator_array70;
    iterator_str_array71[0] = iterator_str24;
    iterator_str_array71[1] = iterator_str50;
    iterator_str_array71[2] = iterator_str59;
    iterator_str_array71[3] = iterator_str68;
    java.util.Iterator<java.lang.String>[] iterator_str_array80 = treeset_str8.toArray(iterator_str_array71);
    // The following exception was thrown during execution in test generation
    try {
    java.util.Iterator<java.lang.String>[] iterator_str_array81 = treeset_str0.toArray(iterator_str_array80);
      org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException");
    } catch (java.lang.ArrayStoreException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i58 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_array70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str_array71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str_array80);

  }

  @Test
  public void test133() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test133"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str1.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str1.descendingSet();
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)navigableset_str18);
    java.util.Iterator<java.lang.String> iterator_str20 = treeset_str19.descendingIterator();
    treeset_str19.clear();
    java.util.Comparator<? super java.lang.String> comparator_wildcard22 = treeset_str19.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard22);

  }

  @Test
  public void test134() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test134"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.stream.Stream<java.lang.String> stream_str11 = treeset_str0.stream();
    boolean b13 = treeset_str0.add("[]");
    java.lang.Object[] obj_array14 = treeset_str0.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);

  }

  @Test
  public void test135() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test135"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    boolean b20 = treeset_str13.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str21);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str22.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str22.headSet("", false);
    boolean b28 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b29 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b30 = treeset_str0.equals((java.lang.Object)b29);
    java.lang.String str32 = treeset_str0.ceiling("[hi!]");
    java.util.Iterator<java.lang.String> iterator_str33 = treeset_str0.iterator();
    java.util.SortedSet<java.lang.String> sortedset_str36 = treeset_str0.subSet("", "hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str37 = treeset_str0.descendingSet();
    java.util.stream.Stream<java.lang.String> stream_str38 = navigableset_str37.stream();
    java.util.stream.Stream<java.lang.String> stream_str39 = navigableset_str37.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str39);

  }

  @Test
  public void test136() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test136"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str1.iterator();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str1);
    boolean b19 = treeset_str1.isEmpty();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str20 = treeset_str1.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);

  }

  @Test
  public void test137() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test137"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b25 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b26 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str8);
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str3.descendingSet();
    java.util.stream.Stream<java.lang.String> stream_str28 = navigableset_str27.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str28);

  }

  @Test
  public void test138() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test138"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    // The following exception was thrown during execution in test generation
    try {
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str0.subSet("[[hi!]]", false, "", true);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  @Test
  public void test139() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test139"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.lang.String str7 = treeset_str3.ceiling("[hi!]");
    java.util.Spliterator<java.lang.String> spliterator_str8 = treeset_str3.spliterator();
    java.lang.String str9 = treeset_str3.last();
    java.lang.String[] str_array12 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    boolean b14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str13, str_array12);
    java.util.NavigableSet<java.lang.String> navigableset_str15 = treeset_str13.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str16 = treeset_str13.iterator();
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array21 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str22 = new java.util.ArrayList<java.lang.String>();
    boolean b23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str22, str_array21);
    boolean b24 = treeset_str19.retainAll((java.util.Collection<java.lang.String>)arraylist_str22);
    boolean b26 = treeset_str19.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str27 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str27);
    java.util.SortedSet<java.lang.String> sortedset_str30 = treeset_str28.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str33 = treeset_str28.headSet("", false);
    boolean b34 = treeset_str19.retainAll((java.util.Collection<java.lang.String>)navigableset_str33);
    boolean b35 = treeset_str18.retainAll((java.util.Collection<java.lang.String>)navigableset_str33);
    boolean b36 = treeset_str13.removeAll((java.util.Collection<java.lang.String>)treeset_str18);
    java.util.TreeSet<java.lang.String> treeset_str37 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array39 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str40 = new java.util.ArrayList<java.lang.String>();
    boolean b41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str40, str_array39);
    boolean b42 = treeset_str37.retainAll((java.util.Collection<java.lang.String>)arraylist_str40);
    java.lang.String str43 = treeset_str37.pollLast();
    java.util.Iterator<java.lang.String> iterator_str44 = treeset_str37.descendingIterator();
    java.lang.String[] str_array47 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str48 = new java.util.TreeSet<java.lang.String>();
    boolean b49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str48, str_array47);
    java.util.NavigableSet<java.lang.String> navigableset_str50 = treeset_str48.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str51 = treeset_str48.iterator();
    boolean b52 = treeset_str37.equals((java.lang.Object)iterator_str51);
    java.util.Iterator<java.lang.String> iterator_str53 = treeset_str37.iterator();
    boolean b54 = treeset_str18.equals((java.lang.Object)treeset_str37);
    java.util.SortedSet<java.lang.String> sortedset_str56 = treeset_str18.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str57 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str58 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str57);
    java.util.Iterator<java.lang.String> iterator_str59 = treeset_str58.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str60 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array62 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str63 = new java.util.ArrayList<java.lang.String>();
    boolean b64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str63, str_array62);
    boolean b65 = treeset_str60.retainAll((java.util.Collection<java.lang.String>)arraylist_str63);
    boolean b67 = treeset_str60.add("hi!");
    boolean b68 = treeset_str58.contains((java.lang.Object)"hi!");
    java.lang.String str70 = treeset_str58.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str73 = treeset_str58.headSet("", false);
    boolean b74 = treeset_str18.remove((java.lang.Object)"");
    boolean b75 = treeset_str3.equals((java.lang.Object)"");
    java.lang.String str77 = treeset_str3.floor("[hi!]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hi!"+ "'", str7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!"+ "'", str9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str77 + "' != '" + ""+ "'", str77.equals(""));

  }

  @Test
  public void test140() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test140"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str1.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str1.descendingSet();
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)navigableset_str18);
    java.util.TreeSet<java.lang.String> treeset_str20 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str20);
    java.util.SortedSet<java.lang.String> sortedset_str23 = treeset_str20.tailSet("[hi!]");
    java.lang.Object obj24 = treeset_str20.clone();
    boolean b25 = treeset_str19.retainAll((java.util.Collection<java.lang.String>)treeset_str20);
    java.util.Comparator<? super java.lang.String> comparator_wildcard26 = treeset_str19.comparator();
    java.util.TreeSet<java.lang.String> treeset_str27 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard26);

  }

  @Test
  public void test141() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test141"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str0.iterator();
    java.lang.String str27 = treeset_str0.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    java.lang.String str29 = treeset_str28.pollFirst();
    java.util.TreeSet<java.lang.String> treeset_str30 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array32 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str33 = new java.util.ArrayList<java.lang.String>();
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str33, str_array32);
    boolean b35 = treeset_str30.retainAll((java.util.Collection<java.lang.String>)arraylist_str33);
    boolean b37 = treeset_str30.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str38 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str39 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str38);
    java.util.SortedSet<java.lang.String> sortedset_str41 = treeset_str39.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str44 = treeset_str39.headSet("", false);
    boolean b45 = treeset_str30.retainAll((java.util.Collection<java.lang.String>)navigableset_str44);
    java.util.Iterator<java.lang.String> iterator_str46 = treeset_str30.descendingIterator();
    boolean b47 = treeset_str28.equals((java.lang.Object)treeset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);

  }

  @Test
  public void test142() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test142"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Spliterator<java.lang.String> spliterator_str7 = treeset_str0.spliterator();
    java.util.stream.Stream[] stream_array9 = new java.util.stream.Stream[ 0 ];
    @SuppressWarnings("unchecked")
    java.util.stream.Stream<java.lang.String>[] stream_str_array10 = (java.util.stream.Stream<java.lang.String>[])stream_array9;
    java.util.stream.Stream<java.lang.String>[] stream_str_array11 = treeset_str0.toArray(stream_str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str_array11);

  }

  @Test
  public void test143() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test143"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str11, str_array10);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str11.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str14 = treeset_str11.iterator();
    boolean b15 = treeset_str0.equals((java.lang.Object)iterator_str14);
    java.util.Iterator<java.lang.String> iterator_str16 = treeset_str0.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str19 = treeset_str0.headSet("hi!", true);
    boolean b21 = treeset_str0.add("[hi!]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);

  }

  @Test
  public void test144() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test144"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str9);
    java.util.SortedSet<java.lang.String> sortedset_str12 = treeset_str10.tailSet("");
    boolean b13 = treeset_str3.equals((java.lang.Object)treeset_str10);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str14);
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str19 = new java.util.ArrayList<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str19, str_array18);
    boolean b21 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)arraylist_str19);
    boolean b23 = treeset_str16.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str24 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str24);
    java.util.SortedSet<java.lang.String> sortedset_str27 = treeset_str25.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str30 = treeset_str25.headSet("", false);
    boolean b31 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)navigableset_str30);
    boolean b32 = treeset_str15.retainAll((java.util.Collection<java.lang.String>)navigableset_str30);
    boolean b33 = treeset_str3.equals((java.lang.Object)b32);
    java.lang.String str35 = treeset_str3.ceiling("[hi!]");
    boolean b36 = treeset_str1.addAll((java.util.Collection<java.lang.String>)treeset_str3);
    java.lang.String str38 = treeset_str1.floor("[]");
    java.util.SortedSet<java.lang.String> sortedset_str41 = treeset_str1.subSet("", "[, hi!]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str41);

  }

  @Test
  public void test145() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test145"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str0.tailSet("hi!", true);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    boolean b13 = treeset_str11.add("[]");
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str14);
    java.lang.String str17 = treeset_str15.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str20 = treeset_str15.headSet("hi!", true);
    treeset_str15.clear();
    boolean b22 = treeset_str11.equals((java.lang.Object)treeset_str15);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str11.tailSet("[, hi!]");
    // The following exception was thrown during execution in test generation
    try {
    boolean b26 = treeset_str11.contains((java.lang.Object)0);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);

  }

  @Test
  public void test146() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test146"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str0.iterator();
    java.lang.String str27 = treeset_str0.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array31 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str32 = new java.util.ArrayList<java.lang.String>();
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str32, str_array31);
    boolean b34 = treeset_str29.retainAll((java.util.Collection<java.lang.String>)arraylist_str32);
    java.lang.String str35 = treeset_str29.pollLast();
    java.util.Iterator<java.lang.String> iterator_str36 = treeset_str29.descendingIterator();
    java.util.Iterator<java.lang.String> iterator_str37 = treeset_str29.descendingIterator();
    boolean b38 = treeset_str28.retainAll((java.util.Collection<java.lang.String>)treeset_str29);
    java.lang.String str40 = treeset_str28.lower("[]");
    java.util.Iterator<java.lang.String> iterator_str41 = treeset_str28.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str41);

  }

  @Test
  public void test147() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test147"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.lang.String str8 = treeset_str0.lower("");
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    java.lang.String[] str_array27 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>();
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str28, str_array27);
    java.util.NavigableSet<java.lang.String> navigableset_str30 = treeset_str28.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str31 = treeset_str28.iterator();
    java.util.Iterator<java.lang.String> iterator_str32 = treeset_str28.iterator();
    boolean b33 = treeset_str9.removeAll((java.util.Collection<java.lang.String>)treeset_str28);
    java.util.Iterator<java.lang.String> iterator_str34 = treeset_str9.iterator();
    java.util.TreeSet<java.lang.String> treeset_str35 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str36 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str35);
    java.util.Iterator<java.lang.String> iterator_str37 = treeset_str36.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str38 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array40 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str41 = new java.util.ArrayList<java.lang.String>();
    boolean b42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str41, str_array40);
    boolean b43 = treeset_str38.retainAll((java.util.Collection<java.lang.String>)arraylist_str41);
    boolean b45 = treeset_str38.add("hi!");
    boolean b46 = treeset_str36.contains((java.lang.Object)"hi!");
    java.lang.String str48 = treeset_str36.ceiling("hi!");
    treeset_str36.clear();
    java.util.TreeSet<java.lang.String> treeset_str50 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str51 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str50);
    java.util.Iterator<java.lang.String> iterator_str52 = treeset_str51.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str53 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array55 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str56 = new java.util.ArrayList<java.lang.String>();
    boolean b57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str56, str_array55);
    boolean b58 = treeset_str53.retainAll((java.util.Collection<java.lang.String>)arraylist_str56);
    boolean b60 = treeset_str53.add("hi!");
    boolean b61 = treeset_str51.contains((java.lang.Object)"hi!");
    java.lang.String str63 = treeset_str51.ceiling("hi!");
    java.util.TreeSet<java.lang.String> treeset_str64 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str65 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str64);
    java.util.SortedSet<java.lang.String> sortedset_str67 = treeset_str65.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str70 = treeset_str65.headSet("", false);
    java.util.SortedSet[] sortedSet_array72 = new java.util.SortedSet[ 4 ];
    @SuppressWarnings("unchecked")
    java.util.SortedSet<java.lang.String>[] sortedset_str_array73 = (java.util.SortedSet<java.lang.String>[])sortedSet_array72;
    sortedset_str_array73[0] = treeset_str9;
    sortedset_str_array73[1] = treeset_str36;
    sortedset_str_array73[2] = treeset_str51;
    sortedset_str_array73[3] = treeset_str65;
    java.util.SortedSet<java.lang.String>[] sortedset_str_array82 = treeset_str0.toArray(sortedset_str_array73);
    java.util.Spliterator<java.lang.String> spliterator_str83 = treeset_str0.spliterator();
    java.util.NavigableSet<java.lang.String> navigableset_str88 = treeset_str0.subSet("", true, "[hi!]", true);
    java.lang.String str89 = treeset_str0.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str83);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str88);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str89);

  }

  @Test
  public void test148() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test148"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.SortedSet<java.lang.String> sortedset_str15 = treeset_str1.tailSet("");
    java.util.stream.Stream<java.lang.String> stream_str16 = treeset_str1.stream();
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str1);
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array20 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str21 = new java.util.ArrayList<java.lang.String>();
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str21, str_array20);
    boolean b23 = treeset_str18.retainAll((java.util.Collection<java.lang.String>)arraylist_str21);
    java.util.stream.Stream<java.lang.String> stream_str24 = treeset_str18.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str26 = treeset_str18.headSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str31 = treeset_str18.subSet("[hi!]", true, "hi!", false);
    java.util.TreeSet<java.lang.String> treeset_str32 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str33 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str32);
    java.lang.String str35 = treeset_str33.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str38 = treeset_str33.headSet("hi!", true);
    boolean b39 = treeset_str18.removeAll((java.util.Collection<java.lang.String>)treeset_str33);
    java.util.stream.Stream<java.lang.String> stream_str40 = treeset_str18.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str43 = treeset_str18.subSet("[]", "[]");
    boolean b44 = treeset_str17.contains((java.lang.Object)"[]");
    java.lang.String str45 = treeset_str17.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str45);

  }

  @Test
  public void test149() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test149"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    boolean b20 = treeset_str13.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str21);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str22.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str22.headSet("", false);
    boolean b28 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b29 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b30 = treeset_str0.equals((java.lang.Object)b29);
    java.lang.String str32 = treeset_str0.ceiling("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str33 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    int i34 = treeset_str0.size();
    java.util.Spliterator<java.lang.String> spliterator_str35 = treeset_str0.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str35);

  }

  @Test
  public void test150() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test150"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b25 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b26 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str8);
    boolean b28 = treeset_str8.add("[hi!]");
    java.util.NavigableSet<java.lang.String> navigableset_str31 = treeset_str8.headSet("", false);
    java.util.TreeSet<java.lang.String> treeset_str32 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array34 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str35 = new java.util.ArrayList<java.lang.String>();
    boolean b36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str35, str_array34);
    boolean b37 = treeset_str32.retainAll((java.util.Collection<java.lang.String>)arraylist_str35);
    java.util.stream.Stream<java.lang.String> stream_str38 = treeset_str32.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str40 = treeset_str32.headSet("");
    boolean b41 = treeset_str8.removeAll((java.util.Collection<java.lang.String>)treeset_str32);
    int i42 = treeset_str32.size();
    java.util.Iterator<java.lang.String> iterator_str43 = treeset_str32.iterator();
    java.lang.String str44 = treeset_str32.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str44 + "' != '" + "[]"+ "'", str44.equals("[]"));

  }

  @Test
  public void test151() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test151"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    boolean b20 = treeset_str13.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str21);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str22.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str22.headSet("", false);
    boolean b28 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b29 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b30 = treeset_str0.equals((java.lang.Object)b29);
    java.lang.String str32 = treeset_str0.ceiling("[hi!]");
    java.util.Iterator<java.lang.String> iterator_str33 = treeset_str0.iterator();
    java.util.SortedSet<java.lang.String> sortedset_str36 = treeset_str0.subSet("", "hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str37 = treeset_str0.descendingSet();
    java.lang.String str38 = treeset_str0.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str38);

  }

  @Test
  public void test152() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test152"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("hi!", true);
    treeset_str1.clear();
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str1.headSet("hi!", true);
    treeset_str1.clear();
    java.lang.String str13 = treeset_str1.higher("[, hi!]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);

  }

  @Test
  public void test153() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test153"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str2 = treeset_str1.toString();
    java.lang.String str4 = treeset_str1.lower("[]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "[]"+ "'", str2.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);

  }

  @Test
  public void test154() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test154"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str9);
    java.util.SortedSet<java.lang.String> sortedset_str12 = treeset_str10.tailSet("");
    boolean b13 = treeset_str3.equals((java.lang.Object)treeset_str10);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str14);
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str19 = new java.util.ArrayList<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str19, str_array18);
    boolean b21 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)arraylist_str19);
    boolean b23 = treeset_str16.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str24 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str24);
    java.util.SortedSet<java.lang.String> sortedset_str27 = treeset_str25.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str30 = treeset_str25.headSet("", false);
    boolean b31 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)navigableset_str30);
    boolean b32 = treeset_str15.retainAll((java.util.Collection<java.lang.String>)navigableset_str30);
    boolean b33 = treeset_str3.equals((java.lang.Object)b32);
    java.lang.String str35 = treeset_str3.ceiling("[hi!]");
    boolean b36 = treeset_str1.addAll((java.util.Collection<java.lang.String>)treeset_str3);
    java.lang.String str38 = treeset_str1.floor("[]");
    java.util.Comparator<? super java.lang.String> comparator_wildcard39 = treeset_str1.comparator();
    java.util.TreeSet<java.lang.String> treeset_str40 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array42 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str43 = new java.util.ArrayList<java.lang.String>();
    boolean b44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str43, str_array42);
    boolean b45 = treeset_str40.retainAll((java.util.Collection<java.lang.String>)arraylist_str43);
    boolean b47 = treeset_str40.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str48 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str49 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str48);
    java.util.SortedSet<java.lang.String> sortedset_str51 = treeset_str49.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str54 = treeset_str49.headSet("", false);
    boolean b55 = treeset_str40.retainAll((java.util.Collection<java.lang.String>)navigableset_str54);
    java.lang.String[] str_array58 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str59 = new java.util.TreeSet<java.lang.String>();
    boolean b60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str59, str_array58);
    java.util.NavigableSet<java.lang.String> navigableset_str61 = treeset_str59.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str62 = treeset_str59.iterator();
    java.util.Iterator<java.lang.String> iterator_str63 = treeset_str59.iterator();
    boolean b64 = treeset_str40.removeAll((java.util.Collection<java.lang.String>)treeset_str59);
    java.util.Iterator<java.lang.String> iterator_str65 = treeset_str40.iterator();
    java.lang.String str67 = treeset_str40.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str68 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str40);
    java.util.NavigableSet<java.lang.String> navigableset_str71 = treeset_str68.headSet("[hi!]", true);
    boolean b72 = treeset_str1.removeAll((java.util.Collection<java.lang.String>)treeset_str68);
    java.util.TreeSet<java.lang.String> treeset_str73 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str74 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str73);
    java.util.NavigableSet<java.lang.String> navigableset_str79 = treeset_str73.subSet("", true, "[hi!]", true);
    java.lang.String str80 = treeset_str73.pollLast();
    java.lang.String str81 = treeset_str73.pollLast();
    boolean b82 = treeset_str68.containsAll((java.util.Collection<java.lang.String>)treeset_str73);
    java.util.TreeSet<java.lang.String> treeset_str83 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str84 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str83);
    // The following exception was thrown during execution in test generation
    try {
    boolean b85 = treeset_str68.remove((java.lang.Object)treeset_str83);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str79);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str81);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b82 == true);

  }

  @Test
  public void test155() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test155"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.lang.String str4 = treeset_str1.pollFirst();
    java.util.TreeSet<java.lang.String> treeset_str5 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str1);
    java.util.SortedSet<java.lang.String> sortedset_str8 = treeset_str1.subSet("[]", "[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str9);
    java.lang.String str12 = treeset_str10.lower("");
    boolean b13 = treeset_str10.isEmpty();
    boolean b14 = treeset_str1.contains((java.lang.Object)b13);
    java.lang.String str15 = treeset_str1.pollFirst();
    java.lang.String str16 = treeset_str1.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str16);

  }

  @Test
  public void test156() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test156"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.stream.Stream<java.lang.String> stream_str11 = treeset_str0.stream();
    java.util.Iterator<java.lang.String> iterator_str12 = treeset_str0.descendingIterator();
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str0.descendingSet();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str16, str_array15);
    int i18 = treeset_str16.size();
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str16);
    boolean b20 = treeset_str0.addAll((java.util.Collection<java.lang.String>)treeset_str19);
    treeset_str19.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);

  }

  @Test
  public void test157() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test157"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str8 = treeset_str0.headSet("[[]]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str8);

  }

  @Test
  public void test158() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test158"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str0.tailSet("hi!", true);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    java.lang.String str12 = treeset_str0.last();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!"+ "'", str12.equals("hi!"));

  }

  @Test
  public void test159() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test159"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String[] str_array4 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str5 = new java.util.TreeSet<java.lang.String>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str5, str_array4);
    java.util.NavigableSet<java.lang.String> navigableset_str7 = treeset_str5.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str8 = treeset_str5.iterator();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str9);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array13 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str14 = new java.util.ArrayList<java.lang.String>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str14, str_array13);
    boolean b16 = treeset_str11.retainAll((java.util.Collection<java.lang.String>)arraylist_str14);
    boolean b18 = treeset_str11.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str20 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str19);
    java.util.SortedSet<java.lang.String> sortedset_str22 = treeset_str20.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str25 = treeset_str20.headSet("", false);
    boolean b26 = treeset_str11.retainAll((java.util.Collection<java.lang.String>)navigableset_str25);
    boolean b27 = treeset_str10.retainAll((java.util.Collection<java.lang.String>)navigableset_str25);
    boolean b28 = treeset_str5.removeAll((java.util.Collection<java.lang.String>)treeset_str10);
    java.util.SortedSet<java.lang.String> sortedset_str30 = treeset_str10.tailSet("hi!");
    boolean b31 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str10);
    java.util.TreeSet<java.lang.String> treeset_str32 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array34 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str35 = new java.util.ArrayList<java.lang.String>();
    boolean b36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str35, str_array34);
    boolean b37 = treeset_str32.retainAll((java.util.Collection<java.lang.String>)arraylist_str35);
    boolean b39 = treeset_str32.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str40 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str41 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str40);
    java.util.SortedSet<java.lang.String> sortedset_str43 = treeset_str41.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str46 = treeset_str41.headSet("", false);
    boolean b47 = treeset_str32.retainAll((java.util.Collection<java.lang.String>)navigableset_str46);
    java.lang.String[] str_array50 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str51 = new java.util.TreeSet<java.lang.String>();
    boolean b52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str51, str_array50);
    java.util.NavigableSet<java.lang.String> navigableset_str53 = treeset_str51.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str54 = treeset_str51.iterator();
    java.util.Iterator<java.lang.String> iterator_str55 = treeset_str51.iterator();
    boolean b56 = treeset_str32.removeAll((java.util.Collection<java.lang.String>)treeset_str51);
    java.util.Iterator<java.lang.String> iterator_str57 = treeset_str32.iterator();
    java.lang.String str59 = treeset_str32.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str60 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str32);
    int i61 = treeset_str32.size();
    boolean b62 = treeset_str0.addAll((java.util.Collection<java.lang.String>)treeset_str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i61 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);

  }

  @Test
  public void test160() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test160"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str1.iterator();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str1);
    java.lang.String str20 = treeset_str1.higher("[, hi!]");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str1);
    int i22 = treeset_str21.size();
    java.lang.String str23 = treeset_str21.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "[]"+ "'", str23.equals("[]"));

  }

  @Test
  public void test161() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test161"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.util.Iterator<java.lang.String> iterator_str8 = treeset_str0.descendingIterator();
    java.lang.String str9 = treeset_str0.pollFirst();
    java.lang.Object[] obj_array10 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array11 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array12 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array13 = new java.lang.Object[] {  };
    java.lang.Object[][] obj_array_array14 = new java.lang.Object[][] { obj_array10, obj_array11, obj_array12, obj_array13 };
    java.lang.Object[][] obj_array_array15 = treeset_str0.toArray(obj_array_array14);
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str19 = new java.util.ArrayList<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str19, str_array18);
    boolean b21 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)arraylist_str19);
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str23 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str22);
    java.util.SortedSet<java.lang.String> sortedset_str25 = treeset_str23.tailSet("");
    boolean b26 = treeset_str16.equals((java.lang.Object)treeset_str23);
    java.util.TreeSet<java.lang.String> treeset_str27 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str27);
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array31 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str32 = new java.util.ArrayList<java.lang.String>();
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str32, str_array31);
    boolean b34 = treeset_str29.retainAll((java.util.Collection<java.lang.String>)arraylist_str32);
    boolean b36 = treeset_str29.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str37 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str38 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str37);
    java.util.SortedSet<java.lang.String> sortedset_str40 = treeset_str38.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str43 = treeset_str38.headSet("", false);
    boolean b44 = treeset_str29.retainAll((java.util.Collection<java.lang.String>)navigableset_str43);
    boolean b45 = treeset_str28.retainAll((java.util.Collection<java.lang.String>)navigableset_str43);
    boolean b46 = treeset_str16.equals((java.lang.Object)b45);
    java.lang.String str48 = treeset_str16.ceiling("[hi!]");
    java.util.Spliterator<java.lang.String> spliterator_str49 = treeset_str16.spliterator();
    // The following exception was thrown during execution in test generation
    try {
    boolean b50 = treeset_str0.contains((java.lang.Object)treeset_str16);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str49);

  }

  @Test
  public void test162() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test162"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    boolean b12 = treeset_str7.add("[hi!]");
    java.lang.String str13 = treeset_str7.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "[hi!]"+ "'", str13.equals("[hi!]"));

  }

  @Test
  public void test163() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test163"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.util.Iterator<java.lang.String> iterator_str8 = treeset_str0.descendingIterator();
    java.lang.String str9 = treeset_str0.pollFirst();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str10 = treeset_str0.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str9);

  }

  @Test
  public void test164() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test164"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    boolean b20 = treeset_str13.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str21);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str22.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str22.headSet("", false);
    boolean b28 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b29 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b30 = treeset_str0.equals((java.lang.Object)b29);
    boolean b32 = treeset_str0.add("[]");
    java.util.Comparator<? super java.lang.String> comparator_wildcard33 = treeset_str0.comparator();
    java.util.NavigableSet<java.lang.String> navigableset_str36 = treeset_str0.tailSet("[, hi!]", true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str36);

  }

  @Test
  public void test165() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test165"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("", false);
    int i7 = treeset_str1.size();
    java.lang.Object[] obj_array8 = treeset_str1.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);

  }

  @Test
  public void test166() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test166"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.lang.String str8 = treeset_str0.lower("");
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    java.lang.String[] str_array27 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>();
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str28, str_array27);
    java.util.NavigableSet<java.lang.String> navigableset_str30 = treeset_str28.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str31 = treeset_str28.iterator();
    java.util.Iterator<java.lang.String> iterator_str32 = treeset_str28.iterator();
    boolean b33 = treeset_str9.removeAll((java.util.Collection<java.lang.String>)treeset_str28);
    java.util.Iterator<java.lang.String> iterator_str34 = treeset_str9.iterator();
    java.util.TreeSet<java.lang.String> treeset_str35 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str36 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str35);
    java.util.Iterator<java.lang.String> iterator_str37 = treeset_str36.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str38 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array40 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str41 = new java.util.ArrayList<java.lang.String>();
    boolean b42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str41, str_array40);
    boolean b43 = treeset_str38.retainAll((java.util.Collection<java.lang.String>)arraylist_str41);
    boolean b45 = treeset_str38.add("hi!");
    boolean b46 = treeset_str36.contains((java.lang.Object)"hi!");
    java.lang.String str48 = treeset_str36.ceiling("hi!");
    treeset_str36.clear();
    java.util.TreeSet<java.lang.String> treeset_str50 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str51 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str50);
    java.util.Iterator<java.lang.String> iterator_str52 = treeset_str51.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str53 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array55 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str56 = new java.util.ArrayList<java.lang.String>();
    boolean b57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str56, str_array55);
    boolean b58 = treeset_str53.retainAll((java.util.Collection<java.lang.String>)arraylist_str56);
    boolean b60 = treeset_str53.add("hi!");
    boolean b61 = treeset_str51.contains((java.lang.Object)"hi!");
    java.lang.String str63 = treeset_str51.ceiling("hi!");
    java.util.TreeSet<java.lang.String> treeset_str64 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str65 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str64);
    java.util.SortedSet<java.lang.String> sortedset_str67 = treeset_str65.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str70 = treeset_str65.headSet("", false);
    java.util.SortedSet[] sortedSet_array72 = new java.util.SortedSet[ 4 ];
    @SuppressWarnings("unchecked")
    java.util.SortedSet<java.lang.String>[] sortedset_str_array73 = (java.util.SortedSet<java.lang.String>[])sortedSet_array72;
    sortedset_str_array73[0] = treeset_str9;
    sortedset_str_array73[1] = treeset_str36;
    sortedset_str_array73[2] = treeset_str51;
    sortedset_str_array73[3] = treeset_str65;
    java.util.SortedSet<java.lang.String>[] sortedset_str_array82 = treeset_str0.toArray(sortedset_str_array73);
    java.util.Spliterator<java.lang.String> spliterator_str83 = treeset_str0.spliterator();
    java.util.Spliterator<java.lang.String> spliterator_str84 = treeset_str0.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str83);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str84);

  }

  @Test
  public void test167() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test167"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str11, str_array10);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str11.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str14 = treeset_str11.iterator();
    boolean b15 = treeset_str0.equals((java.lang.Object)iterator_str14);
    java.lang.String str17 = treeset_str0.higher("[[]]");
    java.util.Iterator<java.lang.String> iterator_str18 = treeset_str0.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str18);

  }

  @Test
  public void test168() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test168"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str4 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array6 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str7 = new java.util.ArrayList<java.lang.String>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str7, str_array6);
    boolean b9 = treeset_str4.retainAll((java.util.Collection<java.lang.String>)arraylist_str7);
    boolean b10 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str4);
    java.lang.String[] str_array13 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str14, str_array13);
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str14.descendingSet();
    java.lang.String str18 = treeset_str14.ceiling("[hi!]");
    boolean b19 = treeset_str4.remove((java.lang.Object)"[hi!]");
    java.util.NavigableSet<java.lang.String> navigableset_str24 = treeset_str4.subSet("[]", true, "[hi!]", false);
    java.util.NavigableSet<java.lang.String> navigableset_str25 = treeset_str4.descendingSet();
    java.util.stream.Stream<java.lang.String> stream_str26 = treeset_str4.stream();
    boolean b28 = treeset_str4.add("[[hi!]]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!"+ "'", str18.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);

  }

  @Test
  public void test169() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test169"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str1.iterator();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str1);
    java.lang.String str20 = treeset_str1.higher("[, hi!]");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str1);
    java.util.stream.Stream<java.lang.String> stream_str22 = treeset_str1.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str22);

  }

  @Test
  public void test170() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test170"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str8 = treeset_str0.headSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str0.subSet("[hi!]", true, "hi!", false);
    int i14 = treeset_str0.size();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array17 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str18 = new java.util.ArrayList<java.lang.String>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str18, str_array17);
    boolean b20 = treeset_str15.retainAll((java.util.Collection<java.lang.String>)arraylist_str18);
    boolean b22 = treeset_str15.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str23 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str24 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str23);
    java.util.SortedSet<java.lang.String> sortedset_str26 = treeset_str24.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str29 = treeset_str24.headSet("", false);
    boolean b30 = treeset_str15.retainAll((java.util.Collection<java.lang.String>)navigableset_str29);
    java.lang.String[] str_array33 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str34 = new java.util.TreeSet<java.lang.String>();
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str34, str_array33);
    java.util.NavigableSet<java.lang.String> navigableset_str36 = treeset_str34.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str37 = treeset_str34.iterator();
    java.util.Iterator<java.lang.String> iterator_str38 = treeset_str34.iterator();
    boolean b39 = treeset_str15.removeAll((java.util.Collection<java.lang.String>)treeset_str34);
    java.util.Iterator<java.lang.String> iterator_str40 = treeset_str15.iterator();
    java.lang.String str42 = treeset_str15.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str43 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str15);
    java.util.TreeSet<java.lang.String> treeset_str44 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array46 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str47 = new java.util.ArrayList<java.lang.String>();
    boolean b48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str47, str_array46);
    boolean b49 = treeset_str44.retainAll((java.util.Collection<java.lang.String>)arraylist_str47);
    java.lang.String str50 = treeset_str44.pollLast();
    java.util.Iterator<java.lang.String> iterator_str51 = treeset_str44.descendingIterator();
    java.util.Iterator<java.lang.String> iterator_str52 = treeset_str44.descendingIterator();
    boolean b53 = treeset_str43.retainAll((java.util.Collection<java.lang.String>)treeset_str44);
    int i54 = treeset_str43.size();
    boolean b55 = treeset_str0.remove((java.lang.Object)i54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i54 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);

  }

  @Test
  public void test171() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test171"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.floor("[]");
    java.lang.String str14 = treeset_str1.toString();
    // The following exception was thrown during execution in test generation
    try {
    java.util.SortedSet<java.lang.String> sortedset_str17 = treeset_str1.subSet("[, hi!]", "");
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "[]"+ "'", str14.equals("[]"));

  }

  @Test
  public void test172() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test172"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str8 = treeset_str0.headSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str0.subSet("[hi!]", true, "hi!", false);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str14);
    java.lang.String str17 = treeset_str15.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str20 = treeset_str15.headSet("hi!", true);
    boolean b21 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str15);
    java.util.stream.Stream<java.lang.String> stream_str22 = treeset_str0.parallelStream();
    java.lang.Object obj23 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b24 = treeset_str0.remove(obj23);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str22);

  }

  @Test
  public void test173() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test173"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("hi!", true);
    treeset_str1.clear();
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str1.headSet("hi!", true);
    java.util.stream.Stream<java.lang.String> stream_str11 = treeset_str1.parallelStream();
    java.lang.String str12 = treeset_str1.toString();
    int i13 = treeset_str1.size();
    int i14 = treeset_str1.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "[]"+ "'", str12.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);

  }

  @Test
  public void test174() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test174"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("", false);
    int i7 = treeset_str1.size();
    java.lang.String str9 = treeset_str1.ceiling("[]");
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str1.tailSet("");
    java.lang.String[] str_array14 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>();
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str15, str_array14);
    java.util.NavigableSet<java.lang.String> navigableset_str17 = treeset_str15.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str18 = treeset_str15.iterator();
    // The following exception was thrown during execution in test generation
    try {
    boolean b19 = treeset_str1.remove((java.lang.Object)iterator_str18);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str18);

  }

  @Test
  public void test175() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test175"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.lang.String str4 = treeset_str1.pollFirst();
    java.util.TreeSet<java.lang.String> treeset_str5 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str1);
    java.util.NavigableSet<java.lang.String> navigableset_str8 = treeset_str5.tailSet("", true);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)navigableset_str8);
    java.util.Collection<java.lang.String> collection_str10 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b11 = treeset_str9.containsAll(collection_str10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str8);

  }

  @Test
  public void test176() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test176"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str11, str_array10);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str11.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str14 = treeset_str11.iterator();
    boolean b15 = treeset_str0.equals((java.lang.Object)iterator_str14);
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str0.headSet("", true);
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str20 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str21 = treeset_str20.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array24 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str25 = new java.util.ArrayList<java.lang.String>();
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str25, str_array24);
    boolean b27 = treeset_str22.retainAll((java.util.Collection<java.lang.String>)arraylist_str25);
    boolean b29 = treeset_str22.add("hi!");
    boolean b30 = treeset_str20.contains((java.lang.Object)"hi!");
    java.lang.String str32 = treeset_str20.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str35 = treeset_str20.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str36 = treeset_str20.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str37 = treeset_str20.descendingSet();
    java.util.TreeSet<java.lang.String> treeset_str38 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)navigableset_str37);
    java.util.TreeSet<java.lang.String> treeset_str39 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str40 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str39);
    java.util.SortedSet<java.lang.String> sortedset_str42 = treeset_str39.tailSet("[hi!]");
    java.lang.Object obj43 = treeset_str39.clone();
    boolean b44 = treeset_str38.retainAll((java.util.Collection<java.lang.String>)treeset_str39);
    boolean b45 = treeset_str0.containsAll((java.util.Collection<java.lang.String>)treeset_str38);
    treeset_str38.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);

  }

  @Test
  public void test177() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test177"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.lang.String str4 = treeset_str1.pollFirst();
    java.lang.Object[] obj_array5 = treeset_str1.toArray();
    // The following exception was thrown during execution in test generation
    try {
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str1.subSet("[[hi!]]", true, "[, hi!]", true);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);

  }

  @Test
  public void test178() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test178"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str11, str_array10);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str11.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str14 = treeset_str11.iterator();
    boolean b15 = treeset_str0.equals((java.lang.Object)iterator_str14);
    java.util.Iterator<java.lang.String> iterator_str16 = treeset_str0.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str19 = treeset_str0.headSet("hi!", true);
    java.util.SortedSet<java.lang.String> sortedset_str22 = treeset_str0.subSet("", "hi!");
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str0.tailSet("[]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);

  }

  @Test
  public void test179() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test179"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String[] str_array4 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str5 = new java.util.TreeSet<java.lang.String>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str5, str_array4);
    java.util.NavigableSet<java.lang.String> navigableset_str7 = treeset_str5.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str8 = treeset_str5.iterator();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str9);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array13 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str14 = new java.util.ArrayList<java.lang.String>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str14, str_array13);
    boolean b16 = treeset_str11.retainAll((java.util.Collection<java.lang.String>)arraylist_str14);
    boolean b18 = treeset_str11.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str20 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str19);
    java.util.SortedSet<java.lang.String> sortedset_str22 = treeset_str20.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str25 = treeset_str20.headSet("", false);
    boolean b26 = treeset_str11.retainAll((java.util.Collection<java.lang.String>)navigableset_str25);
    boolean b27 = treeset_str10.retainAll((java.util.Collection<java.lang.String>)navigableset_str25);
    boolean b28 = treeset_str5.removeAll((java.util.Collection<java.lang.String>)treeset_str10);
    java.util.SortedSet<java.lang.String> sortedset_str30 = treeset_str10.tailSet("hi!");
    boolean b31 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str10);
    java.util.TreeSet<java.lang.String> treeset_str32 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array34 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str35 = new java.util.ArrayList<java.lang.String>();
    boolean b36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str35, str_array34);
    boolean b37 = treeset_str32.retainAll((java.util.Collection<java.lang.String>)arraylist_str35);
    boolean b39 = treeset_str32.add("hi!");
    java.lang.String str40 = treeset_str32.toString();
    java.util.NavigableSet<java.lang.String> navigableset_str43 = treeset_str32.headSet("[]", false);
    java.util.NavigableSet<java.lang.String> navigableset_str44 = treeset_str32.descendingSet();
    boolean b45 = treeset_str0.addAll((java.util.Collection<java.lang.String>)navigableset_str44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "[hi!]"+ "'", str40.equals("[hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);

  }

  @Test
  public void test180() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test180"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str0.tailSet("hi!", true);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str0.tailSet("[]", true);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str14);
    java.util.Iterator<java.lang.String> iterator_str16 = treeset_str15.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array19 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str20 = new java.util.ArrayList<java.lang.String>();
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str20, str_array19);
    boolean b22 = treeset_str17.retainAll((java.util.Collection<java.lang.String>)arraylist_str20);
    boolean b24 = treeset_str17.add("hi!");
    boolean b25 = treeset_str15.contains((java.lang.Object)"hi!");
    java.lang.String str27 = treeset_str15.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str30 = treeset_str15.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str31 = treeset_str15.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str32 = treeset_str15.descendingSet();
    java.util.TreeSet<java.lang.String> treeset_str33 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)navigableset_str32);
    java.lang.Object obj34 = treeset_str33.clone();
    java.lang.Object[] obj_array35 = treeset_str33.toArray();
    boolean b36 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)treeset_str33);
    java.util.TreeSet<java.lang.String> treeset_str37 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str38 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str37);
    java.lang.String str40 = treeset_str38.lower("");
    java.lang.String str41 = treeset_str38.pollFirst();
    java.util.NavigableSet<java.lang.String> navigableset_str46 = treeset_str38.subSet("", false, "[hi!]", false);
    java.util.SortedSet<java.lang.String> sortedset_str48 = treeset_str38.headSet("[hi!]");
    boolean b49 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str38);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str50 = treeset_str0.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);

  }

  @Test
  public void test181() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test181"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.SortedSet<java.lang.String> sortedset_str15 = treeset_str1.tailSet("");
    java.util.Spliterator<java.lang.String> spliterator_str16 = treeset_str1.spliterator();
    java.lang.Cloneable[] cloneable_array17 = null;
    // The following exception was thrown during execution in test generation
    try {
    java.lang.Cloneable[] cloneable_array18 = treeset_str1.toArray(cloneable_array17);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str16);

  }

  @Test
  public void test182() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test182"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str26 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str25);
    java.util.Iterator<java.lang.String> iterator_str27 = treeset_str26.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array30 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str31 = new java.util.ArrayList<java.lang.String>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str31, str_array30);
    boolean b33 = treeset_str28.retainAll((java.util.Collection<java.lang.String>)arraylist_str31);
    boolean b35 = treeset_str28.add("hi!");
    boolean b36 = treeset_str26.contains((java.lang.Object)"hi!");
    java.lang.String str38 = treeset_str26.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str43 = treeset_str26.subSet("[hi!]", true, "[hi!]", true);
    boolean b44 = treeset_str0.containsAll((java.util.Collection<java.lang.String>)treeset_str26);
    java.util.Iterator<java.lang.String> iterator_str45 = treeset_str0.iterator();
    java.lang.String str46 = treeset_str0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "[]"+ "'", str46.equals("[]"));

  }

  @Test
  public void test183() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test183"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str4 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array6 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str7 = new java.util.ArrayList<java.lang.String>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str7, str_array6);
    boolean b9 = treeset_str4.retainAll((java.util.Collection<java.lang.String>)arraylist_str7);
    boolean b10 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str4);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.AbstractSet[] abstractSet_array13 = new java.util.AbstractSet[ 1 ];
    @SuppressWarnings("unchecked")
    java.util.AbstractSet<java.lang.String>[] abstractset_str_array14 = (java.util.AbstractSet<java.lang.String>[])abstractSet_array13;
    abstractset_str_array14[0] = treeset_str11;
    java.util.AbstractSet<java.lang.String>[] abstractset_str_array17 = treeset_str4.toArray(abstractset_str_array14);
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str4.descendingSet();
    java.lang.Object[] obj_array19 = treeset_str4.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(abstractSet_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(abstractset_str_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(abstractset_str_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array19);

  }

  @Test
  public void test184() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test184"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str0.subSet("", true, "[hi!]", true);
    java.lang.Object[] obj_array7 = treeset_str0.toArray();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str8.subSet("", true, "[hi!]", true);
    java.lang.String str15 = treeset_str8.pollLast();
    java.lang.String str16 = treeset_str8.pollLast();
    treeset_str8.clear();
    boolean b18 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);

  }

  @Test
  public void test185() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test185"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.util.Iterator<java.lang.String> iterator_str8 = treeset_str0.descendingIterator();
    java.lang.String str9 = treeset_str0.pollFirst();
    java.lang.Object[] obj_array10 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array11 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array12 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array13 = new java.lang.Object[] {  };
    java.lang.Object[][] obj_array_array14 = new java.lang.Object[][] { obj_array10, obj_array11, obj_array12, obj_array13 };
    java.lang.Object[][] obj_array_array15 = treeset_str0.toArray(obj_array_array14);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str16 = treeset_str0.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array15);

  }

  @Test
  public void test186() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test186"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b25 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b26 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str8);
    java.util.TreeSet<java.lang.String> treeset_str27 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array29 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str30 = new java.util.ArrayList<java.lang.String>();
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str30, str_array29);
    boolean b32 = treeset_str27.retainAll((java.util.Collection<java.lang.String>)arraylist_str30);
    java.lang.String str33 = treeset_str27.pollLast();
    java.util.Iterator<java.lang.String> iterator_str34 = treeset_str27.descendingIterator();
    java.lang.String[] str_array37 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str38 = new java.util.TreeSet<java.lang.String>();
    boolean b39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str38, str_array37);
    java.util.NavigableSet<java.lang.String> navigableset_str40 = treeset_str38.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str41 = treeset_str38.iterator();
    boolean b42 = treeset_str27.equals((java.lang.Object)iterator_str41);
    java.util.Iterator<java.lang.String> iterator_str43 = treeset_str27.iterator();
    boolean b44 = treeset_str8.equals((java.lang.Object)treeset_str27);
    java.lang.String str46 = treeset_str8.higher("[[]]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str46);

  }

  @Test
  public void test187() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test187"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str7.tailSet("hi!", false);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str7);
    java.lang.String str16 = treeset_str7.ceiling("[[]]");
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str7.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);

  }

  @Test
  public void test188() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test188"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str9);
    java.util.SortedSet<java.lang.String> sortedset_str12 = treeset_str10.tailSet("");
    boolean b13 = treeset_str3.equals((java.lang.Object)treeset_str10);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str14);
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str19 = new java.util.ArrayList<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str19, str_array18);
    boolean b21 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)arraylist_str19);
    boolean b23 = treeset_str16.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str24 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str24);
    java.util.SortedSet<java.lang.String> sortedset_str27 = treeset_str25.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str30 = treeset_str25.headSet("", false);
    boolean b31 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)navigableset_str30);
    boolean b32 = treeset_str15.retainAll((java.util.Collection<java.lang.String>)navigableset_str30);
    boolean b33 = treeset_str3.equals((java.lang.Object)b32);
    java.lang.String str35 = treeset_str3.ceiling("[hi!]");
    boolean b36 = treeset_str1.addAll((java.util.Collection<java.lang.String>)treeset_str3);
    int i37 = treeset_str3.size();
    treeset_str3.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i37 == 0);

  }

  @Test
  public void test189() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test189"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.floor("[]");
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str1);
    java.lang.Object obj15 = treeset_str14.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj15);

  }

  @Test
  public void test190() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test190"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str1.iterator();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str1);
    java.lang.String str20 = treeset_str1.higher("[, hi!]");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str1);
    int i22 = treeset_str21.size();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str23 = treeset_str21.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);

  }

  @Test
  public void test191() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test191"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str4 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array6 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str7 = new java.util.ArrayList<java.lang.String>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str7, str_array6);
    boolean b9 = treeset_str4.retainAll((java.util.Collection<java.lang.String>)arraylist_str7);
    boolean b10 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str4);
    java.lang.String[] str_array13 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str14, str_array13);
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str14.descendingSet();
    java.lang.String str18 = treeset_str14.ceiling("[hi!]");
    boolean b19 = treeset_str4.remove((java.lang.Object)"[hi!]");
    java.util.NavigableSet<java.lang.String> navigableset_str24 = treeset_str4.subSet("[]", true, "[hi!]", false);
    java.util.NavigableSet<java.lang.String> navigableset_str25 = treeset_str4.descendingSet();
    java.util.stream.Stream<java.lang.String> stream_str26 = treeset_str4.stream();
    boolean b28 = treeset_str4.add("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!"+ "'", str18.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);

  }

  @Test
  public void test192() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test192"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str1.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str1.descendingSet();
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array21 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str22 = new java.util.ArrayList<java.lang.String>();
    boolean b23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str22, str_array21);
    boolean b24 = treeset_str19.retainAll((java.util.Collection<java.lang.String>)arraylist_str22);
    boolean b26 = treeset_str19.add("hi!");
    java.lang.String str27 = treeset_str19.toString();
    java.util.NavigableSet<java.lang.String> navigableset_str30 = treeset_str19.headSet("[]", false);
    boolean b31 = treeset_str1.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Spliterator<java.lang.String> spliterator_str32 = treeset_str1.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "[hi!]"+ "'", str27.equals("[hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str32);

  }

  @Test
  public void test193() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test193"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str4 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array6 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str7 = new java.util.ArrayList<java.lang.String>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str7, str_array6);
    boolean b9 = treeset_str4.retainAll((java.util.Collection<java.lang.String>)arraylist_str7);
    boolean b10 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str4);
    java.util.stream.Stream<java.lang.String> stream_str11 = treeset_str4.stream();
    java.lang.String str13 = treeset_str4.ceiling("[hi!]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);

  }

  @Test
  public void test194() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test194"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str11, str_array10);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str11.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str14 = treeset_str11.iterator();
    boolean b15 = treeset_str0.equals((java.lang.Object)iterator_str14);
    java.util.Iterator<java.lang.String> iterator_str16 = treeset_str0.iterator();
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.lang.String str20 = treeset_str18.lower("");
    java.lang.String str21 = treeset_str18.pollFirst();
    java.util.NavigableSet<java.lang.String> navigableset_str26 = treeset_str18.subSet("", false, "[hi!]", false);
    boolean b27 = treeset_str0.containsAll((java.util.Collection<java.lang.String>)treeset_str18);
    java.lang.String str28 = treeset_str18.pollFirst();
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str30 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str29);
    java.lang.String str32 = treeset_str30.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str35 = treeset_str30.headSet("hi!", true);
    java.util.stream.Stream<java.lang.String> stream_str36 = treeset_str30.stream();
    java.lang.String str37 = treeset_str30.pollFirst();
    // The following exception was thrown during execution in test generation
    try {
    boolean b38 = treeset_str18.remove((java.lang.Object)treeset_str30);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str37);

  }

  @Test
  public void test195() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test195"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str0.tailSet("hi!", true);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    java.util.Spliterator<java.lang.String> spliterator_str13 = treeset_str12.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str13);

  }

  @Test
  public void test196() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test196"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    boolean b20 = treeset_str13.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str21);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str22.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str22.headSet("", false);
    boolean b28 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b29 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b30 = treeset_str0.equals((java.lang.Object)b29);
    java.lang.String str32 = treeset_str0.ceiling("[hi!]");
    java.util.Iterator<java.lang.String> iterator_str33 = treeset_str0.iterator();
    java.util.SortedSet<java.lang.String> sortedset_str36 = treeset_str0.subSet("", "hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str39 = treeset_str0.tailSet("[[]]", false);
    java.lang.String str41 = treeset_str0.floor("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str41);

  }

  @Test
  public void test197() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test197"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str0.iterator();
    java.lang.String str27 = treeset_str0.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    int i29 = treeset_str0.size();
    java.util.SortedSet<java.lang.String> sortedset_str32 = treeset_str0.subSet("[hi!]", "hi!");
    java.lang.String str34 = treeset_str0.higher("");
    boolean b35 = treeset_str0.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);

  }

  @Test
  public void test198() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test198"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str0.tailSet("hi!", true);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    java.lang.String str12 = treeset_str0.toString();
    java.lang.String str13 = treeset_str0.toString();
    boolean b14 = treeset_str0.isEmpty();
    java.util.stream.Stream<java.lang.String> stream_str15 = treeset_str0.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "[hi!]"+ "'", str12.equals("[hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "[hi!]"+ "'", str13.equals("[hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str15);

  }

  @Test
  public void test199() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test199"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array16 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str17 = new java.util.ArrayList<java.lang.String>();
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str17, str_array16);
    boolean b19 = treeset_str14.retainAll((java.util.Collection<java.lang.String>)arraylist_str17);
    java.util.stream.Stream<java.lang.String> stream_str20 = treeset_str14.parallelStream();
    java.lang.String str22 = treeset_str14.lower("");
    java.util.TreeSet<java.lang.String> treeset_str23 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array25 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str26 = new java.util.ArrayList<java.lang.String>();
    boolean b27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str26, str_array25);
    boolean b28 = treeset_str23.retainAll((java.util.Collection<java.lang.String>)arraylist_str26);
    boolean b30 = treeset_str23.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str31 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str32 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str31);
    java.util.SortedSet<java.lang.String> sortedset_str34 = treeset_str32.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str37 = treeset_str32.headSet("", false);
    boolean b38 = treeset_str23.retainAll((java.util.Collection<java.lang.String>)navigableset_str37);
    java.lang.String[] str_array41 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str42 = new java.util.TreeSet<java.lang.String>();
    boolean b43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str42, str_array41);
    java.util.NavigableSet<java.lang.String> navigableset_str44 = treeset_str42.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str45 = treeset_str42.iterator();
    java.util.Iterator<java.lang.String> iterator_str46 = treeset_str42.iterator();
    boolean b47 = treeset_str23.removeAll((java.util.Collection<java.lang.String>)treeset_str42);
    java.util.Iterator<java.lang.String> iterator_str48 = treeset_str23.iterator();
    java.util.TreeSet<java.lang.String> treeset_str49 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str50 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str49);
    java.util.Iterator<java.lang.String> iterator_str51 = treeset_str50.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str52 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array54 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str55 = new java.util.ArrayList<java.lang.String>();
    boolean b56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str55, str_array54);
    boolean b57 = treeset_str52.retainAll((java.util.Collection<java.lang.String>)arraylist_str55);
    boolean b59 = treeset_str52.add("hi!");
    boolean b60 = treeset_str50.contains((java.lang.Object)"hi!");
    java.lang.String str62 = treeset_str50.ceiling("hi!");
    treeset_str50.clear();
    java.util.TreeSet<java.lang.String> treeset_str64 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str65 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str64);
    java.util.Iterator<java.lang.String> iterator_str66 = treeset_str65.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str67 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array69 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str70 = new java.util.ArrayList<java.lang.String>();
    boolean b71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str70, str_array69);
    boolean b72 = treeset_str67.retainAll((java.util.Collection<java.lang.String>)arraylist_str70);
    boolean b74 = treeset_str67.add("hi!");
    boolean b75 = treeset_str65.contains((java.lang.Object)"hi!");
    java.lang.String str77 = treeset_str65.ceiling("hi!");
    java.util.TreeSet<java.lang.String> treeset_str78 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str79 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str78);
    java.util.SortedSet<java.lang.String> sortedset_str81 = treeset_str79.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str84 = treeset_str79.headSet("", false);
    java.util.SortedSet[] sortedSet_array86 = new java.util.SortedSet[ 4 ];
    @SuppressWarnings("unchecked")
    java.util.SortedSet<java.lang.String>[] sortedset_str_array87 = (java.util.SortedSet<java.lang.String>[])sortedSet_array86;
    sortedset_str_array87[0] = treeset_str23;
    sortedset_str_array87[1] = treeset_str50;
    sortedset_str_array87[2] = treeset_str65;
    sortedset_str_array87[3] = treeset_str79;
    java.util.SortedSet<java.lang.String>[] sortedset_str_array96 = treeset_str14.toArray(sortedset_str_array87);
    java.util.Collection<java.lang.String>[] collection_str_array97 = treeset_str1.toArray((java.util.Collection<java.lang.String>[])sortedset_str_array87);
    boolean b99 = treeset_str1.add("[hi!]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b74 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str81);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str84);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet_array86);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array87);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array96);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_str_array97);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b99 == true);

  }

  @Test
  public void test200() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test200"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("hi!", true);
    treeset_str1.clear();
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str1.headSet("hi!", true);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array13 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str14 = new java.util.ArrayList<java.lang.String>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str14, str_array13);
    boolean b16 = treeset_str11.retainAll((java.util.Collection<java.lang.String>)arraylist_str14);
    java.lang.String str17 = treeset_str11.pollLast();
    java.util.Iterator<java.lang.String> iterator_str18 = treeset_str11.descendingIterator();
    java.lang.String[] str_array21 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>();
    boolean b23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str22, str_array21);
    java.util.NavigableSet<java.lang.String> navigableset_str24 = treeset_str22.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str22.iterator();
    boolean b26 = treeset_str11.equals((java.lang.Object)iterator_str25);
    java.util.NavigableSet<java.lang.String> navigableset_str29 = treeset_str11.headSet("", true);
    java.util.SortedSet<java.lang.String> sortedset_str31 = treeset_str11.tailSet("[]");
    boolean b32 = treeset_str1.remove((java.lang.Object)"[]");
    java.lang.String str34 = treeset_str1.higher("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str34);

  }

  @Test
  public void test201() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test201"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str0.tailSet("hi!", true);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    java.lang.String str13 = treeset_str11.higher("[]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!"+ "'", str13.equals("hi!"));

  }

  @Test
  public void test202() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test202"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str11, str_array10);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str11.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str14 = treeset_str11.iterator();
    boolean b15 = treeset_str0.equals((java.lang.Object)iterator_str14);
    java.util.Iterator<java.lang.String> iterator_str16 = treeset_str0.iterator();
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array19 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str20 = new java.util.ArrayList<java.lang.String>();
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str20, str_array19);
    boolean b22 = treeset_str17.retainAll((java.util.Collection<java.lang.String>)arraylist_str20);
    boolean b24 = treeset_str17.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str26 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str25);
    java.util.SortedSet<java.lang.String> sortedset_str28 = treeset_str26.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str31 = treeset_str26.headSet("", false);
    boolean b32 = treeset_str17.retainAll((java.util.Collection<java.lang.String>)navigableset_str31);
    java.lang.String[] str_array35 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str36 = new java.util.TreeSet<java.lang.String>();
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str36, str_array35);
    java.util.NavigableSet<java.lang.String> navigableset_str38 = treeset_str36.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str39 = treeset_str36.iterator();
    java.util.Iterator<java.lang.String> iterator_str40 = treeset_str36.iterator();
    boolean b41 = treeset_str17.removeAll((java.util.Collection<java.lang.String>)treeset_str36);
    java.util.SortedSet[] sortedSet_array43 = new java.util.SortedSet[ 1 ];
    @SuppressWarnings("unchecked")
    java.util.SortedSet<java.lang.String>[] sortedset_str_array44 = (java.util.SortedSet<java.lang.String>[])sortedSet_array43;
    sortedset_str_array44[0] = treeset_str17;
    java.util.SortedSet[][] sortedSet_array_array48 = new java.util.SortedSet[ 1 ][];
    @SuppressWarnings("unchecked")
    java.util.SortedSet<java.lang.String>[][] sortedset_str_array_array49 = (java.util.SortedSet<java.lang.String>[][])sortedSet_array_array48;
    sortedset_str_array_array49[0] = sortedset_str_array44;
    java.util.SortedSet<java.lang.String>[][] sortedset_str_array_array52 = treeset_str0.toArray(sortedset_str_array_array49);
    java.util.TreeSet<java.lang.String> treeset_str53 = new java.util.TreeSet<java.lang.String>();
    boolean b54 = treeset_str0.containsAll((java.util.Collection<java.lang.String>)treeset_str53);
    java.lang.Object obj55 = treeset_str53.clone();
    treeset_str53.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet_array_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj55);

  }

  @Test
  public void test203() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test203"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.lang.String str8 = treeset_str0.lower("");
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    java.lang.String[] str_array27 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>();
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str28, str_array27);
    java.util.NavigableSet<java.lang.String> navigableset_str30 = treeset_str28.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str31 = treeset_str28.iterator();
    java.util.Iterator<java.lang.String> iterator_str32 = treeset_str28.iterator();
    boolean b33 = treeset_str9.removeAll((java.util.Collection<java.lang.String>)treeset_str28);
    java.util.Iterator<java.lang.String> iterator_str34 = treeset_str9.iterator();
    java.util.TreeSet<java.lang.String> treeset_str35 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str36 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str35);
    java.util.Iterator<java.lang.String> iterator_str37 = treeset_str36.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str38 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array40 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str41 = new java.util.ArrayList<java.lang.String>();
    boolean b42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str41, str_array40);
    boolean b43 = treeset_str38.retainAll((java.util.Collection<java.lang.String>)arraylist_str41);
    boolean b45 = treeset_str38.add("hi!");
    boolean b46 = treeset_str36.contains((java.lang.Object)"hi!");
    java.lang.String str48 = treeset_str36.ceiling("hi!");
    treeset_str36.clear();
    java.util.TreeSet<java.lang.String> treeset_str50 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str51 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str50);
    java.util.Iterator<java.lang.String> iterator_str52 = treeset_str51.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str53 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array55 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str56 = new java.util.ArrayList<java.lang.String>();
    boolean b57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str56, str_array55);
    boolean b58 = treeset_str53.retainAll((java.util.Collection<java.lang.String>)arraylist_str56);
    boolean b60 = treeset_str53.add("hi!");
    boolean b61 = treeset_str51.contains((java.lang.Object)"hi!");
    java.lang.String str63 = treeset_str51.ceiling("hi!");
    java.util.TreeSet<java.lang.String> treeset_str64 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str65 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str64);
    java.util.SortedSet<java.lang.String> sortedset_str67 = treeset_str65.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str70 = treeset_str65.headSet("", false);
    java.util.SortedSet[] sortedSet_array72 = new java.util.SortedSet[ 4 ];
    @SuppressWarnings("unchecked")
    java.util.SortedSet<java.lang.String>[] sortedset_str_array73 = (java.util.SortedSet<java.lang.String>[])sortedSet_array72;
    sortedset_str_array73[0] = treeset_str9;
    sortedset_str_array73[1] = treeset_str36;
    sortedset_str_array73[2] = treeset_str51;
    sortedset_str_array73[3] = treeset_str65;
    java.util.SortedSet<java.lang.String>[] sortedset_str_array82 = treeset_str0.toArray(sortedset_str_array73);
    java.lang.String str84 = treeset_str0.floor("[, hi!]");
    java.util.stream.Stream<java.lang.String> stream_str85 = treeset_str0.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str84);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str85);

  }

  @Test
  public void test204() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test204"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str4 = new java.util.TreeSet<java.lang.String>(sortedset_str3);
    java.util.TreeSet<java.lang.String> treeset_str5 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str5);
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str6.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array10 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str11 = new java.util.ArrayList<java.lang.String>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str11, str_array10);
    boolean b13 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)arraylist_str11);
    boolean b15 = treeset_str8.add("hi!");
    boolean b16 = treeset_str6.contains((java.lang.Object)"hi!");
    java.lang.String str18 = treeset_str6.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str6.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str6.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str6.descendingSet();
    boolean b24 = treeset_str4.equals((java.lang.Object)navigableset_str23);
    java.lang.Object obj25 = treeset_str4.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj25);

  }

  @Test
  public void test205() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test205"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.SortedSet<java.lang.String> sortedset_str13 = treeset_str0.subSet("", "[]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str13);

  }

  @Test
  public void test206() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test206"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str0.iterator();
    java.lang.String str27 = treeset_str0.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    java.lang.String str30 = treeset_str0.floor("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str30);

  }

  @Test
  public void test207() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test207"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str0.iterator();
    java.lang.String str27 = treeset_str0.lower("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str30 = treeset_str0.tailSet("[]", false);
    int i31 = treeset_str0.size();
    java.util.Spliterator<java.lang.String> spliterator_str32 = treeset_str0.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str32);

  }

  @Test
  public void test208() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test208"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str0.headSet("[hi!]", true);
    java.lang.String str28 = treeset_str0.toString();
    java.lang.Object[] obj_array29 = treeset_str0.toArray();
    boolean b30 = treeset_str0.isEmpty();
    treeset_str0.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "[]"+ "'", str28.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);

  }

  @Test
  public void test209() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test209"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str7 = treeset_str3.descendingSet();
    java.lang.Object[] obj_array8 = treeset_str3.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);

  }

  @Test
  public void test210() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test210"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str0.tailSet("hi!", true);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    boolean b13 = treeset_str11.add("[]");
    boolean b15 = treeset_str11.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str19 = new java.util.ArrayList<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str19, str_array18);
    boolean b21 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)arraylist_str19);
    boolean b23 = treeset_str16.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str26 = treeset_str16.tailSet("hi!", true);
    java.util.NavigableSet<java.lang.String> navigableset_str29 = treeset_str16.tailSet("[]", true);
    java.util.TreeSet<java.lang.String> treeset_str30 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str31 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str30);
    java.util.Iterator<java.lang.String> iterator_str32 = treeset_str31.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str33 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array35 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str36 = new java.util.ArrayList<java.lang.String>();
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str36, str_array35);
    boolean b38 = treeset_str33.retainAll((java.util.Collection<java.lang.String>)arraylist_str36);
    boolean b40 = treeset_str33.add("hi!");
    boolean b41 = treeset_str31.contains((java.lang.Object)"hi!");
    java.lang.String str43 = treeset_str31.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str46 = treeset_str31.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str47 = treeset_str31.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str48 = treeset_str31.descendingSet();
    java.util.TreeSet<java.lang.String> treeset_str49 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)navigableset_str48);
    java.lang.Object obj50 = treeset_str49.clone();
    java.lang.Object[] obj_array51 = treeset_str49.toArray();
    boolean b52 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)treeset_str49);
    java.lang.String str54 = treeset_str16.higher("hi!");
    boolean b55 = treeset_str11.equals((java.lang.Object)treeset_str16);
    java.util.TreeSet<java.lang.String> treeset_str56 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array58 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str59 = new java.util.ArrayList<java.lang.String>();
    boolean b60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str59, str_array58);
    boolean b61 = treeset_str56.retainAll((java.util.Collection<java.lang.String>)arraylist_str59);
    boolean b63 = treeset_str56.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str64 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str65 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str64);
    java.util.SortedSet<java.lang.String> sortedset_str67 = treeset_str65.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str70 = treeset_str65.headSet("", false);
    boolean b71 = treeset_str56.retainAll((java.util.Collection<java.lang.String>)navigableset_str70);
    java.lang.String[] str_array74 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str75 = new java.util.TreeSet<java.lang.String>();
    boolean b76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str75, str_array74);
    java.util.NavigableSet<java.lang.String> navigableset_str77 = treeset_str75.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str78 = treeset_str75.iterator();
    java.util.Iterator<java.lang.String> iterator_str79 = treeset_str75.iterator();
    boolean b80 = treeset_str56.removeAll((java.util.Collection<java.lang.String>)treeset_str75);
    java.util.Iterator<java.lang.String> iterator_str81 = treeset_str56.iterator();
    java.lang.String str83 = treeset_str56.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str84 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str56);
    java.util.TreeSet<java.lang.String> treeset_str85 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array87 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str88 = new java.util.ArrayList<java.lang.String>();
    boolean b89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str88, str_array87);
    boolean b90 = treeset_str85.retainAll((java.util.Collection<java.lang.String>)arraylist_str88);
    java.lang.String str91 = treeset_str85.pollLast();
    java.util.Iterator<java.lang.String> iterator_str92 = treeset_str85.descendingIterator();
    java.util.Iterator<java.lang.String> iterator_str93 = treeset_str85.descendingIterator();
    boolean b94 = treeset_str84.retainAll((java.util.Collection<java.lang.String>)treeset_str85);
    int i95 = treeset_str84.size();
    boolean b96 = treeset_str16.removeAll((java.util.Collection<java.lang.String>)treeset_str84);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b76 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str78);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str79);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str81);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str83);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array87);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b89 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b90 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str91);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str92);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str93);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b94 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i95 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b96 == false);

  }

  @Test
  public void test211() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test211"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str11, str_array10);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str11.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str14 = treeset_str11.iterator();
    boolean b15 = treeset_str0.equals((java.lang.Object)iterator_str14);
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str0.tailSet("", true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);

  }

  @Test
  public void test212() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test212"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("hi!", true);
    treeset_str1.clear();
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str1.headSet("");
    java.util.Iterator<java.lang.String> iterator_str10 = treeset_str1.iterator();
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.SortedSet<java.lang.String> sortedset_str14 = treeset_str12.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array17 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str18 = new java.util.ArrayList<java.lang.String>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str18, str_array17);
    boolean b20 = treeset_str15.retainAll((java.util.Collection<java.lang.String>)arraylist_str18);
    boolean b21 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)treeset_str15);
    java.util.Spliterator<java.lang.String> spliterator_str22 = treeset_str12.spliterator();
    boolean b23 = treeset_str1.containsAll((java.util.Collection<java.lang.String>)treeset_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);

  }

  @Test
  public void test213() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test213"); }

    java.lang.String[] str_array4 = new java.lang.String[] { "", "hi!", "hi!", "[]" };
    java.util.TreeSet<java.lang.String> treeset_str5 = new java.util.TreeSet<java.lang.String>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str5, str_array4);
    java.lang.String str7 = treeset_str5.first();
    java.util.Spliterator<java.lang.String> spliterator_str8 = treeset_str5.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + ""+ "'", str7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str8);

  }

  @Test
  public void test214() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test214"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str0.iterator();
    java.lang.String str27 = treeset_str0.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array31 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str32 = new java.util.ArrayList<java.lang.String>();
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str32, str_array31);
    boolean b34 = treeset_str29.retainAll((java.util.Collection<java.lang.String>)arraylist_str32);
    java.lang.String str35 = treeset_str29.pollLast();
    java.util.Iterator<java.lang.String> iterator_str36 = treeset_str29.descendingIterator();
    java.util.Iterator<java.lang.String> iterator_str37 = treeset_str29.descendingIterator();
    boolean b38 = treeset_str28.retainAll((java.util.Collection<java.lang.String>)treeset_str29);
    int i39 = treeset_str28.size();
    treeset_str28.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 0);

  }

  @Test
  public void test215() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test215"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str1.iterator();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str1);
    java.lang.String str20 = treeset_str1.higher("[, hi!]");
    java.lang.Object[] obj_array21 = treeset_str1.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);

  }

  @Test
  public void test216() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test216"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.lang.String str7 = treeset_str3.ceiling("[hi!]");
    java.util.Spliterator<java.lang.String> spliterator_str8 = treeset_str3.spliterator();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str12, str_array11);
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str12.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str15 = treeset_str12.iterator();
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str16);
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array20 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str21 = new java.util.ArrayList<java.lang.String>();
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str21, str_array20);
    boolean b23 = treeset_str18.retainAll((java.util.Collection<java.lang.String>)arraylist_str21);
    boolean b25 = treeset_str18.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str26 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str27 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str26);
    java.util.SortedSet<java.lang.String> sortedset_str29 = treeset_str27.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str32 = treeset_str27.headSet("", false);
    boolean b33 = treeset_str18.retainAll((java.util.Collection<java.lang.String>)navigableset_str32);
    boolean b34 = treeset_str17.retainAll((java.util.Collection<java.lang.String>)navigableset_str32);
    boolean b35 = treeset_str12.removeAll((java.util.Collection<java.lang.String>)treeset_str17);
    boolean b37 = treeset_str17.add("[hi!]");
    java.util.NavigableSet<java.lang.String> navigableset_str40 = treeset_str17.headSet("", false);
    boolean b41 = treeset_str3.remove((java.lang.Object)"");
    java.lang.String str42 = treeset_str3.first();
    java.lang.String str43 = treeset_str3.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hi!"+ "'", str7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "hi!"+ "'", str42.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str43 + "' != '" + "hi!"+ "'", str43.equals("hi!"));

  }

  @Test
  public void test217() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test217"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str9);
    java.util.SortedSet<java.lang.String> sortedset_str12 = treeset_str10.tailSet("");
    boolean b13 = treeset_str3.equals((java.lang.Object)treeset_str10);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str14);
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str19 = new java.util.ArrayList<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str19, str_array18);
    boolean b21 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)arraylist_str19);
    boolean b23 = treeset_str16.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str24 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str24);
    java.util.SortedSet<java.lang.String> sortedset_str27 = treeset_str25.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str30 = treeset_str25.headSet("", false);
    boolean b31 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)navigableset_str30);
    boolean b32 = treeset_str15.retainAll((java.util.Collection<java.lang.String>)navigableset_str30);
    boolean b33 = treeset_str3.equals((java.lang.Object)b32);
    java.lang.String str35 = treeset_str3.ceiling("[hi!]");
    boolean b36 = treeset_str1.addAll((java.util.Collection<java.lang.String>)treeset_str3);
    java.lang.String str38 = treeset_str1.floor("[]");
    java.util.Comparator<? super java.lang.String> comparator_wildcard39 = treeset_str1.comparator();
    java.util.TreeSet<java.lang.String> treeset_str40 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array42 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str43 = new java.util.ArrayList<java.lang.String>();
    boolean b44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str43, str_array42);
    boolean b45 = treeset_str40.retainAll((java.util.Collection<java.lang.String>)arraylist_str43);
    boolean b47 = treeset_str40.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str48 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str49 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str48);
    java.util.SortedSet<java.lang.String> sortedset_str51 = treeset_str49.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str54 = treeset_str49.headSet("", false);
    boolean b55 = treeset_str40.retainAll((java.util.Collection<java.lang.String>)navigableset_str54);
    java.lang.String[] str_array58 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str59 = new java.util.TreeSet<java.lang.String>();
    boolean b60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str59, str_array58);
    java.util.NavigableSet<java.lang.String> navigableset_str61 = treeset_str59.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str62 = treeset_str59.iterator();
    java.util.Iterator<java.lang.String> iterator_str63 = treeset_str59.iterator();
    boolean b64 = treeset_str40.removeAll((java.util.Collection<java.lang.String>)treeset_str59);
    java.util.Iterator<java.lang.String> iterator_str65 = treeset_str40.iterator();
    java.lang.String str67 = treeset_str40.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str68 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str40);
    java.util.NavigableSet<java.lang.String> navigableset_str71 = treeset_str68.headSet("[hi!]", true);
    boolean b72 = treeset_str1.removeAll((java.util.Collection<java.lang.String>)treeset_str68);
    java.util.NavigableSet<java.lang.String> navigableset_str75 = treeset_str68.tailSet("[[hi!]]", false);
    java.util.SortedSet<java.lang.String> sortedset_str77 = treeset_str68.tailSet("[, hi!]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str75);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str77);

  }

  @Test
  public void test218() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test218"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str7 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str8 = treeset_str3.iterator();
    boolean b9 = treeset_str3.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test219() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test219"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str1.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str1.descendingSet();
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)navigableset_str18);
    java.util.TreeSet<java.lang.String> treeset_str20 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str20);
    java.util.SortedSet<java.lang.String> sortedset_str23 = treeset_str20.tailSet("[hi!]");
    java.lang.Object obj24 = treeset_str20.clone();
    boolean b25 = treeset_str19.retainAll((java.util.Collection<java.lang.String>)treeset_str20);
    java.lang.Object[] obj_array26 = treeset_str20.toArray();
    java.util.TreeSet<java.lang.String> treeset_str27 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str27);
    java.util.Iterator<java.lang.String> iterator_str29 = treeset_str28.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str30 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array32 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str33 = new java.util.ArrayList<java.lang.String>();
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str33, str_array32);
    boolean b35 = treeset_str30.retainAll((java.util.Collection<java.lang.String>)arraylist_str33);
    boolean b37 = treeset_str30.add("hi!");
    boolean b38 = treeset_str28.contains((java.lang.Object)"hi!");
    java.lang.String str40 = treeset_str28.ceiling("hi!");
    java.util.SortedSet<java.lang.String> sortedset_str42 = treeset_str28.headSet("[hi!]");
    boolean b43 = treeset_str20.contains((java.lang.Object)"[hi!]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);

  }

  @Test
  public void test220() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test220"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.lang.String str7 = treeset_str3.ceiling("[hi!]");
    java.util.Spliterator<java.lang.String> spliterator_str8 = treeset_str3.spliterator();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str12, str_array11);
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str12.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str15 = treeset_str12.iterator();
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str16);
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array20 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str21 = new java.util.ArrayList<java.lang.String>();
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str21, str_array20);
    boolean b23 = treeset_str18.retainAll((java.util.Collection<java.lang.String>)arraylist_str21);
    boolean b25 = treeset_str18.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str26 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str27 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str26);
    java.util.SortedSet<java.lang.String> sortedset_str29 = treeset_str27.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str32 = treeset_str27.headSet("", false);
    boolean b33 = treeset_str18.retainAll((java.util.Collection<java.lang.String>)navigableset_str32);
    boolean b34 = treeset_str17.retainAll((java.util.Collection<java.lang.String>)navigableset_str32);
    boolean b35 = treeset_str12.removeAll((java.util.Collection<java.lang.String>)treeset_str17);
    boolean b37 = treeset_str17.add("[hi!]");
    java.util.NavigableSet<java.lang.String> navigableset_str40 = treeset_str17.headSet("", false);
    boolean b41 = treeset_str3.remove((java.lang.Object)"");
    java.lang.String str42 = treeset_str3.first();
    treeset_str3.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hi!"+ "'", str7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "hi!"+ "'", str42.equals("hi!"));

  }

  @Test
  public void test221() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test221"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.lang.String str4 = treeset_str1.pollFirst();
    java.util.NavigableSet<java.lang.String> navigableset_str9 = treeset_str1.subSet("", false, "[hi!]", false);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str1.headSet("[hi!]");
    java.util.Iterator<java.lang.String> iterator_str12 = treeset_str1.iterator();
    int i13 = treeset_str1.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);

  }

  @Test
  public void test222() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test222"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.lang.String str6 = treeset_str3.pollLast();
    java.util.stream.Stream<java.lang.String> stream_str7 = treeset_str3.stream();
    java.util.Iterator<java.lang.String> iterator_str8 = treeset_str3.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str9);
    java.lang.String str12 = treeset_str10.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str15 = treeset_str10.headSet("hi!", true);
    java.util.stream.Stream<java.lang.String> stream_str16 = treeset_str10.stream();
    java.util.Spliterator<java.lang.String> spliterator_str17 = treeset_str10.spliterator();
    boolean b18 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str10);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str3.tailSet("[[]]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!"+ "'", str6.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);

  }

  @Test
  public void test223() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test223"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("hi!", true);
    treeset_str1.clear();
    java.lang.String str8 = treeset_str1.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str8);

  }

  @Test
  public void test224() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test224"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.SortedSet<java.lang.String> sortedset_str15 = treeset_str1.tailSet("");
    java.util.Spliterator<java.lang.String> spliterator_str16 = treeset_str1.spliterator();
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array19 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str20 = new java.util.ArrayList<java.lang.String>();
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str20, str_array19);
    boolean b22 = treeset_str17.retainAll((java.util.Collection<java.lang.String>)arraylist_str20);
    java.lang.String str23 = treeset_str17.pollLast();
    java.util.Iterator<java.lang.String> iterator_str24 = treeset_str17.descendingIterator();
    java.lang.String[] str_array27 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>();
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str28, str_array27);
    java.util.NavigableSet<java.lang.String> navigableset_str30 = treeset_str28.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str31 = treeset_str28.iterator();
    boolean b32 = treeset_str17.equals((java.lang.Object)iterator_str31);
    java.util.Iterator<java.lang.String> iterator_str33 = treeset_str17.iterator();
    java.util.TreeSet<java.lang.String> treeset_str34 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str35 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str34);
    java.lang.String str37 = treeset_str35.lower("");
    java.lang.String str38 = treeset_str35.pollFirst();
    java.util.NavigableSet<java.lang.String> navigableset_str43 = treeset_str35.subSet("", false, "[hi!]", false);
    boolean b44 = treeset_str17.containsAll((java.util.Collection<java.lang.String>)treeset_str35);
    java.lang.String str45 = treeset_str35.pollFirst();
    java.lang.Object obj46 = treeset_str35.clone();
    // The following exception was thrown during execution in test generation
    try {
    boolean b47 = treeset_str1.remove(obj46);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj46);

  }

  @Test
  public void test225() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test225"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str8 = treeset_str0.headSet("");
    java.util.stream.Stream<java.lang.String> stream_str9 = treeset_str0.parallelStream();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array12 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str13 = new java.util.ArrayList<java.lang.String>();
    boolean b14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str13, str_array12);
    boolean b15 = treeset_str10.retainAll((java.util.Collection<java.lang.String>)arraylist_str13);
    java.lang.String str16 = treeset_str10.pollLast();
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str10.descendingIterator();
    java.lang.String[] str_array20 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str21, str_array20);
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str21.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str24 = treeset_str21.iterator();
    boolean b25 = treeset_str10.equals((java.lang.Object)iterator_str24);
    java.lang.CharSequence[] charSequence_array30 = new java.lang.CharSequence[] { "[]", "[]", "[]", "" };
    java.lang.CharSequence[] charSequence_array31 = treeset_str10.toArray(charSequence_array30);
    java.util.SortedSet<java.lang.String> sortedset_str33 = treeset_str10.tailSet("hi!");
    boolean b34 = treeset_str0.contains((java.lang.Object)"hi!");
    java.util.Iterator<java.lang.String> iterator_str35 = treeset_str0.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(charSequence_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(charSequence_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str35);

  }

  @Test
  public void test226() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test226"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str11, str_array10);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str11.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str14 = treeset_str11.iterator();
    boolean b15 = treeset_str0.equals((java.lang.Object)iterator_str14);
    java.lang.String str17 = treeset_str0.higher("[[]]");
    java.util.Iterator<java.lang.String> iterator_str18 = treeset_str0.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str18);

  }

  @Test
  public void test227() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test227"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.stream.Stream<java.lang.String> stream_str11 = treeset_str0.stream();
    java.util.Iterator<java.lang.String> iterator_str12 = treeset_str0.descendingIterator();
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str0.descendingSet();
    java.lang.String str14 = treeset_str0.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str14);

  }

  @Test
  public void test228() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test228"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str0.iterator();
    java.lang.String str27 = treeset_str0.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    int i29 = treeset_str0.size();
    int i30 = treeset_str0.size();
    java.lang.String str31 = treeset_str0.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str31);

  }

  @Test
  public void test229() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test229"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("", false);
    java.lang.String str7 = treeset_str1.pollLast();
    boolean b8 = treeset_str1.isEmpty();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    java.util.stream.Stream<java.lang.String> stream_str15 = treeset_str9.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str17 = treeset_str9.headSet("");
    java.util.stream.Stream<java.lang.String> stream_str18 = treeset_str9.parallelStream();
    boolean b19 = treeset_str1.equals((java.lang.Object)stream_str18);
    boolean b21 = treeset_str1.contains((java.lang.Object)100);
    java.util.NavigableSet<java.lang.String> navigableset_str22 = treeset_str1.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str22);

  }

  @Test
  public void test230() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test230"); }

    java.lang.String[] str_array1 = new java.lang.String[] { "" };
    java.util.TreeSet<java.lang.String> treeset_str2 = new java.util.TreeSet<java.lang.String>();
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str2, str_array1);
    int i4 = treeset_str2.size();
    java.lang.String str6 = treeset_str2.higher("");
    boolean b8 = treeset_str2.add("[]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);

  }

  @Test
  public void test231() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test231"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.stream.Stream<java.lang.String> stream_str11 = treeset_str0.stream();
    java.util.stream.Stream<java.lang.String> stream_str12 = treeset_str0.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str12);

  }

  @Test
  public void test232() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test232"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.lang.String str4 = treeset_str1.pollFirst();
    java.util.TreeSet<java.lang.String> treeset_str5 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str1);
    java.util.SortedSet<java.lang.String> sortedset_str8 = treeset_str1.subSet("[]", "[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str9);
    java.lang.String str12 = treeset_str10.lower("");
    boolean b13 = treeset_str10.isEmpty();
    boolean b14 = treeset_str1.contains((java.lang.Object)b13);
    java.util.NavigableSet<java.lang.String> navigableset_str15 = treeset_str1.descendingSet();
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str16);
    java.lang.String str19 = treeset_str17.lower("");
    java.lang.String str20 = treeset_str17.pollFirst();
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str17.subSet("[]", "[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array27 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str28 = new java.util.ArrayList<java.lang.String>();
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str28, str_array27);
    boolean b30 = treeset_str25.retainAll((java.util.Collection<java.lang.String>)arraylist_str28);
    java.util.TreeSet<java.lang.String> treeset_str31 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array33 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str34 = new java.util.ArrayList<java.lang.String>();
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str34, str_array33);
    boolean b36 = treeset_str31.retainAll((java.util.Collection<java.lang.String>)arraylist_str34);
    java.util.TreeSet<java.lang.String> treeset_str37 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array39 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str40 = new java.util.ArrayList<java.lang.String>();
    boolean b41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str40, str_array39);
    boolean b42 = treeset_str37.retainAll((java.util.Collection<java.lang.String>)arraylist_str40);
    java.util.ArrayList[] arrayList_array44 = new java.util.ArrayList[ 3 ];
    @SuppressWarnings("unchecked")
    java.util.ArrayList<java.lang.String>[] arraylist_str_array45 = (java.util.ArrayList<java.lang.String>[])arrayList_array44;
    arraylist_str_array45[0] = arraylist_str28;
    arraylist_str_array45[1] = arraylist_str34;
    arraylist_str_array45[2] = arraylist_str40;
    java.util.ArrayList<java.lang.String>[] arraylist_str_array52 = treeset_str17.toArray(arraylist_str_array45);
    java.util.AbstractList<java.lang.String>[] abstractlist_str_array53 = treeset_str1.toArray((java.util.AbstractList<java.lang.String>[])arraylist_str_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arrayList_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(abstractlist_str_array53);

  }

  @Test
  public void test233() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test233"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b25 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b26 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str8);
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str3.descendingSet();
    java.util.stream.Stream<java.lang.String> stream_str28 = treeset_str3.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str28);

  }

  @Test
  public void test234() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test234"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("hi!", true);
    java.lang.String[] str_array9 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>();
    boolean b11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str10, str_array9);
    java.util.NavigableSet<java.lang.String> navigableset_str12 = treeset_str10.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str13 = treeset_str10.iterator();
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str14);
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str19 = new java.util.ArrayList<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str19, str_array18);
    boolean b21 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)arraylist_str19);
    boolean b23 = treeset_str16.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str24 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str24);
    java.util.SortedSet<java.lang.String> sortedset_str27 = treeset_str25.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str30 = treeset_str25.headSet("", false);
    boolean b31 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)navigableset_str30);
    boolean b32 = treeset_str15.retainAll((java.util.Collection<java.lang.String>)navigableset_str30);
    boolean b33 = treeset_str10.removeAll((java.util.Collection<java.lang.String>)treeset_str15);
    boolean b34 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str10);
    int i35 = treeset_str10.size();
    java.util.NavigableSet<java.lang.String> navigableset_str36 = treeset_str10.descendingSet();
    java.util.TreeSet<java.lang.String> treeset_str37 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str38 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str37);
    java.util.SortedSet<java.lang.String> sortedset_str40 = treeset_str38.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str43 = treeset_str38.headSet("", false);
    java.lang.String str44 = treeset_str38.pollLast();
    java.util.SortedSet<java.lang.String> sortedset_str46 = treeset_str38.tailSet("[, hi!]");
    boolean b47 = treeset_str10.retainAll((java.util.Collection<java.lang.String>)sortedset_str46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i35 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);

  }

  @Test
  public void test235() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test235"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.SortedSet<java.lang.String> sortedset_str15 = treeset_str1.tailSet("");
    java.util.Spliterator<java.lang.String> spliterator_str16 = treeset_str1.spliterator();
    java.util.Comparator<? super java.lang.String> comparator_wildcard17 = treeset_str1.comparator();
    java.util.Iterator<java.lang.String> iterator_str18 = treeset_str1.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str18);

  }

  @Test
  public void test236() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test236"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str1.iterator();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str1);
    java.lang.String str20 = treeset_str1.higher("[, hi!]");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str1);
    int i22 = treeset_str21.size();
    java.util.NavigableSet<java.lang.String> navigableset_str25 = treeset_str21.headSet("[]", false);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str26 = treeset_str21.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str25);

  }

  @Test
  public void test237() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test237"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    boolean b20 = treeset_str13.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str21);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str22.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str22.headSet("", false);
    boolean b28 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b29 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b30 = treeset_str0.equals((java.lang.Object)b29);
    java.lang.String str32 = treeset_str0.ceiling("[hi!]");
    java.util.Iterator<java.lang.String> iterator_str33 = treeset_str0.iterator();
    java.util.SortedSet<java.lang.String> sortedset_str36 = treeset_str0.subSet("", "hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str37 = treeset_str0.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str38 = treeset_str0.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str38);

  }

  @Test
  public void test238() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test238"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.stream.Stream<java.lang.String> stream_str11 = treeset_str0.stream();
    java.util.Iterator<java.lang.String> iterator_str12 = treeset_str0.descendingIterator();
    java.util.stream.Stream<java.lang.String> stream_str13 = treeset_str0.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str13);

  }

  @Test
  public void test239() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test239"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str0.subSet("", true, "[hi!]", true);
    boolean b8 = treeset_str0.add("[]");
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str9);
    java.util.Comparator<? super java.lang.String> comparator_wildcard11 = treeset_str9.comparator();
    boolean b12 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)treeset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);

  }

  @Test
  public void test240() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test240"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("hi!", true);
    boolean b7 = treeset_str1.isEmpty();
    java.lang.String str9 = treeset_str1.higher("[[]]");
    java.lang.String str11 = treeset_str1.lower("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str11);

  }

  @Test
  public void test241() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test241"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str7.tailSet("hi!", false);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str7);
    java.lang.String str16 = treeset_str7.ceiling("[[]]");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array19 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str20 = new java.util.ArrayList<java.lang.String>();
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str20, str_array19);
    boolean b22 = treeset_str17.retainAll((java.util.Collection<java.lang.String>)arraylist_str20);
    java.util.TreeSet<java.lang.String> treeset_str23 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str24 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str23);
    java.util.SortedSet<java.lang.String> sortedset_str26 = treeset_str24.tailSet("");
    boolean b27 = treeset_str17.equals((java.lang.Object)treeset_str24);
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str28);
    java.util.TreeSet<java.lang.String> treeset_str30 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array32 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str33 = new java.util.ArrayList<java.lang.String>();
    boolean b34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str33, str_array32);
    boolean b35 = treeset_str30.retainAll((java.util.Collection<java.lang.String>)arraylist_str33);
    boolean b37 = treeset_str30.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str38 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str39 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str38);
    java.util.SortedSet<java.lang.String> sortedset_str41 = treeset_str39.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str44 = treeset_str39.headSet("", false);
    boolean b45 = treeset_str30.retainAll((java.util.Collection<java.lang.String>)navigableset_str44);
    boolean b46 = treeset_str29.retainAll((java.util.Collection<java.lang.String>)navigableset_str44);
    boolean b47 = treeset_str17.equals((java.lang.Object)b46);
    java.lang.String str49 = treeset_str17.ceiling("[hi!]");
    java.util.Iterator<java.lang.String> iterator_str50 = treeset_str17.iterator();
    java.util.SortedSet<java.lang.String> sortedset_str53 = treeset_str17.subSet("", "hi!");
    // The following exception was thrown during execution in test generation
    try {
    boolean b54 = treeset_str7.remove((java.lang.Object)sortedset_str53);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str53);

  }

  @Test
  public void test242() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test242"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str4 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array6 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str7 = new java.util.ArrayList<java.lang.String>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str7, str_array6);
    boolean b9 = treeset_str4.retainAll((java.util.Collection<java.lang.String>)arraylist_str7);
    boolean b10 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str4);
    boolean b12 = treeset_str1.add("[]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);

  }

  @Test
  public void test243() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test243"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.stream.Stream<java.lang.String> stream_str11 = treeset_str0.stream();
    java.util.Spliterator<java.lang.String> spliterator_str12 = treeset_str0.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str12);

  }

  @Test
  public void test244() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test244"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str0.iterator();
    java.lang.String str27 = treeset_str0.lower("hi!");
    java.util.SortedSet<java.lang.String> sortedset_str29 = treeset_str0.headSet("[[hi!]]");
    java.lang.Object obj30 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b31 = treeset_str0.remove(obj30);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str29);

  }

  @Test
  public void test245() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test245"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    boolean b20 = treeset_str13.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str21);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str22.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str22.headSet("", false);
    boolean b28 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b29 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b30 = treeset_str0.equals((java.lang.Object)b29);
    java.lang.String str32 = treeset_str0.ceiling("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str33 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.NavigableSet<java.lang.String> navigableset_str36 = treeset_str0.tailSet("", true);
    boolean b37 = treeset_str0.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);

  }

  @Test
  public void test246() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test246"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    treeset_str0.clear();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str3 = treeset_str0.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }

  }

  @Test
  public void test247() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test247"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str1.subSet("[hi!]", true, "[hi!]", true);
    boolean b20 = treeset_str1.add("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);

  }

  @Test
  public void test248() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test248"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b25 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b26 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str28 = treeset_str8.tailSet("hi!");
    java.lang.String str30 = treeset_str8.higher("");
    java.lang.String[] str_array33 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str34 = new java.util.TreeSet<java.lang.String>();
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str34, str_array33);
    java.util.NavigableSet<java.lang.String> navigableset_str36 = treeset_str34.descendingSet();
    java.lang.String str37 = treeset_str34.pollLast();
    java.util.stream.Stream<java.lang.String> stream_str38 = treeset_str34.stream();
    java.util.TreeSet<java.lang.String> treeset_str39 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array41 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str42 = new java.util.ArrayList<java.lang.String>();
    boolean b43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str42, str_array41);
    boolean b44 = treeset_str39.retainAll((java.util.Collection<java.lang.String>)arraylist_str42);
    java.util.TreeSet<java.lang.String> treeset_str45 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str46 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str45);
    java.util.SortedSet<java.lang.String> sortedset_str48 = treeset_str46.tailSet("");
    boolean b49 = treeset_str39.equals((java.lang.Object)treeset_str46);
    java.util.stream.Stream<java.lang.String> stream_str50 = treeset_str39.stream();
    java.util.stream.Stream[] stream_array52 = new java.util.stream.Stream[ 2 ];
    @SuppressWarnings("unchecked")
    java.util.stream.Stream<java.lang.String>[] stream_str_array53 = (java.util.stream.Stream<java.lang.String>[])stream_array52;
    stream_str_array53[0] = stream_str38;
    stream_str_array53[1] = stream_str50;
    java.util.stream.Stream<java.lang.String>[] stream_str_array58 = treeset_str8.toArray(stream_str_array53);
    // The following exception was thrown during execution in test generation
    try {
    java.util.NavigableSet<java.lang.String> navigableset_str63 = treeset_str8.subSet("[]", false, "", true);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "hi!"+ "'", str37.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str_array58);

  }

  @Test
  public void test249() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test249"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str8 = treeset_str0.headSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str0.subSet("[hi!]", true, "hi!", false);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str14);
    java.lang.String str17 = treeset_str15.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str20 = treeset_str15.headSet("hi!", true);
    boolean b21 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str15);
    java.util.stream.Stream<java.lang.String> stream_str22 = treeset_str0.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str25 = treeset_str0.subSet("[]", "[]");
    java.util.stream.Stream<java.lang.String> stream_str26 = treeset_str0.stream();
    java.util.Iterator<java.lang.String> iterator_str27 = treeset_str0.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str27);

  }

  @Test
  public void test250() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test250"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b25 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b26 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str8);
    boolean b28 = treeset_str8.add("[hi!]");
    java.util.NavigableSet<java.lang.String> navigableset_str31 = treeset_str8.headSet("", false);
    java.lang.Object obj32 = null;
    boolean b33 = treeset_str8.equals(obj32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);

  }

  @Test
  public void test251() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test251"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    int i6 = treeset_str3.size();
    java.lang.String str8 = treeset_str3.lower("[]");
    java.lang.Object[] obj_array9 = treeset_str3.toArray();
    java.util.Iterator<java.lang.String> iterator_str10 = treeset_str3.iterator();
    java.util.Iterator<java.lang.String> iterator_str11 = treeset_str3.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + ""+ "'", str8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str11);

  }

  @Test
  public void test252() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test252"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b25 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b26 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str28 = treeset_str8.tailSet("hi!");
    java.lang.Object obj29 = treeset_str8.clone();
    java.lang.String str31 = treeset_str8.ceiling("[, hi!]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str31);

  }

  @Test
  public void test253() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test253"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str0.headSet("[hi!]", true);
    java.lang.String str28 = treeset_str0.toString();
    java.lang.Object[] obj_array29 = treeset_str0.toArray();
    java.util.NavigableSet<java.lang.String> navigableset_str32 = treeset_str0.tailSet("[[hi!]]", true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "[]"+ "'", str28.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str32);

  }

  @Test
  public void test254() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test254"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str0.iterator();
    java.lang.String str27 = treeset_str0.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array31 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str32 = new java.util.ArrayList<java.lang.String>();
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str32, str_array31);
    boolean b34 = treeset_str29.retainAll((java.util.Collection<java.lang.String>)arraylist_str32);
    java.lang.String str35 = treeset_str29.pollLast();
    java.util.Iterator<java.lang.String> iterator_str36 = treeset_str29.descendingIterator();
    java.util.Iterator<java.lang.String> iterator_str37 = treeset_str29.descendingIterator();
    boolean b38 = treeset_str28.retainAll((java.util.Collection<java.lang.String>)treeset_str29);
    java.lang.String str39 = treeset_str28.pollFirst();
    java.util.Iterator<java.lang.String> iterator_str40 = treeset_str28.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str40);

  }

  @Test
  public void test255() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test255"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str11, str_array10);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str11.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str14 = treeset_str11.iterator();
    boolean b15 = treeset_str0.equals((java.lang.Object)iterator_str14);
    java.util.Iterator<java.lang.String> iterator_str16 = treeset_str0.iterator();
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array19 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str20 = new java.util.ArrayList<java.lang.String>();
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str20, str_array19);
    boolean b22 = treeset_str17.retainAll((java.util.Collection<java.lang.String>)arraylist_str20);
    boolean b24 = treeset_str17.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str26 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str25);
    java.util.SortedSet<java.lang.String> sortedset_str28 = treeset_str26.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str31 = treeset_str26.headSet("", false);
    boolean b32 = treeset_str17.retainAll((java.util.Collection<java.lang.String>)navigableset_str31);
    java.lang.String[] str_array35 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str36 = new java.util.TreeSet<java.lang.String>();
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str36, str_array35);
    java.util.NavigableSet<java.lang.String> navigableset_str38 = treeset_str36.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str39 = treeset_str36.iterator();
    java.util.Iterator<java.lang.String> iterator_str40 = treeset_str36.iterator();
    boolean b41 = treeset_str17.removeAll((java.util.Collection<java.lang.String>)treeset_str36);
    java.util.SortedSet[] sortedSet_array43 = new java.util.SortedSet[ 1 ];
    @SuppressWarnings("unchecked")
    java.util.SortedSet<java.lang.String>[] sortedset_str_array44 = (java.util.SortedSet<java.lang.String>[])sortedSet_array43;
    sortedset_str_array44[0] = treeset_str17;
    java.util.SortedSet[][] sortedSet_array_array48 = new java.util.SortedSet[ 1 ][];
    @SuppressWarnings("unchecked")
    java.util.SortedSet<java.lang.String>[][] sortedset_str_array_array49 = (java.util.SortedSet<java.lang.String>[][])sortedSet_array_array48;
    sortedset_str_array_array49[0] = sortedset_str_array44;
    java.util.SortedSet<java.lang.String>[][] sortedset_str_array_array52 = treeset_str0.toArray(sortedset_str_array_array49);
    java.util.TreeSet<java.lang.String> treeset_str53 = new java.util.TreeSet<java.lang.String>();
    boolean b54 = treeset_str0.containsAll((java.util.Collection<java.lang.String>)treeset_str53);
    java.util.TreeSet<java.lang.String> treeset_str55 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str56 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str55);
    java.util.SortedSet<java.lang.String> sortedset_str58 = treeset_str56.tailSet("");
    java.util.SortedSet<java.lang.String> sortedset_str60 = treeset_str56.headSet("[[hi!]]");
    boolean b61 = treeset_str53.retainAll((java.util.Collection<java.lang.String>)treeset_str56);
    boolean b63 = treeset_str56.add("[[hi!]]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet_array_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == true);

  }

  @Test
  public void test256() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test256"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    boolean b20 = treeset_str13.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str21);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str22.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str22.headSet("", false);
    boolean b28 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b29 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b30 = treeset_str0.equals((java.lang.Object)b29);
    java.lang.String str32 = treeset_str0.ceiling("[hi!]");
    java.util.Iterator<java.lang.String> iterator_str33 = treeset_str0.iterator();
    java.util.SortedSet<java.lang.String> sortedset_str36 = treeset_str0.subSet("", "hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str39 = treeset_str0.tailSet("[[]]", false);
    java.util.TreeSet<java.lang.String> treeset_str40 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array42 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str43 = new java.util.ArrayList<java.lang.String>();
    boolean b44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str43, str_array42);
    boolean b45 = treeset_str40.retainAll((java.util.Collection<java.lang.String>)arraylist_str43);
    boolean b47 = treeset_str40.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str50 = treeset_str40.tailSet("hi!", true);
    java.util.TreeSet<java.lang.String> treeset_str51 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str40);
    java.lang.String str52 = treeset_str40.toString();
    java.util.SortedSet<java.lang.String> sortedset_str54 = treeset_str40.tailSet("");
    boolean b55 = treeset_str0.containsAll((java.util.Collection<java.lang.String>)sortedset_str54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str52 + "' != '" + "[hi!]"+ "'", str52.equals("[hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);

  }

  @Test
  public void test257() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test257"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str0.iterator();
    java.lang.String str27 = treeset_str0.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    java.lang.String str29 = treeset_str28.pollFirst();
    java.util.NavigableSet<java.lang.String> navigableset_str32 = treeset_str28.headSet("", true);
    java.util.SortedSet<java.lang.String> sortedset_str34 = treeset_str28.tailSet("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str34);

  }

  @Test
  public void test258() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test258"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    boolean b20 = treeset_str13.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str21);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str22.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str22.headSet("", false);
    boolean b28 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b29 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b30 = treeset_str0.equals((java.lang.Object)b29);
    java.lang.String str32 = treeset_str0.ceiling("[hi!]");
    java.util.Iterator<java.lang.String> iterator_str33 = treeset_str0.iterator();
    java.util.SortedSet<java.lang.String> sortedset_str36 = treeset_str0.subSet("", "hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str39 = treeset_str0.tailSet("[[]]", false);
    java.util.Iterator<java.lang.String> iterator_str40 = treeset_str0.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str45 = treeset_str0.subSet("[[]]", false, "[[hi!]]", true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str45);

  }

  @Test
  public void test259() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test259"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.lang.String str8 = treeset_str0.lower("");
    java.lang.String str10 = treeset_str0.higher("");
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array13 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str14 = new java.util.ArrayList<java.lang.String>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str14, str_array13);
    boolean b16 = treeset_str11.retainAll((java.util.Collection<java.lang.String>)arraylist_str14);
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array19 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str20 = new java.util.ArrayList<java.lang.String>();
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str20, str_array19);
    boolean b22 = treeset_str17.retainAll((java.util.Collection<java.lang.String>)arraylist_str20);
    java.util.TreeSet<java.lang.String> treeset_str23 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array25 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str26 = new java.util.ArrayList<java.lang.String>();
    boolean b27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str26, str_array25);
    boolean b28 = treeset_str23.retainAll((java.util.Collection<java.lang.String>)arraylist_str26);
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array31 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str32 = new java.util.ArrayList<java.lang.String>();
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str32, str_array31);
    boolean b34 = treeset_str29.retainAll((java.util.Collection<java.lang.String>)arraylist_str32);
    java.util.ArrayList[] arrayList_array36 = new java.util.ArrayList[ 4 ];
    @SuppressWarnings("unchecked")
    java.util.ArrayList<java.lang.String>[] arraylist_str_array37 = (java.util.ArrayList<java.lang.String>[])arrayList_array36;
    arraylist_str_array37[0] = arraylist_str14;
    arraylist_str_array37[1] = arraylist_str20;
    arraylist_str_array37[2] = arraylist_str26;
    arraylist_str_array37[3] = arraylist_str32;
    java.util.TreeSet<java.lang.String> treeset_str46 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array48 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str49 = new java.util.ArrayList<java.lang.String>();
    boolean b50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str49, str_array48);
    boolean b51 = treeset_str46.retainAll((java.util.Collection<java.lang.String>)arraylist_str49);
    java.util.TreeSet<java.lang.String> treeset_str52 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array54 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str55 = new java.util.ArrayList<java.lang.String>();
    boolean b56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str55, str_array54);
    boolean b57 = treeset_str52.retainAll((java.util.Collection<java.lang.String>)arraylist_str55);
    java.util.TreeSet<java.lang.String> treeset_str58 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array60 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str61 = new java.util.ArrayList<java.lang.String>();
    boolean b62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str61, str_array60);
    boolean b63 = treeset_str58.retainAll((java.util.Collection<java.lang.String>)arraylist_str61);
    java.util.TreeSet<java.lang.String> treeset_str64 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array66 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str67 = new java.util.ArrayList<java.lang.String>();
    boolean b68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str67, str_array66);
    boolean b69 = treeset_str64.retainAll((java.util.Collection<java.lang.String>)arraylist_str67);
    java.util.ArrayList[] arrayList_array71 = new java.util.ArrayList[ 4 ];
    @SuppressWarnings("unchecked")
    java.util.ArrayList<java.lang.String>[] arraylist_str_array72 = (java.util.ArrayList<java.lang.String>[])arrayList_array71;
    arraylist_str_array72[0] = arraylist_str49;
    arraylist_str_array72[1] = arraylist_str55;
    arraylist_str_array72[2] = arraylist_str61;
    arraylist_str_array72[3] = arraylist_str67;
    java.util.ArrayList[][] arrayList_array_array82 = new java.util.ArrayList[ 2 ][];
    @SuppressWarnings("unchecked")
    java.util.ArrayList<java.lang.String>[][] arraylist_str_array_array83 = (java.util.ArrayList<java.lang.String>[][])arrayList_array_array82;
    arraylist_str_array_array83[0] = arraylist_str_array37;
    arraylist_str_array_array83[1] = arraylist_str_array72;
    java.util.ArrayList<java.lang.String>[][] arraylist_str_array_array88 = treeset_str0.toArray(arraylist_str_array_array83);
    java.lang.String str90 = treeset_str0.floor("[hi!]");
    java.lang.String str92 = treeset_str0.higher("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str97 = treeset_str0.subSet("", true, "[]", false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arrayList_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arrayList_array71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arrayList_array_array82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array_array83);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array_array88);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str90);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str92);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str97);

  }

  @Test
  public void test260() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test260"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array16 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str17 = new java.util.ArrayList<java.lang.String>();
    boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str17, str_array16);
    boolean b19 = treeset_str14.retainAll((java.util.Collection<java.lang.String>)arraylist_str17);
    java.util.stream.Stream<java.lang.String> stream_str20 = treeset_str14.parallelStream();
    java.lang.String str22 = treeset_str14.lower("");
    java.util.TreeSet<java.lang.String> treeset_str23 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array25 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str26 = new java.util.ArrayList<java.lang.String>();
    boolean b27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str26, str_array25);
    boolean b28 = treeset_str23.retainAll((java.util.Collection<java.lang.String>)arraylist_str26);
    boolean b30 = treeset_str23.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str31 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str32 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str31);
    java.util.SortedSet<java.lang.String> sortedset_str34 = treeset_str32.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str37 = treeset_str32.headSet("", false);
    boolean b38 = treeset_str23.retainAll((java.util.Collection<java.lang.String>)navigableset_str37);
    java.lang.String[] str_array41 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str42 = new java.util.TreeSet<java.lang.String>();
    boolean b43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str42, str_array41);
    java.util.NavigableSet<java.lang.String> navigableset_str44 = treeset_str42.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str45 = treeset_str42.iterator();
    java.util.Iterator<java.lang.String> iterator_str46 = treeset_str42.iterator();
    boolean b47 = treeset_str23.removeAll((java.util.Collection<java.lang.String>)treeset_str42);
    java.util.Iterator<java.lang.String> iterator_str48 = treeset_str23.iterator();
    java.util.TreeSet<java.lang.String> treeset_str49 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str50 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str49);
    java.util.Iterator<java.lang.String> iterator_str51 = treeset_str50.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str52 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array54 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str55 = new java.util.ArrayList<java.lang.String>();
    boolean b56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str55, str_array54);
    boolean b57 = treeset_str52.retainAll((java.util.Collection<java.lang.String>)arraylist_str55);
    boolean b59 = treeset_str52.add("hi!");
    boolean b60 = treeset_str50.contains((java.lang.Object)"hi!");
    java.lang.String str62 = treeset_str50.ceiling("hi!");
    treeset_str50.clear();
    java.util.TreeSet<java.lang.String> treeset_str64 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str65 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str64);
    java.util.Iterator<java.lang.String> iterator_str66 = treeset_str65.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str67 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array69 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str70 = new java.util.ArrayList<java.lang.String>();
    boolean b71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str70, str_array69);
    boolean b72 = treeset_str67.retainAll((java.util.Collection<java.lang.String>)arraylist_str70);
    boolean b74 = treeset_str67.add("hi!");
    boolean b75 = treeset_str65.contains((java.lang.Object)"hi!");
    java.lang.String str77 = treeset_str65.ceiling("hi!");
    java.util.TreeSet<java.lang.String> treeset_str78 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str79 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str78);
    java.util.SortedSet<java.lang.String> sortedset_str81 = treeset_str79.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str84 = treeset_str79.headSet("", false);
    java.util.SortedSet[] sortedSet_array86 = new java.util.SortedSet[ 4 ];
    @SuppressWarnings("unchecked")
    java.util.SortedSet<java.lang.String>[] sortedset_str_array87 = (java.util.SortedSet<java.lang.String>[])sortedSet_array86;
    sortedset_str_array87[0] = treeset_str23;
    sortedset_str_array87[1] = treeset_str50;
    sortedset_str_array87[2] = treeset_str65;
    sortedset_str_array87[3] = treeset_str79;
    java.util.SortedSet<java.lang.String>[] sortedset_str_array96 = treeset_str14.toArray(sortedset_str_array87);
    java.util.Collection<java.lang.String>[] collection_str_array97 = treeset_str1.toArray((java.util.Collection<java.lang.String>[])sortedset_str_array87);
    java.util.Spliterator<java.lang.String> spliterator_str98 = treeset_str1.spliterator();
    java.lang.String str99 = treeset_str1.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b74 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str81);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str84);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet_array86);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array87);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array96);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_str_array97);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str98);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str99 + "' != '" + "[]"+ "'", str99.equals("[]"));

  }

  @Test
  public void test261() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test261"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str0.tailSet("hi!", true);
    java.lang.String str12 = treeset_str0.higher("[hi!]");
    java.lang.String str14 = treeset_str0.higher("[[hi!]]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!"+ "'", str12.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!"+ "'", str14.equals("hi!"));

  }

  @Test
  public void test262() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test262"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.stream.Stream<java.lang.String> stream_str11 = treeset_str0.stream();
    java.util.Iterator<java.lang.String> iterator_str12 = treeset_str0.descendingIterator();
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str0.descendingSet();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str16, str_array15);
    int i18 = treeset_str16.size();
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str16);
    boolean b20 = treeset_str0.addAll((java.util.Collection<java.lang.String>)treeset_str19);
    // The following exception was thrown during execution in test generation
    try {
    java.util.NavigableSet<java.lang.String> navigableset_str25 = treeset_str0.subSet("[]", true, "[[]]", false);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);

  }

  @Test
  public void test263() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test263"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    boolean b20 = treeset_str13.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str21);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str22.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str22.headSet("", false);
    boolean b28 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b29 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b30 = treeset_str0.equals((java.lang.Object)b29);
    java.lang.String str32 = treeset_str0.ceiling("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str33 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Comparator<? super java.lang.String> comparator_wildcard34 = treeset_str33.comparator();
    java.util.stream.Stream<java.lang.String> stream_str35 = treeset_str33.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str35);

  }

  @Test
  public void test264() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test264"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str0.tailSet("hi!", true);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    boolean b13 = treeset_str11.add("[]");
    java.lang.String str15 = treeset_str11.floor("hi!");
    java.lang.String str17 = treeset_str11.higher("");
    java.lang.String str18 = treeset_str11.pollFirst();
    java.lang.Object obj19 = treeset_str11.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!"+ "'", str15.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "[]"+ "'", str17.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "[]"+ "'", str18.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj19);

  }

  @Test
  public void test265() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test265"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str4 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array6 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str7 = new java.util.ArrayList<java.lang.String>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str7, str_array6);
    boolean b9 = treeset_str4.retainAll((java.util.Collection<java.lang.String>)arraylist_str7);
    boolean b10 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str4);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.NavigableSet<java.lang.String> navigableset_str17 = treeset_str11.subSet("", true, "[hi!]", true);
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str18);
    java.util.SortedSet<java.lang.String> sortedset_str21 = treeset_str19.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array24 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str25 = new java.util.ArrayList<java.lang.String>();
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str25, str_array24);
    boolean b27 = treeset_str22.retainAll((java.util.Collection<java.lang.String>)arraylist_str25);
    boolean b28 = treeset_str19.retainAll((java.util.Collection<java.lang.String>)treeset_str22);
    java.util.NavigableSet<java.lang.String> navigableset_str31 = treeset_str19.headSet("", false);
    boolean b32 = treeset_str11.retainAll((java.util.Collection<java.lang.String>)treeset_str19);
    boolean b33 = treeset_str11.isEmpty();
    java.util.NavigableSet<java.lang.String> navigableset_str34 = treeset_str11.descendingSet();
    boolean b35 = treeset_str4.retainAll((java.util.Collection<java.lang.String>)treeset_str11);
    java.util.NavigableSet<java.lang.String> navigableset_str38 = treeset_str4.tailSet("[]", false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str38);

  }

  @Test
  public void test266() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test266"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b25 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b26 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str8);
    boolean b28 = treeset_str8.add("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array31 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str32 = new java.util.ArrayList<java.lang.String>();
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str32, str_array31);
    boolean b34 = treeset_str29.retainAll((java.util.Collection<java.lang.String>)arraylist_str32);
    java.util.TreeSet<java.lang.String> treeset_str35 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str36 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str35);
    java.util.SortedSet<java.lang.String> sortedset_str38 = treeset_str36.tailSet("");
    boolean b39 = treeset_str29.equals((java.lang.Object)treeset_str36);
    java.util.TreeSet<java.lang.String> treeset_str40 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str41 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str40);
    java.util.TreeSet<java.lang.String> treeset_str42 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array44 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str45 = new java.util.ArrayList<java.lang.String>();
    boolean b46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str45, str_array44);
    boolean b47 = treeset_str42.retainAll((java.util.Collection<java.lang.String>)arraylist_str45);
    boolean b49 = treeset_str42.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str50 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str51 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str50);
    java.util.SortedSet<java.lang.String> sortedset_str53 = treeset_str51.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str56 = treeset_str51.headSet("", false);
    boolean b57 = treeset_str42.retainAll((java.util.Collection<java.lang.String>)navigableset_str56);
    boolean b58 = treeset_str41.retainAll((java.util.Collection<java.lang.String>)navigableset_str56);
    boolean b59 = treeset_str29.equals((java.lang.Object)b58);
    java.lang.String str61 = treeset_str29.ceiling("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str62 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str29);
    java.util.stream.Stream<java.lang.String> stream_str63 = treeset_str29.parallelStream();
    boolean b64 = treeset_str8.containsAll((java.util.Collection<java.lang.String>)treeset_str29);
    int i65 = treeset_str8.size();
    java.util.Spliterator<java.lang.String> spliterator_str66 = treeset_str8.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str66);

  }

  @Test
  public void test267() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test267"); }

    java.lang.String[] str_array4 = new java.lang.String[] { "", "hi!", "hi!", "[]" };
    java.util.TreeSet<java.lang.String> treeset_str5 = new java.util.TreeSet<java.lang.String>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str5, str_array4);
    java.lang.String str7 = treeset_str5.first();
    java.lang.String str8 = treeset_str5.last();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    java.lang.String[] str_array27 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>();
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str28, str_array27);
    java.util.NavigableSet<java.lang.String> navigableset_str30 = treeset_str28.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str31 = treeset_str28.iterator();
    java.util.Iterator<java.lang.String> iterator_str32 = treeset_str28.iterator();
    boolean b33 = treeset_str9.removeAll((java.util.Collection<java.lang.String>)treeset_str28);
    java.util.Iterator<java.lang.String> iterator_str34 = treeset_str9.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str35 = treeset_str9.descendingSet();
    java.lang.String str36 = treeset_str9.pollFirst();
    boolean b37 = treeset_str5.equals((java.lang.Object)treeset_str9);
    java.util.TreeSet<java.lang.String> treeset_str38 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array40 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str41 = new java.util.ArrayList<java.lang.String>();
    boolean b42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str41, str_array40);
    boolean b43 = treeset_str38.retainAll((java.util.Collection<java.lang.String>)arraylist_str41);
    boolean b45 = treeset_str38.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str46 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str47 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str46);
    java.util.SortedSet<java.lang.String> sortedset_str49 = treeset_str47.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str52 = treeset_str47.headSet("", false);
    boolean b53 = treeset_str38.retainAll((java.util.Collection<java.lang.String>)navigableset_str52);
    java.lang.String[] str_array56 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str57 = new java.util.TreeSet<java.lang.String>();
    boolean b58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str57, str_array56);
    java.util.NavigableSet<java.lang.String> navigableset_str59 = treeset_str57.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str60 = treeset_str57.iterator();
    java.util.Iterator<java.lang.String> iterator_str61 = treeset_str57.iterator();
    boolean b62 = treeset_str38.removeAll((java.util.Collection<java.lang.String>)treeset_str57);
    java.util.Iterator<java.lang.String> iterator_str63 = treeset_str38.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str64 = treeset_str38.descendingSet();
    java.util.Spliterator<java.lang.String> spliterator_str65 = treeset_str38.spliterator();
    // The following exception was thrown during execution in test generation
    try {
    boolean b66 = treeset_str5.remove((java.lang.Object)treeset_str38);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + ""+ "'", str7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!"+ "'", str8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str65);

  }

  @Test
  public void test268() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test268"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str6 = treeset_str0.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);

  }

  @Test
  public void test269() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test269"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.lang.String str4 = treeset_str1.pollFirst();
    java.util.NavigableSet<java.lang.String> navigableset_str9 = treeset_str1.subSet("", false, "[hi!]", false);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str1.headSet("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array14 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str15 = new java.util.ArrayList<java.lang.String>();
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str15, str_array14);
    boolean b17 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)arraylist_str15);
    java.lang.String str18 = treeset_str12.pollLast();
    boolean b19 = treeset_str1.containsAll((java.util.Collection<java.lang.String>)treeset_str12);
    java.util.stream.Stream<java.lang.String> stream_str20 = treeset_str1.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str20);

  }

  @Test
  public void test270() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test270"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("hi!", true);
    treeset_str1.clear();
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str1.headSet("hi!", true);
    java.util.stream.Stream<java.lang.String> stream_str11 = treeset_str1.parallelStream();
    java.lang.String str12 = treeset_str1.toString();
    java.lang.String str14 = treeset_str1.ceiling("[]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "[]"+ "'", str12.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str14);

  }

  @Test
  public void test271() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test271"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str4 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array6 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str7 = new java.util.ArrayList<java.lang.String>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str7, str_array6);
    boolean b9 = treeset_str4.retainAll((java.util.Collection<java.lang.String>)arraylist_str7);
    boolean b10 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str4);
    java.lang.String str12 = treeset_str1.higher("");
    boolean b14 = treeset_str1.add("[]");
    boolean b16 = treeset_str1.add("[[]]");
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str1.subSet("[]", true, "[]", true);
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);

  }

  @Test
  public void test272() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test272"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str8 = treeset_str0.headSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str0.subSet("[hi!]", true, "hi!", false);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str14);
    java.lang.String str17 = treeset_str15.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str20 = treeset_str15.headSet("hi!", true);
    boolean b21 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str15);
    boolean b22 = treeset_str15.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);

  }

  @Test
  public void test273() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test273"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b25 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b26 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str8);
    java.util.TreeSet<java.lang.String> treeset_str27 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array29 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str30 = new java.util.ArrayList<java.lang.String>();
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str30, str_array29);
    boolean b32 = treeset_str27.retainAll((java.util.Collection<java.lang.String>)arraylist_str30);
    java.lang.String str33 = treeset_str27.pollLast();
    java.util.Iterator<java.lang.String> iterator_str34 = treeset_str27.descendingIterator();
    java.lang.String[] str_array37 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str38 = new java.util.TreeSet<java.lang.String>();
    boolean b39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str38, str_array37);
    java.util.NavigableSet<java.lang.String> navigableset_str40 = treeset_str38.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str41 = treeset_str38.iterator();
    boolean b42 = treeset_str27.equals((java.lang.Object)iterator_str41);
    java.util.Iterator<java.lang.String> iterator_str43 = treeset_str27.iterator();
    boolean b44 = treeset_str8.equals((java.lang.Object)treeset_str27);
    java.util.SortedSet<java.lang.String> sortedset_str46 = treeset_str8.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str47 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str48 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str47);
    java.util.Iterator<java.lang.String> iterator_str49 = treeset_str48.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str50 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array52 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str53 = new java.util.ArrayList<java.lang.String>();
    boolean b54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str53, str_array52);
    boolean b55 = treeset_str50.retainAll((java.util.Collection<java.lang.String>)arraylist_str53);
    boolean b57 = treeset_str50.add("hi!");
    boolean b58 = treeset_str48.contains((java.lang.Object)"hi!");
    java.lang.String str60 = treeset_str48.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str63 = treeset_str48.headSet("", false);
    boolean b64 = treeset_str8.remove((java.lang.Object)"");
    java.util.Comparator<? super java.lang.String> comparator_wildcard65 = treeset_str8.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard65);

  }

  @Test
  public void test274() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test274"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str11, str_array10);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str11.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str14 = treeset_str11.iterator();
    boolean b15 = treeset_str0.equals((java.lang.Object)iterator_str14);
    java.util.Iterator<java.lang.String> iterator_str16 = treeset_str0.iterator();
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array19 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str20 = new java.util.ArrayList<java.lang.String>();
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str20, str_array19);
    boolean b22 = treeset_str17.retainAll((java.util.Collection<java.lang.String>)arraylist_str20);
    boolean b24 = treeset_str17.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str26 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str25);
    java.util.SortedSet<java.lang.String> sortedset_str28 = treeset_str26.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str31 = treeset_str26.headSet("", false);
    boolean b32 = treeset_str17.retainAll((java.util.Collection<java.lang.String>)navigableset_str31);
    java.lang.String[] str_array35 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str36 = new java.util.TreeSet<java.lang.String>();
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str36, str_array35);
    java.util.NavigableSet<java.lang.String> navigableset_str38 = treeset_str36.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str39 = treeset_str36.iterator();
    java.util.Iterator<java.lang.String> iterator_str40 = treeset_str36.iterator();
    boolean b41 = treeset_str17.removeAll((java.util.Collection<java.lang.String>)treeset_str36);
    java.util.SortedSet[] sortedSet_array43 = new java.util.SortedSet[ 1 ];
    @SuppressWarnings("unchecked")
    java.util.SortedSet<java.lang.String>[] sortedset_str_array44 = (java.util.SortedSet<java.lang.String>[])sortedSet_array43;
    sortedset_str_array44[0] = treeset_str17;
    java.util.SortedSet[][] sortedSet_array_array48 = new java.util.SortedSet[ 1 ][];
    @SuppressWarnings("unchecked")
    java.util.SortedSet<java.lang.String>[][] sortedset_str_array_array49 = (java.util.SortedSet<java.lang.String>[][])sortedSet_array_array48;
    sortedset_str_array_array49[0] = sortedset_str_array44;
    java.util.SortedSet<java.lang.String>[][] sortedset_str_array_array52 = treeset_str0.toArray(sortedset_str_array_array49);
    java.util.TreeSet<java.lang.String> treeset_str53 = new java.util.TreeSet<java.lang.String>();
    boolean b54 = treeset_str0.containsAll((java.util.Collection<java.lang.String>)treeset_str53);
    java.util.TreeSet<java.lang.String> treeset_str55 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str56 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str55);
    java.util.SortedSet<java.lang.String> sortedset_str58 = treeset_str56.tailSet("");
    java.util.SortedSet<java.lang.String> sortedset_str60 = treeset_str56.headSet("[[hi!]]");
    boolean b61 = treeset_str53.retainAll((java.util.Collection<java.lang.String>)treeset_str56);
    java.util.stream.Stream<java.lang.String> stream_str62 = treeset_str53.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet_array_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str62);

  }

  @Test
  public void test275() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test275"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    boolean b20 = treeset_str13.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str21);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str22.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str22.headSet("", false);
    boolean b28 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b29 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b30 = treeset_str0.equals((java.lang.Object)b29);
    java.lang.String str32 = treeset_str0.ceiling("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str33 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str35 = treeset_str33.headSet("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str35);

  }

  @Test
  public void test276() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test276"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    treeset_str0.clear();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str4 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str3);
    java.lang.String str6 = treeset_str4.lower("");
    java.lang.String str7 = treeset_str4.pollFirst();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str4);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str4.subSet("[]", "[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str12);
    java.lang.String str15 = treeset_str13.lower("");
    boolean b16 = treeset_str13.isEmpty();
    boolean b17 = treeset_str4.contains((java.lang.Object)b16);
    java.lang.String str18 = treeset_str4.pollFirst();
    boolean b19 = treeset_str0.addAll((java.util.Collection<java.lang.String>)treeset_str4);
    int i20 = treeset_str4.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);

  }

  @Test
  public void test277() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test277"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str2 = treeset_str1.toString();
    java.lang.String str3 = treeset_str1.toString();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str4 = treeset_str1.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "[]"+ "'", str2.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "[]"+ "'", str3.equals("[]"));

  }

  @Test
  public void test278() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test278"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.lang.String str8 = treeset_str0.toString();
    java.util.Spliterator<java.lang.String> spliterator_str9 = treeset_str0.spliterator();
    java.util.NavigableSet<java.lang.String> navigableset_str12 = treeset_str0.headSet("hi!", false);
    java.lang.String str14 = treeset_str0.floor("[[hi!]]");
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str15);
    java.util.SortedSet<java.lang.String> sortedset_str18 = treeset_str16.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>(sortedset_str18);
    boolean b20 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    // The following exception was thrown during execution in test generation
    try {
    java.util.NavigableSet<java.lang.String> navigableset_str25 = treeset_str19.subSet("[[hi!]]", true, "", false);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "[hi!]"+ "'", str8.equals("[hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test279() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test279"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b25 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b26 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str8);
    boolean b28 = treeset_str8.add("[hi!]");
    java.util.NavigableSet<java.lang.String> navigableset_str31 = treeset_str8.headSet("", false);
    java.util.TreeSet<java.lang.String> treeset_str32 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array34 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str35 = new java.util.ArrayList<java.lang.String>();
    boolean b36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str35, str_array34);
    boolean b37 = treeset_str32.retainAll((java.util.Collection<java.lang.String>)arraylist_str35);
    java.util.stream.Stream<java.lang.String> stream_str38 = treeset_str32.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str40 = treeset_str32.headSet("");
    boolean b41 = treeset_str8.removeAll((java.util.Collection<java.lang.String>)treeset_str32);
    java.lang.Object obj42 = treeset_str8.clone();
    java.util.Spliterator<java.lang.String> spliterator_str43 = treeset_str8.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str43);

  }

  @Test
  public void test280() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test280"); }

    java.lang.String[] str_array1 = new java.lang.String[] { "" };
    java.util.TreeSet<java.lang.String> treeset_str2 = new java.util.TreeSet<java.lang.String>();
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str2, str_array1);
    int i4 = treeset_str2.size();
    java.util.TreeSet<java.lang.String> treeset_str5 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str2);
    java.lang.String str7 = treeset_str5.higher("");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array10 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str11 = new java.util.ArrayList<java.lang.String>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str11, str_array10);
    boolean b13 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)arraylist_str11);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str14);
    java.util.SortedSet<java.lang.String> sortedset_str17 = treeset_str15.tailSet("");
    boolean b18 = treeset_str8.equals((java.lang.Object)treeset_str15);
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str20 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str19);
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array23 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str24 = new java.util.ArrayList<java.lang.String>();
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str24, str_array23);
    boolean b26 = treeset_str21.retainAll((java.util.Collection<java.lang.String>)arraylist_str24);
    boolean b28 = treeset_str21.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str30 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str29);
    java.util.SortedSet<java.lang.String> sortedset_str32 = treeset_str30.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str35 = treeset_str30.headSet("", false);
    boolean b36 = treeset_str21.retainAll((java.util.Collection<java.lang.String>)navigableset_str35);
    boolean b37 = treeset_str20.retainAll((java.util.Collection<java.lang.String>)navigableset_str35);
    boolean b38 = treeset_str8.equals((java.lang.Object)b37);
    boolean b40 = treeset_str8.add("[]");
    boolean b41 = treeset_str5.retainAll((java.util.Collection<java.lang.String>)treeset_str8);
    java.util.NavigableSet<java.lang.String> navigableset_str44 = treeset_str8.headSet("[]", false);
    java.lang.String str45 = treeset_str8.toString();
    treeset_str8.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "[[]]"+ "'", str45.equals("[[]]"));

  }

  @Test
  public void test281() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test281"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str0.iterator();
    java.lang.String str27 = treeset_str0.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array31 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str32 = new java.util.ArrayList<java.lang.String>();
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str32, str_array31);
    boolean b34 = treeset_str29.retainAll((java.util.Collection<java.lang.String>)arraylist_str32);
    java.lang.String str35 = treeset_str29.pollLast();
    java.util.Iterator<java.lang.String> iterator_str36 = treeset_str29.descendingIterator();
    java.util.Iterator<java.lang.String> iterator_str37 = treeset_str29.descendingIterator();
    boolean b38 = treeset_str28.retainAll((java.util.Collection<java.lang.String>)treeset_str29);
    treeset_str28.clear();
    java.util.Spliterator<java.lang.String> spliterator_str40 = treeset_str28.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str40);

  }

  @Test
  public void test282() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test282"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str1.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str1.descendingSet();
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str1.headSet("[[hi!]]");
    // The following exception was thrown during execution in test generation
    try {
    java.util.SortedSet<java.lang.String> sortedset_str23 = treeset_str1.subSet("[[hi!]]", "");
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);

  }

  @Test
  public void test283() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test283"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b25 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b26 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str8);
    boolean b27 = treeset_str8.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);

  }

  @Test
  public void test284() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test284"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    boolean b20 = treeset_str13.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str21);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str22.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str22.headSet("", false);
    boolean b28 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b29 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b30 = treeset_str0.equals((java.lang.Object)b29);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str31 = treeset_str0.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test285() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test285"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str9);
    java.util.SortedSet<java.lang.String> sortedset_str12 = treeset_str10.tailSet("");
    boolean b13 = treeset_str3.equals((java.lang.Object)treeset_str10);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str14);
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str19 = new java.util.ArrayList<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str19, str_array18);
    boolean b21 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)arraylist_str19);
    boolean b23 = treeset_str16.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str24 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str24);
    java.util.SortedSet<java.lang.String> sortedset_str27 = treeset_str25.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str30 = treeset_str25.headSet("", false);
    boolean b31 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)navigableset_str30);
    boolean b32 = treeset_str15.retainAll((java.util.Collection<java.lang.String>)navigableset_str30);
    boolean b33 = treeset_str3.equals((java.lang.Object)b32);
    java.lang.String str35 = treeset_str3.ceiling("[hi!]");
    boolean b36 = treeset_str1.addAll((java.util.Collection<java.lang.String>)treeset_str3);
    java.util.TreeSet<java.lang.String> treeset_str37 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array39 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str40 = new java.util.ArrayList<java.lang.String>();
    boolean b41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str40, str_array39);
    boolean b42 = treeset_str37.retainAll((java.util.Collection<java.lang.String>)arraylist_str40);
    java.util.stream.Stream<java.lang.String> stream_str43 = treeset_str37.parallelStream();
    java.lang.String str45 = treeset_str37.lower("");
    java.lang.String str47 = treeset_str37.higher("");
    boolean b48 = treeset_str1.containsAll((java.util.Collection<java.lang.String>)treeset_str37);
    java.lang.String str49 = treeset_str37.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str49);

  }

  @Test
  public void test286() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test286"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.lang.String str6 = treeset_str3.pollLast();
    java.util.stream.Stream<java.lang.String> stream_str7 = treeset_str3.stream();
    // The following exception was thrown during execution in test generation
    try {
    boolean b9 = treeset_str3.contains((java.lang.Object)1.0f);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!"+ "'", str6.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str7);

  }

  @Test
  public void test287() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test287"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str0.iterator();
    java.lang.String str27 = treeset_str0.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    java.lang.String str29 = treeset_str28.pollFirst();
    java.util.NavigableSet<java.lang.String> navigableset_str32 = treeset_str28.headSet("", true);
    java.util.stream.Stream<java.lang.String> stream_str33 = navigableset_str32.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str33);

  }

  @Test
  public void test288() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test288"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b25 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b26 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str8);
    boolean b28 = treeset_str8.add("[hi!]");
    java.util.NavigableSet<java.lang.String> navigableset_str31 = treeset_str8.headSet("", false);
    java.util.stream.Stream<java.lang.String> stream_str32 = treeset_str8.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str32);

  }

  @Test
  public void test289() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test289"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("", false);
    java.lang.String str7 = treeset_str1.pollLast();
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str1.tailSet("[, hi!]");
    java.util.stream.Stream<java.lang.String> stream_str10 = sortedset_str9.parallelStream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str10);

  }

  @Test
  public void test290() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test290"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.lang.String str4 = treeset_str1.pollFirst();
    java.util.TreeSet<java.lang.String> treeset_str5 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str1);
    java.util.SortedSet<java.lang.String> sortedset_str8 = treeset_str1.subSet("[]", "[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array17 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str18 = new java.util.ArrayList<java.lang.String>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str18, str_array17);
    boolean b20 = treeset_str15.retainAll((java.util.Collection<java.lang.String>)arraylist_str18);
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array23 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str24 = new java.util.ArrayList<java.lang.String>();
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str24, str_array23);
    boolean b26 = treeset_str21.retainAll((java.util.Collection<java.lang.String>)arraylist_str24);
    java.util.ArrayList[] arrayList_array28 = new java.util.ArrayList[ 3 ];
    @SuppressWarnings("unchecked")
    java.util.ArrayList<java.lang.String>[] arraylist_str_array29 = (java.util.ArrayList<java.lang.String>[])arrayList_array28;
    arraylist_str_array29[0] = arraylist_str12;
    arraylist_str_array29[1] = arraylist_str18;
    arraylist_str_array29[2] = arraylist_str24;
    java.util.ArrayList<java.lang.String>[] arraylist_str_array36 = treeset_str1.toArray(arraylist_str_array29);
    java.util.NavigableSet<java.lang.String> navigableset_str37 = treeset_str1.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str38 = treeset_str1.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arrayList_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str38);

  }

  @Test
  public void test291() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test291"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.stream.Stream<java.lang.String> stream_str11 = treeset_str0.stream();
    java.util.Iterator<java.lang.String> iterator_str12 = treeset_str0.descendingIterator();
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str0.descendingSet();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str16, str_array15);
    int i18 = treeset_str16.size();
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str16);
    boolean b20 = treeset_str0.addAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str21 = treeset_str0.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str21);

  }

  @Test
  public void test292() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test292"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str8 = treeset_str0.headSet("");
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str9);
    java.util.Iterator<java.lang.String> iterator_str11 = treeset_str10.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array14 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str15 = new java.util.ArrayList<java.lang.String>();
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str15, str_array14);
    boolean b17 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)arraylist_str15);
    boolean b19 = treeset_str12.add("hi!");
    boolean b20 = treeset_str10.contains((java.lang.Object)"hi!");
    java.lang.String str22 = treeset_str10.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str25 = treeset_str10.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str26 = treeset_str10.iterator();
    java.util.TreeSet<java.lang.String> treeset_str27 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str10);
    java.lang.String str29 = treeset_str10.higher("[, hi!]");
    java.util.TreeSet<java.lang.String> treeset_str30 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str10);
    java.util.NavigableSet<java.lang.String> navigableset_str33 = treeset_str10.headSet("[, hi!]", true);
    // The following exception was thrown during execution in test generation
    try {
    boolean b34 = treeset_str0.contains((java.lang.Object)treeset_str10);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str33);

  }

  @Test
  public void test293() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test293"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str8 = treeset_str0.headSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str0.subSet("[hi!]", true, "hi!", false);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str14);
    java.lang.String str17 = treeset_str15.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str20 = treeset_str15.headSet("hi!", true);
    boolean b21 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str15);
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str23 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str22);
    java.lang.String str25 = treeset_str23.lower("");
    java.lang.String str26 = treeset_str23.pollFirst();
    java.util.TreeSet<java.lang.String> treeset_str27 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str23);
    java.util.SortedSet<java.lang.String> sortedset_str30 = treeset_str23.subSet("[]", "[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str31 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array33 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str34 = new java.util.ArrayList<java.lang.String>();
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str34, str_array33);
    boolean b36 = treeset_str31.retainAll((java.util.Collection<java.lang.String>)arraylist_str34);
    java.util.TreeSet<java.lang.String> treeset_str37 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array39 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str40 = new java.util.ArrayList<java.lang.String>();
    boolean b41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str40, str_array39);
    boolean b42 = treeset_str37.retainAll((java.util.Collection<java.lang.String>)arraylist_str40);
    java.util.TreeSet<java.lang.String> treeset_str43 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array45 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str46 = new java.util.ArrayList<java.lang.String>();
    boolean b47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str46, str_array45);
    boolean b48 = treeset_str43.retainAll((java.util.Collection<java.lang.String>)arraylist_str46);
    java.util.ArrayList[] arrayList_array50 = new java.util.ArrayList[ 3 ];
    @SuppressWarnings("unchecked")
    java.util.ArrayList<java.lang.String>[] arraylist_str_array51 = (java.util.ArrayList<java.lang.String>[])arrayList_array50;
    arraylist_str_array51[0] = arraylist_str34;
    arraylist_str_array51[1] = arraylist_str40;
    arraylist_str_array51[2] = arraylist_str46;
    java.util.ArrayList<java.lang.String>[] arraylist_str_array58 = treeset_str23.toArray(arraylist_str_array51);
    java.util.AbstractList<java.lang.String>[] abstractlist_str_array59 = treeset_str0.toArray((java.util.AbstractList<java.lang.String>[])arraylist_str_array51);
    boolean b61 = treeset_str0.add("[, hi!]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arrayList_array50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(abstractlist_str_array59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);

  }

  @Test
  public void test294() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test294"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.stream.Stream<java.lang.String> stream_str11 = treeset_str0.stream();
    java.util.Iterator<java.lang.String> iterator_str12 = treeset_str0.descendingIterator();
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str0.descendingSet();
    java.util.stream.Stream<java.lang.String> stream_str14 = treeset_str0.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str14);

  }

  @Test
  public void test295() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test295"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array13 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str14 = new java.util.ArrayList<java.lang.String>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str14, str_array13);
    boolean b16 = treeset_str11.retainAll((java.util.Collection<java.lang.String>)arraylist_str14);
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    boolean b21 = treeset_str11.equals((java.lang.Object)treeset_str18);
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str23 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str22);
    java.util.TreeSet<java.lang.String> treeset_str24 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array26 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str27 = new java.util.ArrayList<java.lang.String>();
    boolean b28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str27, str_array26);
    boolean b29 = treeset_str24.retainAll((java.util.Collection<java.lang.String>)arraylist_str27);
    boolean b31 = treeset_str24.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str32 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str33 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str32);
    java.util.SortedSet<java.lang.String> sortedset_str35 = treeset_str33.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str38 = treeset_str33.headSet("", false);
    boolean b39 = treeset_str24.retainAll((java.util.Collection<java.lang.String>)navigableset_str38);
    boolean b40 = treeset_str23.retainAll((java.util.Collection<java.lang.String>)navigableset_str38);
    boolean b41 = treeset_str11.equals((java.lang.Object)b40);
    java.lang.String str43 = treeset_str11.ceiling("[hi!]");
    java.util.Iterator<java.lang.String> iterator_str44 = treeset_str11.iterator();
    java.lang.String str45 = treeset_str11.pollLast();
    int i46 = treeset_str11.size();
    java.util.SortedSet<java.lang.String> sortedset_str48 = treeset_str11.headSet("[[]]");
    boolean b49 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)sortedset_str48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i46 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);

  }

  @Test
  public void test296() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test296"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.lang.String str6 = treeset_str3.pollLast();
    java.util.stream.Stream<java.lang.String> stream_str7 = treeset_str3.stream();
    java.util.Iterator<java.lang.String> iterator_str8 = treeset_str3.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str9);
    java.lang.String str12 = treeset_str10.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str15 = treeset_str10.headSet("hi!", true);
    java.util.stream.Stream<java.lang.String> stream_str16 = treeset_str10.stream();
    java.util.Spliterator<java.lang.String> spliterator_str17 = treeset_str10.spliterator();
    boolean b18 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str10);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str10.headSet("[]", true);
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array24 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str25 = new java.util.ArrayList<java.lang.String>();
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str25, str_array24);
    boolean b27 = treeset_str22.retainAll((java.util.Collection<java.lang.String>)arraylist_str25);
    boolean b29 = treeset_str22.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str30 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str31 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str30);
    java.util.SortedSet<java.lang.String> sortedset_str33 = treeset_str31.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str36 = treeset_str31.headSet("", false);
    boolean b37 = treeset_str22.retainAll((java.util.Collection<java.lang.String>)navigableset_str36);
    java.lang.String str38 = treeset_str22.pollLast();
    java.util.NavigableSet<java.lang.String> navigableset_str41 = treeset_str22.tailSet("", true);
    boolean b42 = treeset_str10.addAll((java.util.Collection<java.lang.String>)navigableset_str41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!"+ "'", str6.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);

  }

  @Test
  public void test297() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test297"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str11, str_array10);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str11.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str14 = treeset_str11.iterator();
    boolean b15 = treeset_str0.equals((java.lang.Object)iterator_str14);
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str0.headSet("", true);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str19 = treeset_str0.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);

  }

  @Test
  public void test298() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test298"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str9);
    java.util.SortedSet<java.lang.String> sortedset_str12 = treeset_str10.tailSet("");
    boolean b13 = treeset_str3.equals((java.lang.Object)treeset_str10);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str14);
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str19 = new java.util.ArrayList<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str19, str_array18);
    boolean b21 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)arraylist_str19);
    boolean b23 = treeset_str16.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str24 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str24);
    java.util.SortedSet<java.lang.String> sortedset_str27 = treeset_str25.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str30 = treeset_str25.headSet("", false);
    boolean b31 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)navigableset_str30);
    boolean b32 = treeset_str15.retainAll((java.util.Collection<java.lang.String>)navigableset_str30);
    boolean b33 = treeset_str3.equals((java.lang.Object)b32);
    java.lang.String str35 = treeset_str3.ceiling("[hi!]");
    boolean b36 = treeset_str1.addAll((java.util.Collection<java.lang.String>)treeset_str3);
    // The following exception was thrown during execution in test generation
    try {
    java.util.NavigableSet<java.lang.String> navigableset_str41 = treeset_str1.subSet("[[hi!]]", false, "", false);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);

  }

  @Test
  public void test299() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test299"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str1.iterator();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str1);
    java.lang.String str19 = treeset_str18.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str19);

  }

  @Test
  public void test300() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test300"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("", false);
    java.lang.String str7 = treeset_str1.pollLast();
    boolean b8 = treeset_str1.isEmpty();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    java.util.stream.Stream<java.lang.String> stream_str15 = treeset_str9.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str17 = treeset_str9.headSet("");
    java.util.stream.Stream<java.lang.String> stream_str18 = treeset_str9.parallelStream();
    boolean b19 = treeset_str1.equals((java.lang.Object)stream_str18);
    java.util.stream.Stream<java.lang.String> stream_str20 = treeset_str1.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str23 = treeset_str1.subSet("[, hi!]", "[, hi!]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str23);

  }

  @Test
  public void test301() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test301"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    boolean b20 = treeset_str13.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str21);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str22.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str22.headSet("", false);
    boolean b28 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b29 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b30 = treeset_str0.equals((java.lang.Object)b29);
    boolean b32 = treeset_str0.add("[]");
    java.lang.String str33 = treeset_str0.toString();
    java.util.Collection<java.lang.String> collection_str34 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b35 = treeset_str0.removeAll(collection_str34);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "[[]]"+ "'", str33.equals("[[]]"));

  }

  @Test
  public void test302() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test302"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str0.iterator();
    java.lang.String str27 = treeset_str0.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    java.lang.String[] str_array31 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str32 = new java.util.TreeSet<java.lang.String>();
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str32, str_array31);
    java.util.NavigableSet<java.lang.String> navigableset_str34 = treeset_str32.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str35 = treeset_str32.iterator();
    java.util.TreeSet<java.lang.String> treeset_str36 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str37 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str36);
    java.util.TreeSet<java.lang.String> treeset_str38 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array40 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str41 = new java.util.ArrayList<java.lang.String>();
    boolean b42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str41, str_array40);
    boolean b43 = treeset_str38.retainAll((java.util.Collection<java.lang.String>)arraylist_str41);
    boolean b45 = treeset_str38.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str46 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str47 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str46);
    java.util.SortedSet<java.lang.String> sortedset_str49 = treeset_str47.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str52 = treeset_str47.headSet("", false);
    boolean b53 = treeset_str38.retainAll((java.util.Collection<java.lang.String>)navigableset_str52);
    boolean b54 = treeset_str37.retainAll((java.util.Collection<java.lang.String>)navigableset_str52);
    boolean b55 = treeset_str32.removeAll((java.util.Collection<java.lang.String>)treeset_str37);
    boolean b57 = treeset_str37.add("[hi!]");
    java.util.NavigableSet<java.lang.String> navigableset_str60 = treeset_str37.headSet("", false);
    java.util.TreeSet<java.lang.String> treeset_str61 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array63 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str64 = new java.util.ArrayList<java.lang.String>();
    boolean b65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str64, str_array63);
    boolean b66 = treeset_str61.retainAll((java.util.Collection<java.lang.String>)arraylist_str64);
    java.util.stream.Stream<java.lang.String> stream_str67 = treeset_str61.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str69 = treeset_str61.headSet("");
    boolean b70 = treeset_str37.removeAll((java.util.Collection<java.lang.String>)treeset_str61);
    java.lang.Object obj71 = treeset_str37.clone();
    boolean b72 = treeset_str28.removeAll((java.util.Collection<java.lang.String>)treeset_str37);
    java.lang.String str73 = treeset_str37.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str73 + "' != '" + "[[hi!]]"+ "'", str73.equals("[[hi!]]"));

  }

  @Test
  public void test303() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test303"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("hi!", true);
    treeset_str1.clear();
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str1.headSet("");
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str10 = treeset_str1.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);

  }

  @Test
  public void test304() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test304"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str8 = treeset_str0.headSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str0.subSet("[hi!]", true, "hi!", false);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str14);
    java.lang.String str17 = treeset_str15.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str20 = treeset_str15.headSet("hi!", true);
    boolean b21 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str15);
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str0.descendingIterator();
    java.util.Spliterator<java.lang.String> spliterator_str23 = treeset_str0.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str23);

  }

  @Test
  public void test305() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test305"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str0.headSet("[hi!]", true);
    java.lang.String str28 = treeset_str0.toString();
    java.lang.Object[] obj_array29 = treeset_str0.toArray();
    boolean b30 = treeset_str0.isEmpty();
    java.util.TreeSet<java.lang.String> treeset_str31 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array33 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str34 = new java.util.ArrayList<java.lang.String>();
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str34, str_array33);
    boolean b36 = treeset_str31.retainAll((java.util.Collection<java.lang.String>)arraylist_str34);
    java.util.TreeSet<java.lang.String> treeset_str37 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str38 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str37);
    java.util.SortedSet<java.lang.String> sortedset_str40 = treeset_str38.tailSet("");
    boolean b41 = treeset_str31.equals((java.lang.Object)treeset_str38);
    java.util.stream.Stream<java.lang.String> stream_str42 = treeset_str31.stream();
    java.util.stream.Stream<java.lang.String> stream_str43 = treeset_str31.stream();
    java.util.TreeSet<java.lang.String> treeset_str44 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str45 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str44);
    java.lang.String str47 = treeset_str45.lower("");
    java.lang.String str48 = treeset_str45.pollFirst();
    java.util.TreeSet<java.lang.String> treeset_str49 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str45);
    java.util.SortedSet<java.lang.String> sortedset_str52 = treeset_str45.subSet("[]", "[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str53 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str54 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str53);
    java.lang.String str56 = treeset_str54.lower("");
    boolean b57 = treeset_str54.isEmpty();
    boolean b58 = treeset_str45.contains((java.lang.Object)b57);
    java.util.stream.Stream<java.lang.String> stream_str59 = treeset_str45.parallelStream();
    java.util.stream.BaseStream[] baseStream_array61 = new java.util.stream.BaseStream[ 2 ];
    @SuppressWarnings("unchecked")
    java.util.stream.BaseStream<java.lang.String,java.util.stream.Stream<java.lang.String>>[] basestream_str_stream_str_array62 = (java.util.stream.BaseStream<java.lang.String,java.util.stream.Stream<java.lang.String>>[])baseStream_array61;
    basestream_str_stream_str_array62[0] = stream_str43;
    basestream_str_stream_str_array62[1] = stream_str59;
    java.util.stream.BaseStream<java.lang.String,java.util.stream.Stream<java.lang.String>>[] basestream_str_stream_str_array67 = treeset_str0.toArray(basestream_str_stream_str_array62);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str68 = treeset_str0.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "[]"+ "'", str28.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(baseStream_array61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(basestream_str_stream_str_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(basestream_str_stream_str_array67);

  }

  @Test
  public void test306() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test306"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b25 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b26 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str8);
    boolean b28 = treeset_str8.add("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array31 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str32 = new java.util.ArrayList<java.lang.String>();
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str32, str_array31);
    boolean b34 = treeset_str29.retainAll((java.util.Collection<java.lang.String>)arraylist_str32);
    java.util.TreeSet<java.lang.String> treeset_str35 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str36 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str35);
    java.util.SortedSet<java.lang.String> sortedset_str38 = treeset_str36.tailSet("");
    boolean b39 = treeset_str29.equals((java.lang.Object)treeset_str36);
    java.util.TreeSet<java.lang.String> treeset_str40 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str41 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str40);
    java.util.TreeSet<java.lang.String> treeset_str42 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array44 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str45 = new java.util.ArrayList<java.lang.String>();
    boolean b46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str45, str_array44);
    boolean b47 = treeset_str42.retainAll((java.util.Collection<java.lang.String>)arraylist_str45);
    boolean b49 = treeset_str42.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str50 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str51 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str50);
    java.util.SortedSet<java.lang.String> sortedset_str53 = treeset_str51.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str56 = treeset_str51.headSet("", false);
    boolean b57 = treeset_str42.retainAll((java.util.Collection<java.lang.String>)navigableset_str56);
    boolean b58 = treeset_str41.retainAll((java.util.Collection<java.lang.String>)navigableset_str56);
    boolean b59 = treeset_str29.equals((java.lang.Object)b58);
    java.lang.String str61 = treeset_str29.ceiling("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str62 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str29);
    java.util.stream.Stream<java.lang.String> stream_str63 = treeset_str29.parallelStream();
    boolean b64 = treeset_str8.containsAll((java.util.Collection<java.lang.String>)treeset_str29);
    java.util.TreeSet<java.lang.String> treeset_str65 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array67 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str68 = new java.util.ArrayList<java.lang.String>();
    boolean b69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str68, str_array67);
    boolean b70 = treeset_str65.retainAll((java.util.Collection<java.lang.String>)arraylist_str68);
    java.util.stream.Stream<java.lang.String> stream_str71 = treeset_str65.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str73 = treeset_str65.headSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str78 = treeset_str65.subSet("[hi!]", true, "hi!", false);
    java.lang.String str80 = treeset_str65.floor("[]");
    boolean b81 = treeset_str29.containsAll((java.util.Collection<java.lang.String>)treeset_str65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str78);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b81 == true);

  }

  @Test
  public void test307() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test307"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str0.tailSet("hi!", true);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    boolean b13 = treeset_str11.add("[]");
    boolean b15 = treeset_str11.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str19 = new java.util.ArrayList<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str19, str_array18);
    boolean b21 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)arraylist_str19);
    boolean b23 = treeset_str16.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str26 = treeset_str16.tailSet("hi!", true);
    java.util.NavigableSet<java.lang.String> navigableset_str29 = treeset_str16.tailSet("[]", true);
    java.util.TreeSet<java.lang.String> treeset_str30 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str31 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str30);
    java.util.Iterator<java.lang.String> iterator_str32 = treeset_str31.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str33 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array35 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str36 = new java.util.ArrayList<java.lang.String>();
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str36, str_array35);
    boolean b38 = treeset_str33.retainAll((java.util.Collection<java.lang.String>)arraylist_str36);
    boolean b40 = treeset_str33.add("hi!");
    boolean b41 = treeset_str31.contains((java.lang.Object)"hi!");
    java.lang.String str43 = treeset_str31.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str46 = treeset_str31.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str47 = treeset_str31.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str48 = treeset_str31.descendingSet();
    java.util.TreeSet<java.lang.String> treeset_str49 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)navigableset_str48);
    java.lang.Object obj50 = treeset_str49.clone();
    java.lang.Object[] obj_array51 = treeset_str49.toArray();
    boolean b52 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)treeset_str49);
    java.lang.String str54 = treeset_str16.higher("hi!");
    boolean b55 = treeset_str11.equals((java.lang.Object)treeset_str16);
    java.util.TreeSet<java.lang.String> treeset_str56 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str16);
    java.util.stream.Stream<java.lang.String> stream_str57 = treeset_str56.parallelStream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str57);

  }

  @Test
  public void test308() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test308"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str8 = treeset_str0.headSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str0.subSet("[hi!]", true, "hi!", false);
    int i14 = treeset_str0.size();
    java.util.Iterator<java.lang.String> iterator_str15 = treeset_str0.descendingIterator();
    java.lang.String str17 = treeset_str0.lower("hi!");
    java.lang.String[] str_array20 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str21, str_array20);
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str21.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str24 = treeset_str21.iterator();
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str26 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str25);
    java.util.TreeSet<java.lang.String> treeset_str27 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array29 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str30 = new java.util.ArrayList<java.lang.String>();
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str30, str_array29);
    boolean b32 = treeset_str27.retainAll((java.util.Collection<java.lang.String>)arraylist_str30);
    boolean b34 = treeset_str27.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str35 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str36 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str35);
    java.util.SortedSet<java.lang.String> sortedset_str38 = treeset_str36.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str41 = treeset_str36.headSet("", false);
    boolean b42 = treeset_str27.retainAll((java.util.Collection<java.lang.String>)navigableset_str41);
    boolean b43 = treeset_str26.retainAll((java.util.Collection<java.lang.String>)navigableset_str41);
    boolean b44 = treeset_str21.removeAll((java.util.Collection<java.lang.String>)treeset_str26);
    boolean b46 = treeset_str26.add("[hi!]");
    java.util.NavigableSet<java.lang.String> navigableset_str49 = treeset_str26.headSet("", false);
    java.util.TreeSet<java.lang.String> treeset_str50 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array52 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str53 = new java.util.ArrayList<java.lang.String>();
    boolean b54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str53, str_array52);
    boolean b55 = treeset_str50.retainAll((java.util.Collection<java.lang.String>)arraylist_str53);
    java.util.stream.Stream<java.lang.String> stream_str56 = treeset_str50.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str58 = treeset_str50.headSet("");
    boolean b59 = treeset_str26.removeAll((java.util.Collection<java.lang.String>)treeset_str50);
    boolean b60 = treeset_str0.containsAll((java.util.Collection<java.lang.String>)treeset_str50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);

  }

  @Test
  public void test309() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test309"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Spliterator<java.lang.String> spliterator_str7 = treeset_str0.spliterator();
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str0.tailSet("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>(sortedset_str9);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array13 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str14 = new java.util.ArrayList<java.lang.String>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str14, str_array13);
    boolean b16 = treeset_str11.retainAll((java.util.Collection<java.lang.String>)arraylist_str14);
    boolean b18 = treeset_str11.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str20 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str19);
    java.util.SortedSet<java.lang.String> sortedset_str22 = treeset_str20.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str25 = treeset_str20.headSet("", false);
    boolean b26 = treeset_str11.retainAll((java.util.Collection<java.lang.String>)navigableset_str25);
    java.lang.String[] str_array29 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str30 = new java.util.TreeSet<java.lang.String>();
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str30, str_array29);
    java.util.NavigableSet<java.lang.String> navigableset_str32 = treeset_str30.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str33 = treeset_str30.iterator();
    java.util.Iterator<java.lang.String> iterator_str34 = treeset_str30.iterator();
    boolean b35 = treeset_str11.removeAll((java.util.Collection<java.lang.String>)treeset_str30);
    java.util.NavigableSet<java.lang.String> navigableset_str38 = treeset_str11.headSet("[hi!]", true);
    boolean b39 = treeset_str10.removeAll((java.util.Collection<java.lang.String>)navigableset_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);

  }

  @Test
  public void test310() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test310"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str9);
    java.util.SortedSet<java.lang.String> sortedset_str12 = treeset_str10.tailSet("");
    boolean b13 = treeset_str3.equals((java.lang.Object)treeset_str10);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str14);
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str19 = new java.util.ArrayList<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str19, str_array18);
    boolean b21 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)arraylist_str19);
    boolean b23 = treeset_str16.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str24 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str24);
    java.util.SortedSet<java.lang.String> sortedset_str27 = treeset_str25.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str30 = treeset_str25.headSet("", false);
    boolean b31 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)navigableset_str30);
    boolean b32 = treeset_str15.retainAll((java.util.Collection<java.lang.String>)navigableset_str30);
    boolean b33 = treeset_str3.equals((java.lang.Object)b32);
    java.lang.String str35 = treeset_str3.ceiling("[hi!]");
    boolean b36 = treeset_str1.addAll((java.util.Collection<java.lang.String>)treeset_str3);
    java.lang.String str38 = treeset_str1.floor("[]");
    boolean b40 = treeset_str1.add("[, hi!]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);

  }

  @Test
  public void test311() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test311"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str3.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str8 = treeset_str3.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str8);

  }

  @Test
  public void test312() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test312"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    boolean b8 = treeset_str3.add("[[hi!]]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);

  }

  @Test
  public void test313() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test313"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str1.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str1.descendingSet();
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)navigableset_str18);
    java.util.Iterator<java.lang.String> iterator_str20 = treeset_str19.descendingIterator();
    java.lang.String str21 = treeset_str19.pollFirst();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str23 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str22);
    java.util.Iterator<java.lang.String> iterator_str24 = treeset_str23.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array27 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str28 = new java.util.ArrayList<java.lang.String>();
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str28, str_array27);
    boolean b30 = treeset_str25.retainAll((java.util.Collection<java.lang.String>)arraylist_str28);
    boolean b32 = treeset_str25.add("hi!");
    boolean b33 = treeset_str23.contains((java.lang.Object)"hi!");
    java.lang.String str35 = treeset_str23.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str38 = treeset_str23.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str39 = treeset_str23.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str40 = treeset_str23.descendingSet();
    java.util.TreeSet<java.lang.String> treeset_str41 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)navigableset_str40);
    java.util.TreeSet<java.lang.String> treeset_str42 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str43 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str42);
    java.util.SortedSet<java.lang.String> sortedset_str45 = treeset_str42.tailSet("[hi!]");
    java.lang.Object obj46 = treeset_str42.clone();
    boolean b47 = treeset_str41.retainAll((java.util.Collection<java.lang.String>)treeset_str42);
    boolean b48 = treeset_str19.retainAll((java.util.Collection<java.lang.String>)treeset_str41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);

  }

  @Test
  public void test314() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test314"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.floor("[]");
    java.lang.String str14 = treeset_str1.toString();
    java.util.Spliterator<java.lang.String> spliterator_str15 = treeset_str1.spliterator();
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str1.tailSet("", false);
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str20 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str19);
    java.util.SortedSet<java.lang.String> sortedset_str22 = treeset_str20.tailSet("");
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str20.headSet("[[hi!]]");
    boolean b25 = treeset_str1.equals((java.lang.Object)treeset_str20);
    java.util.NavigableSet<java.lang.String> navigableset_str28 = treeset_str20.headSet("[]", false);
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array31 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str32 = new java.util.ArrayList<java.lang.String>();
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str32, str_array31);
    boolean b34 = treeset_str29.retainAll((java.util.Collection<java.lang.String>)arraylist_str32);
    boolean b36 = treeset_str29.add("hi!");
    java.lang.String str37 = treeset_str29.toString();
    java.util.Spliterator<java.lang.String> spliterator_str38 = treeset_str29.spliterator();
    java.util.NavigableSet<java.lang.String> navigableset_str41 = treeset_str29.headSet("hi!", false);
    java.util.Spliterator<java.lang.String> spliterator_str42 = treeset_str29.spliterator();
    java.util.SortedSet<java.lang.String> sortedset_str44 = treeset_str29.tailSet("[]");
    boolean b45 = treeset_str20.addAll((java.util.Collection<java.lang.String>)treeset_str29);
    java.lang.Object obj46 = treeset_str29.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "[]"+ "'", str14.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "[hi!]"+ "'", str37.equals("[hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj46);

  }

  @Test
  public void test315() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test315"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str4 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array6 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str7 = new java.util.ArrayList<java.lang.String>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str7, str_array6);
    boolean b9 = treeset_str4.retainAll((java.util.Collection<java.lang.String>)arraylist_str7);
    boolean b10 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str4);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.AbstractSet[] abstractSet_array13 = new java.util.AbstractSet[ 1 ];
    @SuppressWarnings("unchecked")
    java.util.AbstractSet<java.lang.String>[] abstractset_str_array14 = (java.util.AbstractSet<java.lang.String>[])abstractSet_array13;
    abstractset_str_array14[0] = treeset_str11;
    java.util.AbstractSet<java.lang.String>[] abstractset_str_array17 = treeset_str4.toArray(abstractset_str_array14);
    java.util.NavigableSet<java.lang.String> navigableset_str20 = treeset_str4.tailSet("", true);
    java.lang.String str21 = treeset_str4.pollLast();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array24 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str25 = new java.util.ArrayList<java.lang.String>();
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str25, str_array24);
    boolean b27 = treeset_str22.retainAll((java.util.Collection<java.lang.String>)arraylist_str25);
    java.lang.String str28 = treeset_str22.pollLast();
    java.util.Iterator<java.lang.String> iterator_str29 = treeset_str22.descendingIterator();
    java.util.Iterator<java.lang.String> iterator_str30 = treeset_str22.descendingIterator();
    java.lang.String str31 = treeset_str22.pollFirst();
    java.lang.Object[] obj_array32 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array33 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array34 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array35 = new java.lang.Object[] {  };
    java.lang.Object[][] obj_array_array36 = new java.lang.Object[][] { obj_array32, obj_array33, obj_array34, obj_array35 };
    java.lang.Object[][] obj_array_array37 = treeset_str22.toArray(obj_array_array36);
    boolean b38 = treeset_str4.addAll((java.util.Collection<java.lang.String>)treeset_str22);
    int i39 = treeset_str4.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(abstractSet_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(abstractset_str_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(abstractset_str_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 0);

  }

  @Test
  public void test316() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test316"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.lang.String str4 = treeset_str1.pollFirst();
    java.util.TreeSet<java.lang.String> treeset_str5 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str1);
    java.util.SortedSet<java.lang.String> sortedset_str8 = treeset_str1.subSet("[]", "[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str9);
    java.lang.String str12 = treeset_str10.lower("");
    boolean b13 = treeset_str10.isEmpty();
    boolean b14 = treeset_str1.contains((java.lang.Object)b13);
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str1);
    java.util.Iterator<java.lang.String> iterator_str16 = treeset_str15.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str16);

  }

  @Test
  public void test317() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test317"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str0.headSet("[hi!]", true);
    java.lang.String str28 = treeset_str0.toString();
    java.lang.Object[] obj_array29 = treeset_str0.toArray();
    java.lang.String str30 = treeset_str0.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "[]"+ "'", str28.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str30);

  }

  @Test
  public void test318() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test318"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.TreeSet<java.lang.String> treeset_str2 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array4 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str5 = new java.util.ArrayList<java.lang.String>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str5, str_array4);
    boolean b7 = treeset_str2.retainAll((java.util.Collection<java.lang.String>)arraylist_str5);
    boolean b9 = treeset_str2.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str10);
    java.util.SortedSet<java.lang.String> sortedset_str13 = treeset_str11.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str11.headSet("", false);
    boolean b17 = treeset_str2.retainAll((java.util.Collection<java.lang.String>)navigableset_str16);
    boolean b18 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)navigableset_str16);
    java.lang.String str19 = treeset_str1.toString();
    java.util.SortedSet<java.lang.String> sortedset_str22 = treeset_str1.subSet("", "[hi!]");
    java.lang.Object obj23 = treeset_str1.clone();
    java.util.SortedSet<java.lang.String> sortedset_str26 = treeset_str1.subSet("[, hi!]", "[, hi!]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "[]"+ "'", str19.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str26);

  }

  @Test
  public void test319() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test319"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.lang.String str7 = treeset_str3.ceiling("[hi!]");
    java.lang.String str9 = treeset_str3.lower("[[]]");
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array12 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str13 = new java.util.ArrayList<java.lang.String>();
    boolean b14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str13, str_array12);
    boolean b15 = treeset_str10.retainAll((java.util.Collection<java.lang.String>)arraylist_str13);
    boolean b17 = treeset_str10.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str20 = treeset_str10.tailSet("hi!", true);
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str10);
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str21);
    boolean b23 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)treeset_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hi!"+ "'", str7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + ""+ "'", str9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);

  }

  @Test
  public void test320() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test320"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str8 = treeset_str0.headSet("");
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str9);
    java.util.NavigableSet<java.lang.String> navigableset_str15 = treeset_str9.subSet("", true, "[hi!]", true);
    java.util.NavigableSet<java.lang.String> navigableset_str20 = treeset_str9.subSet("", false, "hi!", false);
    java.lang.String str22 = treeset_str9.ceiling("");
    boolean b23 = treeset_str0.containsAll((java.util.Collection<java.lang.String>)treeset_str9);
    java.lang.String str25 = treeset_str9.floor("[, hi!]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str25);

  }

  @Test
  public void test321() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test321"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str0.iterator();
    java.lang.String str27 = treeset_str0.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    java.lang.String str29 = treeset_str28.pollFirst();
    java.util.NavigableSet<java.lang.String> navigableset_str32 = treeset_str28.headSet("", true);
    java.util.TreeSet<java.lang.String> treeset_str33 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array35 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str36 = new java.util.ArrayList<java.lang.String>();
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str36, str_array35);
    boolean b38 = treeset_str33.retainAll((java.util.Collection<java.lang.String>)arraylist_str36);
    java.util.TreeSet<java.lang.String> treeset_str39 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str40 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str39);
    java.util.SortedSet<java.lang.String> sortedset_str42 = treeset_str40.tailSet("");
    boolean b43 = treeset_str33.equals((java.lang.Object)treeset_str40);
    java.util.NavigableSet<java.lang.String> navigableset_str46 = treeset_str40.tailSet("hi!", false);
    java.util.TreeSet<java.lang.String> treeset_str47 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str40);
    java.lang.String str49 = treeset_str40.ceiling("[[]]");
    boolean b50 = treeset_str28.equals((java.lang.Object)"[[]]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);

  }

  @Test
  public void test322() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test322"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str4 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array6 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str7 = new java.util.ArrayList<java.lang.String>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str7, str_array6);
    boolean b9 = treeset_str4.retainAll((java.util.Collection<java.lang.String>)arraylist_str7);
    boolean b10 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str4);
    java.lang.String[] str_array13 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str14, str_array13);
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str14.descendingSet();
    java.lang.String str18 = treeset_str14.ceiling("[hi!]");
    boolean b19 = treeset_str4.remove((java.lang.Object)"[hi!]");
    java.util.NavigableSet<java.lang.String> navigableset_str24 = treeset_str4.subSet("", false, "hi!", true);
    java.lang.String[] str_array27 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>();
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str28, str_array27);
    java.util.NavigableSet<java.lang.String> navigableset_str30 = treeset_str28.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str31 = treeset_str28.iterator();
    java.util.TreeSet<java.lang.String> treeset_str32 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str33 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str32);
    java.util.TreeSet<java.lang.String> treeset_str34 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array36 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str37 = new java.util.ArrayList<java.lang.String>();
    boolean b38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str37, str_array36);
    boolean b39 = treeset_str34.retainAll((java.util.Collection<java.lang.String>)arraylist_str37);
    boolean b41 = treeset_str34.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str42 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str43 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str42);
    java.util.SortedSet<java.lang.String> sortedset_str45 = treeset_str43.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str48 = treeset_str43.headSet("", false);
    boolean b49 = treeset_str34.retainAll((java.util.Collection<java.lang.String>)navigableset_str48);
    boolean b50 = treeset_str33.retainAll((java.util.Collection<java.lang.String>)navigableset_str48);
    boolean b51 = treeset_str28.removeAll((java.util.Collection<java.lang.String>)treeset_str33);
    boolean b53 = treeset_str33.add("[hi!]");
    boolean b54 = treeset_str4.equals((java.lang.Object)b53);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str55 = treeset_str4.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!"+ "'", str18.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);

  }

  @Test
  public void test323() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test323"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str4 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array6 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str7 = new java.util.ArrayList<java.lang.String>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str7, str_array6);
    boolean b9 = treeset_str4.retainAll((java.util.Collection<java.lang.String>)arraylist_str7);
    boolean b10 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str4);
    java.lang.String[] str_array13 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str14, str_array13);
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str14.descendingSet();
    java.lang.String str18 = treeset_str14.ceiling("[hi!]");
    boolean b19 = treeset_str4.remove((java.lang.Object)"[hi!]");
    java.util.NavigableSet<java.lang.String> navigableset_str24 = treeset_str4.subSet("", false, "hi!", true);
    java.lang.String[] str_array27 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>();
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str28, str_array27);
    java.util.NavigableSet<java.lang.String> navigableset_str30 = treeset_str28.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str31 = treeset_str28.iterator();
    java.util.TreeSet<java.lang.String> treeset_str32 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str33 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str32);
    java.util.TreeSet<java.lang.String> treeset_str34 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array36 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str37 = new java.util.ArrayList<java.lang.String>();
    boolean b38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str37, str_array36);
    boolean b39 = treeset_str34.retainAll((java.util.Collection<java.lang.String>)arraylist_str37);
    boolean b41 = treeset_str34.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str42 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str43 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str42);
    java.util.SortedSet<java.lang.String> sortedset_str45 = treeset_str43.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str48 = treeset_str43.headSet("", false);
    boolean b49 = treeset_str34.retainAll((java.util.Collection<java.lang.String>)navigableset_str48);
    boolean b50 = treeset_str33.retainAll((java.util.Collection<java.lang.String>)navigableset_str48);
    boolean b51 = treeset_str28.removeAll((java.util.Collection<java.lang.String>)treeset_str33);
    boolean b53 = treeset_str33.add("[hi!]");
    boolean b54 = treeset_str4.equals((java.lang.Object)b53);
    java.lang.String str55 = treeset_str4.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!"+ "'", str18.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str55);

  }

  @Test
  public void test324() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test324"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.lang.String str4 = treeset_str1.pollFirst();
    java.util.NavigableSet<java.lang.String> navigableset_str9 = treeset_str1.subSet("", false, "[hi!]", false);
    java.util.Iterator<java.lang.String> iterator_str10 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str1);
    java.lang.String str12 = treeset_str11.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str12);

  }

  @Test
  public void test325() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test325"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.lang.String str4 = treeset_str1.pollFirst();
    java.util.NavigableSet<java.lang.String> navigableset_str9 = treeset_str1.subSet("", false, "[hi!]", false);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str1.headSet("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array14 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str15 = new java.util.ArrayList<java.lang.String>();
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str15, str_array14);
    boolean b17 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)arraylist_str15);
    java.lang.String str18 = treeset_str12.pollLast();
    boolean b19 = treeset_str1.containsAll((java.util.Collection<java.lang.String>)treeset_str12);
    java.util.TreeSet<java.lang.String> treeset_str20 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str20);
    java.util.SortedSet<java.lang.String> sortedset_str23 = treeset_str21.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str24 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array26 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str27 = new java.util.ArrayList<java.lang.String>();
    boolean b28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str27, str_array26);
    boolean b29 = treeset_str24.retainAll((java.util.Collection<java.lang.String>)arraylist_str27);
    boolean b30 = treeset_str21.retainAll((java.util.Collection<java.lang.String>)treeset_str24);
    java.lang.String str32 = treeset_str24.higher("");
    java.util.SortedSet<java.lang.String> sortedset_str35 = treeset_str24.subSet("", "hi!");
    boolean b36 = treeset_str1.addAll((java.util.Collection<java.lang.String>)treeset_str24);
    java.util.TreeSet<java.lang.String> treeset_str37 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array39 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str40 = new java.util.ArrayList<java.lang.String>();
    boolean b41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str40, str_array39);
    boolean b42 = treeset_str37.retainAll((java.util.Collection<java.lang.String>)arraylist_str40);
    java.lang.String str43 = treeset_str37.pollLast();
    java.util.Spliterator<java.lang.String> spliterator_str44 = treeset_str37.spliterator();
    java.util.SortedSet<java.lang.String> sortedset_str46 = treeset_str37.tailSet("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str47 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str37);
    boolean b48 = treeset_str24.retainAll((java.util.Collection<java.lang.String>)treeset_str37);
    java.lang.String str50 = treeset_str37.lower("[[hi!]]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str50);

  }

  @Test
  public void test326() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test326"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str9);
    java.util.SortedSet<java.lang.String> sortedset_str12 = treeset_str10.tailSet("");
    boolean b13 = treeset_str3.equals((java.lang.Object)treeset_str10);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str14);
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str19 = new java.util.ArrayList<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str19, str_array18);
    boolean b21 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)arraylist_str19);
    boolean b23 = treeset_str16.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str24 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str24);
    java.util.SortedSet<java.lang.String> sortedset_str27 = treeset_str25.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str30 = treeset_str25.headSet("", false);
    boolean b31 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)navigableset_str30);
    boolean b32 = treeset_str15.retainAll((java.util.Collection<java.lang.String>)navigableset_str30);
    boolean b33 = treeset_str3.equals((java.lang.Object)b32);
    java.lang.String str35 = treeset_str3.ceiling("[hi!]");
    boolean b36 = treeset_str1.addAll((java.util.Collection<java.lang.String>)treeset_str3);
    java.lang.String str38 = treeset_str1.floor("[]");
    java.util.Comparator<? super java.lang.String> comparator_wildcard39 = treeset_str1.comparator();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str40 = treeset_str1.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard39);

  }

  @Test
  public void test327() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test327"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    treeset_str0.clear();
    java.lang.String str4 = treeset_str0.higher("[[]]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);

  }

  @Test
  public void test328() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test328"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    boolean b4 = treeset_str1.isEmpty();
    boolean b6 = treeset_str1.add("[hi!]");
    java.lang.String str7 = treeset_str1.toString();
    java.lang.String str9 = treeset_str1.higher("");
    java.lang.Object[] obj_array10 = treeset_str1.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "[[hi!]]"+ "'", str7.equals("[[hi!]]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[hi!]"+ "'", str9.equals("[hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);

  }

  @Test
  public void test329() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test329"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str1.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str1.descendingSet();
    java.lang.String str20 = treeset_str1.lower("[]");
    java.lang.String str21 = treeset_str1.pollFirst();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str23 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str22);
    java.util.Iterator<java.lang.String> iterator_str24 = treeset_str23.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array27 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str28 = new java.util.ArrayList<java.lang.String>();
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str28, str_array27);
    boolean b30 = treeset_str25.retainAll((java.util.Collection<java.lang.String>)arraylist_str28);
    boolean b32 = treeset_str25.add("hi!");
    boolean b33 = treeset_str23.contains((java.lang.Object)"hi!");
    java.lang.String str35 = treeset_str23.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str38 = treeset_str23.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str39 = treeset_str23.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str40 = treeset_str23.descendingSet();
    java.util.TreeSet<java.lang.String> treeset_str41 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)navigableset_str40);
    boolean b42 = treeset_str1.removeAll((java.util.Collection<java.lang.String>)treeset_str41);
    java.lang.String str44 = treeset_str41.ceiling("[[hi!]]");
    java.util.TreeSet<java.lang.String> treeset_str45 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array47 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str48 = new java.util.ArrayList<java.lang.String>();
    boolean b49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str48, str_array47);
    boolean b50 = treeset_str45.retainAll((java.util.Collection<java.lang.String>)arraylist_str48);
    java.util.TreeSet<java.lang.String> treeset_str51 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str52 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str51);
    java.util.SortedSet<java.lang.String> sortedset_str54 = treeset_str52.tailSet("");
    boolean b55 = treeset_str45.equals((java.lang.Object)treeset_str52);
    java.util.stream.Stream<java.lang.String> stream_str56 = treeset_str45.stream();
    java.util.TreeSet<java.lang.String> treeset_str57 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array59 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str60 = new java.util.ArrayList<java.lang.String>();
    boolean b61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str60, str_array59);
    boolean b62 = treeset_str57.retainAll((java.util.Collection<java.lang.String>)arraylist_str60);
    java.util.TreeSet<java.lang.String> treeset_str63 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str64 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str63);
    java.util.SortedSet<java.lang.String> sortedset_str66 = treeset_str64.tailSet("");
    boolean b67 = treeset_str57.equals((java.lang.Object)treeset_str64);
    java.util.stream.Stream<java.lang.String> stream_str68 = treeset_str57.stream();
    java.util.Iterator<java.lang.String> iterator_str69 = treeset_str57.descendingIterator();
    java.util.NavigableSet<java.lang.String> navigableset_str70 = treeset_str57.descendingSet();
    boolean b71 = treeset_str45.addAll((java.util.Collection<java.lang.String>)navigableset_str70);
    java.lang.String[] str_array74 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str75 = new java.util.TreeSet<java.lang.String>();
    boolean b76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str75, str_array74);
    java.util.NavigableSet<java.lang.String> navigableset_str77 = treeset_str75.descendingSet();
    java.lang.String str78 = treeset_str75.pollLast();
    java.util.stream.Stream<java.lang.String> stream_str79 = treeset_str75.stream();
    java.util.Iterator<java.lang.String> iterator_str80 = treeset_str75.descendingIterator();
    java.util.SortedSet<java.lang.String> sortedset_str83 = treeset_str75.subSet("hi!", "hi!");
    boolean b84 = treeset_str45.retainAll((java.util.Collection<java.lang.String>)sortedset_str83);
    // The following exception was thrown during execution in test generation
    try {
    boolean b85 = treeset_str41.contains((java.lang.Object)treeset_str45);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b76 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str78 + "' != '" + "hi!"+ "'", str78.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str79);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str83);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b84 == false);

  }

  @Test
  public void test330() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test330"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.lang.String str8 = treeset_str0.lower("");
    java.lang.String str10 = treeset_str0.higher("");
    java.lang.String str11 = treeset_str0.toString();
    java.lang.Object obj12 = treeset_str0.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "[]"+ "'", str11.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj12);

  }

  @Test
  public void test331() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test331"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("hi!", true);
    java.lang.String[] str_array9 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>();
    boolean b11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str10, str_array9);
    java.util.NavigableSet<java.lang.String> navigableset_str12 = treeset_str10.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str13 = treeset_str10.iterator();
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str14);
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str19 = new java.util.ArrayList<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str19, str_array18);
    boolean b21 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)arraylist_str19);
    boolean b23 = treeset_str16.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str24 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str24);
    java.util.SortedSet<java.lang.String> sortedset_str27 = treeset_str25.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str30 = treeset_str25.headSet("", false);
    boolean b31 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)navigableset_str30);
    boolean b32 = treeset_str15.retainAll((java.util.Collection<java.lang.String>)navigableset_str30);
    boolean b33 = treeset_str10.removeAll((java.util.Collection<java.lang.String>)treeset_str15);
    boolean b34 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str10);
    java.util.NavigableSet<java.lang.String> navigableset_str35 = treeset_str1.descendingSet();
    java.util.NavigableSet<java.lang.String> navigableset_str38 = treeset_str1.headSet("[, hi!]", true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str38);

  }

  @Test
  public void test332() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test332"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("hi!", true);
    treeset_str1.clear();
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str1.headSet("hi!", true);
    java.util.stream.Stream<java.lang.String> stream_str11 = treeset_str1.parallelStream();
    java.lang.String str12 = treeset_str1.toString();
    int i13 = treeset_str1.size();
    java.util.Iterator<java.lang.String> iterator_str14 = treeset_str1.descendingIterator();
    java.lang.Object[] obj_array15 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array16 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array17 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array18 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array19 = new java.lang.Object[] {  };
    java.lang.Object[][] obj_array_array20 = new java.lang.Object[][] { obj_array15, obj_array16, obj_array17, obj_array18, obj_array19 };
    java.lang.Object[] obj_array21 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array22 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array23 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array24 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array25 = new java.lang.Object[] {  };
    java.lang.Object[][] obj_array_array26 = new java.lang.Object[][] { obj_array21, obj_array22, obj_array23, obj_array24, obj_array25 };
    java.lang.Object[] obj_array27 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array28 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array29 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array30 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array31 = new java.lang.Object[] {  };
    java.lang.Object[][] obj_array_array32 = new java.lang.Object[][] { obj_array27, obj_array28, obj_array29, obj_array30, obj_array31 };
    java.lang.Object[] obj_array33 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array34 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array35 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array36 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array37 = new java.lang.Object[] {  };
    java.lang.Object[][] obj_array_array38 = new java.lang.Object[][] { obj_array33, obj_array34, obj_array35, obj_array36, obj_array37 };
    java.lang.Object[] obj_array39 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array40 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array41 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array42 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array43 = new java.lang.Object[] {  };
    java.lang.Object[][] obj_array_array44 = new java.lang.Object[][] { obj_array39, obj_array40, obj_array41, obj_array42, obj_array43 };
    java.lang.Object[] obj_array45 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array46 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array47 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array48 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array49 = new java.lang.Object[] {  };
    java.lang.Object[][] obj_array_array50 = new java.lang.Object[][] { obj_array45, obj_array46, obj_array47, obj_array48, obj_array49 };
    java.lang.Object[][][] obj_array_array_array51 = new java.lang.Object[][][] { obj_array_array20, obj_array_array26, obj_array_array32, obj_array_array38, obj_array_array44, obj_array_array50 };
    java.lang.Object[][][] obj_array_array_array52 = treeset_str1.toArray(obj_array_array_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "[]"+ "'", str12.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array_array52);

  }

  @Test
  public void test333() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test333"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str1.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str1.descendingSet();
    java.lang.String str20 = treeset_str1.lower("[]");
    java.lang.String str21 = treeset_str1.pollFirst();
    java.lang.String str22 = treeset_str1.pollFirst();
    boolean b24 = treeset_str1.add("[[]]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);

  }

  @Test
  public void test334() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test334"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    boolean b20 = treeset_str13.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str21);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str22.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str22.headSet("", false);
    boolean b28 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b29 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b30 = treeset_str0.equals((java.lang.Object)b29);
    java.lang.String str32 = treeset_str0.ceiling("[hi!]");
    java.util.Iterator<java.lang.String> iterator_str33 = treeset_str0.iterator();
    java.util.SortedSet<java.lang.String> sortedset_str36 = treeset_str0.subSet("", "hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str37 = treeset_str0.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str38 = treeset_str0.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str38);

  }

  @Test
  public void test335() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test335"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str8 = treeset_str0.headSet("");
    java.util.stream.Stream<java.lang.String> stream_str9 = treeset_str0.parallelStream();
    java.lang.String str10 = treeset_str0.toString();
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.lang.String str14 = treeset_str12.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str17 = treeset_str12.headSet("hi!", true);
    java.lang.String[] str_array20 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str21, str_array20);
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str21.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str24 = treeset_str21.iterator();
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str26 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str25);
    java.util.TreeSet<java.lang.String> treeset_str27 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array29 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str30 = new java.util.ArrayList<java.lang.String>();
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str30, str_array29);
    boolean b32 = treeset_str27.retainAll((java.util.Collection<java.lang.String>)arraylist_str30);
    boolean b34 = treeset_str27.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str35 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str36 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str35);
    java.util.SortedSet<java.lang.String> sortedset_str38 = treeset_str36.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str41 = treeset_str36.headSet("", false);
    boolean b42 = treeset_str27.retainAll((java.util.Collection<java.lang.String>)navigableset_str41);
    boolean b43 = treeset_str26.retainAll((java.util.Collection<java.lang.String>)navigableset_str41);
    boolean b44 = treeset_str21.removeAll((java.util.Collection<java.lang.String>)treeset_str26);
    boolean b45 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)treeset_str21);
    java.util.NavigableSet<java.lang.String> navigableset_str46 = treeset_str12.descendingSet();
    // The following exception was thrown during execution in test generation
    try {
    boolean b47 = treeset_str0.contains((java.lang.Object)treeset_str12);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "[]"+ "'", str10.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str46);

  }

  @Test
  public void test336() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test336"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str11, str_array10);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str11.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str14 = treeset_str11.iterator();
    boolean b15 = treeset_str0.equals((java.lang.Object)iterator_str14);
    java.util.Iterator<java.lang.String> iterator_str16 = treeset_str0.iterator();
    java.util.stream.Stream<java.lang.String> stream_str17 = treeset_str0.parallelStream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str17);

  }

  @Test
  public void test337() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test337"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str0.iterator();
    java.lang.String str27 = treeset_str0.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array31 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str32 = new java.util.ArrayList<java.lang.String>();
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str32, str_array31);
    boolean b34 = treeset_str29.retainAll((java.util.Collection<java.lang.String>)arraylist_str32);
    java.lang.String str35 = treeset_str29.pollLast();
    java.util.Iterator<java.lang.String> iterator_str36 = treeset_str29.descendingIterator();
    java.util.Iterator<java.lang.String> iterator_str37 = treeset_str29.descendingIterator();
    boolean b38 = treeset_str28.retainAll((java.util.Collection<java.lang.String>)treeset_str29);
    java.util.SortedSet<java.lang.String> sortedset_str41 = treeset_str29.subSet("[]", "[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str42 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str43 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str42);
    java.lang.String str45 = treeset_str43.lower("");
    boolean b46 = treeset_str43.isEmpty();
    boolean b48 = treeset_str43.add("[hi!]");
    java.lang.String str49 = treeset_str43.toString();
    boolean b50 = treeset_str29.removeAll((java.util.Collection<java.lang.String>)treeset_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str49 + "' != '" + "[[hi!]]"+ "'", str49.equals("[[hi!]]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);

  }

  @Test
  public void test338() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test338"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    boolean b20 = treeset_str13.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str21);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str22.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str22.headSet("", false);
    boolean b28 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b29 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b30 = treeset_str0.equals((java.lang.Object)b29);
    java.lang.String str32 = treeset_str0.ceiling("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str33 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.NavigableSet<java.lang.String> navigableset_str36 = treeset_str0.tailSet("", true);
    java.lang.String str37 = treeset_str0.pollFirst();
    java.lang.String[] str_array40 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str41 = new java.util.TreeSet<java.lang.String>();
    boolean b42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str41, str_array40);
    java.util.NavigableSet<java.lang.String> navigableset_str43 = treeset_str41.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str44 = treeset_str41.iterator();
    java.util.TreeSet<java.lang.String> treeset_str45 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str46 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str45);
    java.util.TreeSet<java.lang.String> treeset_str47 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array49 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str50 = new java.util.ArrayList<java.lang.String>();
    boolean b51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str50, str_array49);
    boolean b52 = treeset_str47.retainAll((java.util.Collection<java.lang.String>)arraylist_str50);
    boolean b54 = treeset_str47.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str55 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str56 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str55);
    java.util.SortedSet<java.lang.String> sortedset_str58 = treeset_str56.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str61 = treeset_str56.headSet("", false);
    boolean b62 = treeset_str47.retainAll((java.util.Collection<java.lang.String>)navigableset_str61);
    boolean b63 = treeset_str46.retainAll((java.util.Collection<java.lang.String>)navigableset_str61);
    boolean b64 = treeset_str41.removeAll((java.util.Collection<java.lang.String>)treeset_str46);
    java.util.TreeSet<java.lang.String> treeset_str65 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array67 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str68 = new java.util.ArrayList<java.lang.String>();
    boolean b69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str68, str_array67);
    boolean b70 = treeset_str65.retainAll((java.util.Collection<java.lang.String>)arraylist_str68);
    java.lang.String str71 = treeset_str65.pollLast();
    java.util.Iterator<java.lang.String> iterator_str72 = treeset_str65.descendingIterator();
    java.lang.String[] str_array75 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str76 = new java.util.TreeSet<java.lang.String>();
    boolean b77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str76, str_array75);
    java.util.NavigableSet<java.lang.String> navigableset_str78 = treeset_str76.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str79 = treeset_str76.iterator();
    boolean b80 = treeset_str65.equals((java.lang.Object)iterator_str79);
    java.util.Iterator<java.lang.String> iterator_str81 = treeset_str65.iterator();
    boolean b82 = treeset_str46.equals((java.lang.Object)treeset_str65);
    java.util.Comparator<? super java.lang.String> comparator_wildcard83 = treeset_str46.comparator();
    // The following exception was thrown during execution in test generation
    try {
    boolean b84 = treeset_str0.contains((java.lang.Object)treeset_str46);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array75);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b77 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str78);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str79);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str81);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b82 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard83);

  }

  @Test
  public void test339() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test339"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str1.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str1.descendingSet();
    java.lang.String str20 = treeset_str1.lower("[]");
    java.lang.String str21 = treeset_str1.pollFirst();
    java.lang.String str22 = treeset_str1.pollFirst();
    java.util.NavigableSet<java.lang.String> navigableset_str25 = treeset_str1.tailSet("[hi!]", false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str25);

  }

  @Test
  public void test340() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test340"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.lang.String str8 = treeset_str0.toString();
    java.util.Spliterator<java.lang.String> spliterator_str9 = treeset_str0.spliterator();
    java.util.NavigableSet<java.lang.String> navigableset_str12 = treeset_str0.headSet("hi!", false);
    java.lang.String str14 = treeset_str0.higher("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "[hi!]"+ "'", str8.equals("[hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!"+ "'", str14.equals("hi!"));

  }

  @Test
  public void test341() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test341"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str4 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array6 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str7 = new java.util.ArrayList<java.lang.String>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str7, str_array6);
    boolean b9 = treeset_str4.retainAll((java.util.Collection<java.lang.String>)arraylist_str7);
    boolean b10 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str4);
    java.util.SortedSet<java.lang.String> sortedset_str12 = treeset_str4.tailSet("");
    java.lang.String str13 = treeset_str4.toString();
    java.util.Iterator<java.lang.String> iterator_str14 = treeset_str4.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "[]"+ "'", str13.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str14);

  }

  @Test
  public void test342() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test342"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Spliterator<java.lang.String> spliterator_str7 = treeset_str0.spliterator();
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str0.tailSet("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array13 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str14 = new java.util.ArrayList<java.lang.String>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str14, str_array13);
    boolean b16 = treeset_str11.retainAll((java.util.Collection<java.lang.String>)arraylist_str14);
    java.lang.String str17 = treeset_str11.pollLast();
    java.util.Iterator<java.lang.String> iterator_str18 = treeset_str11.descendingIterator();
    java.lang.String[] str_array21 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>();
    boolean b23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str22, str_array21);
    java.util.NavigableSet<java.lang.String> navigableset_str24 = treeset_str22.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str22.iterator();
    boolean b26 = treeset_str11.equals((java.lang.Object)iterator_str25);
    java.util.NavigableSet<java.lang.String> navigableset_str29 = treeset_str11.headSet("", true);
    boolean b30 = treeset_str10.removeAll((java.util.Collection<java.lang.String>)treeset_str11);
    java.util.TreeSet<java.lang.String> treeset_str31 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str32 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str31);
    java.util.Iterator<java.lang.String> iterator_str33 = treeset_str32.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str34 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array36 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str37 = new java.util.ArrayList<java.lang.String>();
    boolean b38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str37, str_array36);
    boolean b39 = treeset_str34.retainAll((java.util.Collection<java.lang.String>)arraylist_str37);
    boolean b41 = treeset_str34.add("hi!");
    boolean b42 = treeset_str32.contains((java.lang.Object)"hi!");
    java.lang.String str44 = treeset_str32.floor("[]");
    java.lang.String str45 = treeset_str32.toString();
    java.util.Spliterator<java.lang.String> spliterator_str46 = treeset_str32.spliterator();
    java.util.NavigableSet<java.lang.String> navigableset_str49 = treeset_str32.tailSet("", false);
    boolean b50 = treeset_str11.equals((java.lang.Object)false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "[]"+ "'", str45.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);

  }

  @Test
  public void test343() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test343"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str0.iterator();
    java.lang.String str27 = treeset_str0.lower("hi!");
    java.lang.Object obj28 = treeset_str0.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj28);

  }

  @Test
  public void test344() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test344"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str0.subSet("", true, "[hi!]", true);
    java.lang.String str7 = treeset_str0.pollLast();
    java.lang.String str8 = treeset_str0.pollLast();
    treeset_str0.clear();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str10);
    java.util.SortedSet<java.lang.String> sortedset_str13 = treeset_str11.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str11.headSet("", false);
    java.lang.String str17 = treeset_str11.pollLast();
    boolean b18 = treeset_str11.isEmpty();
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array21 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str22 = new java.util.ArrayList<java.lang.String>();
    boolean b23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str22, str_array21);
    boolean b24 = treeset_str19.retainAll((java.util.Collection<java.lang.String>)arraylist_str22);
    java.util.stream.Stream<java.lang.String> stream_str25 = treeset_str19.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str27 = treeset_str19.headSet("");
    java.util.stream.Stream<java.lang.String> stream_str28 = treeset_str19.parallelStream();
    boolean b29 = treeset_str11.equals((java.lang.Object)stream_str28);
    boolean b31 = treeset_str11.contains((java.lang.Object)100);
    java.lang.String str32 = treeset_str11.toString();
    boolean b33 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)treeset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "[]"+ "'", str32.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);

  }

  @Test
  public void test345() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test345"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    java.lang.String str8 = treeset_str0.floor("[hi!]");
    treeset_str0.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str8);

  }

  @Test
  public void test346() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test346"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.lang.String str7 = treeset_str3.ceiling("[hi!]");
    java.util.Spliterator<java.lang.String> spliterator_str8 = treeset_str3.spliterator();
    java.lang.String str9 = treeset_str3.last();
    java.lang.String str10 = treeset_str3.toString();
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array13 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str14 = new java.util.ArrayList<java.lang.String>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str14, str_array13);
    boolean b16 = treeset_str11.retainAll((java.util.Collection<java.lang.String>)arraylist_str14);
    boolean b18 = treeset_str11.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str11.tailSet("hi!", true);
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str11);
    boolean b24 = treeset_str22.add("[]");
    java.lang.String str26 = treeset_str22.floor("[[]]");
    java.util.NavigableSet<java.lang.String> navigableset_str31 = treeset_str22.subSet("[, hi!]", true, "[]", true);
    boolean b32 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)navigableset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hi!"+ "'", str7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!"+ "'", str9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "[, hi!]"+ "'", str10.equals("[, hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);

  }

  @Test
  public void test347() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test347"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.floor("[]");
    java.lang.String str14 = treeset_str1.toString();
    java.util.Spliterator<java.lang.String> spliterator_str15 = treeset_str1.spliterator();
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str19 = new java.util.ArrayList<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str19, str_array18);
    boolean b21 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)arraylist_str19);
    boolean b23 = treeset_str16.add("hi!");
    java.lang.String str24 = treeset_str16.toString();
    boolean b25 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str16);
    java.util.NavigableSet<java.lang.String> navigableset_str28 = treeset_str1.tailSet("hi!", false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "[]"+ "'", str14.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "[hi!]"+ "'", str24.equals("[hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str28);

  }

  @Test
  public void test348() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test348"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str4 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array6 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str7 = new java.util.ArrayList<java.lang.String>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str7, str_array6);
    boolean b9 = treeset_str4.retainAll((java.util.Collection<java.lang.String>)arraylist_str7);
    boolean b10 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str4);
    java.util.Spliterator<java.lang.String> spliterator_str11 = treeset_str1.spliterator();
    java.util.Comparator<? super java.lang.String> comparator_wildcard12 = treeset_str1.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard12);

  }

  @Test
  public void test349() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test349"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.TreeSet<java.lang.String> treeset_str2 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array4 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str5 = new java.util.ArrayList<java.lang.String>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str5, str_array4);
    boolean b7 = treeset_str2.retainAll((java.util.Collection<java.lang.String>)arraylist_str5);
    boolean b9 = treeset_str2.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str10);
    java.util.SortedSet<java.lang.String> sortedset_str13 = treeset_str11.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str11.headSet("", false);
    boolean b17 = treeset_str2.retainAll((java.util.Collection<java.lang.String>)navigableset_str16);
    boolean b18 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)navigableset_str16);
    java.util.Spliterator<java.lang.String> spliterator_str19 = treeset_str1.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str19);

  }

  @Test
  public void test350() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test350"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str4 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array6 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str7 = new java.util.ArrayList<java.lang.String>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str7, str_array6);
    boolean b9 = treeset_str4.retainAll((java.util.Collection<java.lang.String>)arraylist_str7);
    boolean b10 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str4);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.AbstractSet[] abstractSet_array13 = new java.util.AbstractSet[ 1 ];
    @SuppressWarnings("unchecked")
    java.util.AbstractSet<java.lang.String>[] abstractset_str_array14 = (java.util.AbstractSet<java.lang.String>[])abstractSet_array13;
    abstractset_str_array14[0] = treeset_str11;
    java.util.AbstractSet<java.lang.String>[] abstractset_str_array17 = treeset_str4.toArray(abstractset_str_array14);
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str18);
    java.util.Iterator<java.lang.String> iterator_str20 = treeset_str19.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array23 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str24 = new java.util.ArrayList<java.lang.String>();
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str24, str_array23);
    boolean b26 = treeset_str21.retainAll((java.util.Collection<java.lang.String>)arraylist_str24);
    boolean b28 = treeset_str21.add("hi!");
    boolean b29 = treeset_str19.contains((java.lang.Object)"hi!");
    java.lang.String str31 = treeset_str19.floor("[]");
    java.lang.String str32 = treeset_str19.toString();
    java.util.Spliterator<java.lang.String> spliterator_str33 = treeset_str19.spliterator();
    boolean b34 = treeset_str4.containsAll((java.util.Collection<java.lang.String>)treeset_str19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(abstractSet_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(abstractset_str_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(abstractset_str_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "[]"+ "'", str32.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);

  }

  @Test
  public void test351() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test351"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    boolean b20 = treeset_str13.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str21);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str22.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str22.headSet("", false);
    boolean b28 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b29 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b30 = treeset_str0.equals((java.lang.Object)b29);
    java.lang.String str32 = treeset_str0.ceiling("[hi!]");
    java.util.Spliterator<java.lang.String> spliterator_str33 = treeset_str0.spliterator();
    java.util.stream.Stream<java.lang.String> stream_str34 = treeset_str0.parallelStream();
    java.util.TreeSet<java.lang.String> treeset_str35 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str36 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str35);
    java.util.SortedSet<java.lang.String> sortedset_str38 = treeset_str36.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str39 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array41 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str42 = new java.util.ArrayList<java.lang.String>();
    boolean b43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str42, str_array41);
    boolean b44 = treeset_str39.retainAll((java.util.Collection<java.lang.String>)arraylist_str42);
    boolean b45 = treeset_str36.retainAll((java.util.Collection<java.lang.String>)treeset_str39);
    java.util.TreeSet<java.lang.String> treeset_str46 = new java.util.TreeSet<java.lang.String>();
    java.util.AbstractSet[] abstractSet_array48 = new java.util.AbstractSet[ 1 ];
    @SuppressWarnings("unchecked")
    java.util.AbstractSet<java.lang.String>[] abstractset_str_array49 = (java.util.AbstractSet<java.lang.String>[])abstractSet_array48;
    abstractset_str_array49[0] = treeset_str46;
    java.util.AbstractSet<java.lang.String>[] abstractset_str_array52 = treeset_str39.toArray(abstractset_str_array49);
    java.util.NavigableSet<java.lang.String> navigableset_str55 = treeset_str39.tailSet("", true);
    boolean b56 = treeset_str0.equals((java.lang.Object)"");
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str57 = treeset_str0.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(abstractSet_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(abstractset_str_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(abstractset_str_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);

  }

  @Test
  public void test352() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test352"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str0.iterator();
    java.lang.String str27 = treeset_str0.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array31 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str32 = new java.util.ArrayList<java.lang.String>();
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str32, str_array31);
    boolean b34 = treeset_str29.retainAll((java.util.Collection<java.lang.String>)arraylist_str32);
    java.lang.String str35 = treeset_str29.pollLast();
    java.util.Iterator<java.lang.String> iterator_str36 = treeset_str29.descendingIterator();
    java.util.Iterator<java.lang.String> iterator_str37 = treeset_str29.descendingIterator();
    boolean b38 = treeset_str28.retainAll((java.util.Collection<java.lang.String>)treeset_str29);
    java.lang.String str39 = treeset_str28.pollFirst();
    treeset_str28.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str39);

  }

  @Test
  public void test353() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test353"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    boolean b20 = treeset_str13.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str21);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str22.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str22.headSet("", false);
    boolean b28 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b29 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b30 = treeset_str0.equals((java.lang.Object)b29);
    boolean b32 = treeset_str0.add("[]");
    java.lang.String str33 = treeset_str0.toString();
    treeset_str0.clear();
    java.util.NavigableSet<java.lang.String> navigableset_str35 = treeset_str0.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "[[]]"+ "'", str33.equals("[[]]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str35);

  }

  @Test
  public void test354() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test354"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("hi!", true);
    boolean b7 = treeset_str1.isEmpty();
    java.util.NavigableSet<java.lang.String> navigableset_str12 = treeset_str1.subSet("[[]]", false, "[[]]", true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str12);

  }

  @Test
  public void test355() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test355"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str0.tailSet("", false);
    // The following exception was thrown during execution in test generation
    try {
    java.util.SortedSet<java.lang.String> sortedset_str13 = treeset_str0.subSet("hi!", "[[]]");
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);

  }

  @Test
  public void test356() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test356"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str7.tailSet("hi!", false);
    java.lang.String str15 = treeset_str7.lower("[]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str15);

  }

  @Test
  public void test357() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test357"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str8 = treeset_str0.headSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str0.subSet("[hi!]", true, "hi!", false);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    treeset_str14.clear();
    java.util.Iterator<java.lang.String> iterator_str16 = treeset_str14.iterator();
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array19 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str20 = new java.util.ArrayList<java.lang.String>();
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str20, str_array19);
    boolean b22 = treeset_str17.retainAll((java.util.Collection<java.lang.String>)arraylist_str20);
    boolean b24 = treeset_str17.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str26 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str25);
    java.util.SortedSet<java.lang.String> sortedset_str28 = treeset_str26.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str31 = treeset_str26.headSet("", false);
    boolean b32 = treeset_str17.retainAll((java.util.Collection<java.lang.String>)navigableset_str31);
    java.lang.String[] str_array35 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str36 = new java.util.TreeSet<java.lang.String>();
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str36, str_array35);
    java.util.NavigableSet<java.lang.String> navigableset_str38 = treeset_str36.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str39 = treeset_str36.iterator();
    java.util.Iterator<java.lang.String> iterator_str40 = treeset_str36.iterator();
    boolean b41 = treeset_str17.removeAll((java.util.Collection<java.lang.String>)treeset_str36);
    java.util.Iterator<java.lang.String> iterator_str42 = treeset_str17.iterator();
    java.util.TreeSet<java.lang.String> treeset_str43 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str44 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str43);
    java.util.SortedSet<java.lang.String> sortedset_str46 = treeset_str44.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str49 = treeset_str44.headSet("", false);
    int i50 = treeset_str44.size();
    java.util.Iterator<java.lang.String> iterator_str51 = treeset_str44.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str52 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array54 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str55 = new java.util.ArrayList<java.lang.String>();
    boolean b56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str55, str_array54);
    boolean b57 = treeset_str52.retainAll((java.util.Collection<java.lang.String>)arraylist_str55);
    java.lang.String str58 = treeset_str52.pollLast();
    java.util.Iterator<java.lang.String> iterator_str59 = treeset_str52.descendingIterator();
    java.util.Iterator<java.lang.String> iterator_str60 = treeset_str52.descendingIterator();
    java.util.Iterator[] iterator_array62 = new java.util.Iterator[ 4 ];
    @SuppressWarnings("unchecked")
    java.util.Iterator<java.lang.String>[] iterator_str_array63 = (java.util.Iterator<java.lang.String>[])iterator_array62;
    iterator_str_array63[0] = iterator_str16;
    iterator_str_array63[1] = iterator_str42;
    iterator_str_array63[2] = iterator_str51;
    iterator_str_array63[3] = iterator_str60;
    java.util.Iterator<java.lang.String>[] iterator_str_array72 = treeset_str0.toArray(iterator_str_array63);
    java.lang.String str73 = treeset_str0.pollLast();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str74 = treeset_str0.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i50 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str_array63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str73);

  }

  @Test
  public void test358() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test358"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b25 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b26 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str8);
    boolean b28 = treeset_str8.add("[hi!]");
    java.util.NavigableSet<java.lang.String> navigableset_str31 = treeset_str8.headSet("", false);
    java.util.TreeSet<java.lang.String> treeset_str32 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array34 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str35 = new java.util.ArrayList<java.lang.String>();
    boolean b36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str35, str_array34);
    boolean b37 = treeset_str32.retainAll((java.util.Collection<java.lang.String>)arraylist_str35);
    java.util.stream.Stream<java.lang.String> stream_str38 = treeset_str32.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str40 = treeset_str32.headSet("");
    boolean b41 = treeset_str8.removeAll((java.util.Collection<java.lang.String>)treeset_str32);
    java.util.SortedSet<java.lang.String> sortedset_str44 = treeset_str8.subSet("[[hi!]]", "[hi!]");
    java.lang.String str46 = treeset_str8.higher("[[hi!]]");
    boolean b48 = treeset_str8.add("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "[hi!]"+ "'", str46.equals("[hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);

  }

  @Test
  public void test359() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test359"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    boolean b17 = treeset_str0.equals((java.lang.Object)0);
    java.util.NavigableSet<java.lang.String> navigableset_str22 = treeset_str0.subSet("", false, "[[]]", true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str22);

  }

  @Test
  public void test360() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test360"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.lang.String str6 = treeset_str3.pollLast();
    java.lang.String str7 = treeset_str3.toString();
    boolean b8 = treeset_str3.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!"+ "'", str6.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "[]"+ "'", str7.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test361() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test361"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("", false);
    java.lang.String str7 = treeset_str1.pollLast();
    boolean b8 = treeset_str1.isEmpty();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str9);
    java.util.SortedSet<java.lang.String> sortedset_str12 = treeset_str10.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    boolean b19 = treeset_str10.retainAll((java.util.Collection<java.lang.String>)treeset_str13);
    java.util.NavigableSet<java.lang.String> navigableset_str22 = treeset_str10.headSet("", false);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str10.tailSet("");
    boolean b25 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str10);
    boolean b26 = treeset_str10.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);

  }

  @Test
  public void test362() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test362"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str8 = treeset_str0.headSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str0.subSet("[hi!]", true, "hi!", false);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str14);
    java.lang.String str17 = treeset_str15.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str20 = treeset_str15.headSet("hi!", true);
    boolean b21 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str15);
    java.util.SortedSet<java.lang.String> sortedset_str23 = treeset_str15.tailSet("hi!");
    java.util.TreeSet<java.lang.String> treeset_str24 = new java.util.TreeSet<java.lang.String>(sortedset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str23);

  }

  @Test
  public void test363() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test363"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.floor("[]");
    java.lang.String str14 = treeset_str1.toString();
    java.util.Spliterator<java.lang.String> spliterator_str15 = treeset_str1.spliterator();
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str19 = new java.util.ArrayList<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str19, str_array18);
    boolean b21 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)arraylist_str19);
    boolean b23 = treeset_str16.add("hi!");
    java.lang.String str24 = treeset_str16.toString();
    boolean b25 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str16);
    java.util.NavigableSet<java.lang.String> navigableset_str26 = treeset_str16.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "[]"+ "'", str14.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "[hi!]"+ "'", str24.equals("[hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str26);

  }

  @Test
  public void test364() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test364"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("hi!", true);
    java.lang.String[] str_array9 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>();
    boolean b11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str10, str_array9);
    java.util.NavigableSet<java.lang.String> navigableset_str12 = treeset_str10.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str13 = treeset_str10.iterator();
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str14);
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str19 = new java.util.ArrayList<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str19, str_array18);
    boolean b21 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)arraylist_str19);
    boolean b23 = treeset_str16.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str24 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str24);
    java.util.SortedSet<java.lang.String> sortedset_str27 = treeset_str25.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str30 = treeset_str25.headSet("", false);
    boolean b31 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)navigableset_str30);
    boolean b32 = treeset_str15.retainAll((java.util.Collection<java.lang.String>)navigableset_str30);
    boolean b33 = treeset_str10.removeAll((java.util.Collection<java.lang.String>)treeset_str15);
    boolean b34 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str10);
    java.util.TreeSet<java.lang.String> treeset_str35 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str36 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str35);
    java.util.Iterator<java.lang.String> iterator_str37 = treeset_str36.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str38 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array40 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str41 = new java.util.ArrayList<java.lang.String>();
    boolean b42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str41, str_array40);
    boolean b43 = treeset_str38.retainAll((java.util.Collection<java.lang.String>)arraylist_str41);
    boolean b45 = treeset_str38.add("hi!");
    boolean b46 = treeset_str36.contains((java.lang.Object)"hi!");
    java.lang.String str48 = treeset_str36.ceiling("hi!");
    java.util.SortedSet<java.lang.String> sortedset_str50 = treeset_str36.tailSet("");
    java.util.stream.Stream<java.lang.String> stream_str51 = sortedset_str50.parallelStream();
    boolean b52 = treeset_str1.addAll((java.util.Collection<java.lang.String>)sortedset_str50);
    java.util.SortedSet<java.lang.String> sortedset_str54 = treeset_str1.headSet("[hi!]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str54);

  }

  @Test
  public void test365() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test365"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str11, str_array10);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str11.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str14 = treeset_str11.iterator();
    boolean b15 = treeset_str0.equals((java.lang.Object)iterator_str14);
    java.util.Iterator<java.lang.String> iterator_str16 = treeset_str0.iterator();
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array19 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str20 = new java.util.ArrayList<java.lang.String>();
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str20, str_array19);
    boolean b22 = treeset_str17.retainAll((java.util.Collection<java.lang.String>)arraylist_str20);
    boolean b24 = treeset_str17.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str26 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str25);
    java.util.SortedSet<java.lang.String> sortedset_str28 = treeset_str26.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str31 = treeset_str26.headSet("", false);
    boolean b32 = treeset_str17.retainAll((java.util.Collection<java.lang.String>)navigableset_str31);
    java.lang.String[] str_array35 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str36 = new java.util.TreeSet<java.lang.String>();
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str36, str_array35);
    java.util.NavigableSet<java.lang.String> navigableset_str38 = treeset_str36.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str39 = treeset_str36.iterator();
    java.util.Iterator<java.lang.String> iterator_str40 = treeset_str36.iterator();
    boolean b41 = treeset_str17.removeAll((java.util.Collection<java.lang.String>)treeset_str36);
    java.util.SortedSet[] sortedSet_array43 = new java.util.SortedSet[ 1 ];
    @SuppressWarnings("unchecked")
    java.util.SortedSet<java.lang.String>[] sortedset_str_array44 = (java.util.SortedSet<java.lang.String>[])sortedSet_array43;
    sortedset_str_array44[0] = treeset_str17;
    java.util.SortedSet[][] sortedSet_array_array48 = new java.util.SortedSet[ 1 ][];
    @SuppressWarnings("unchecked")
    java.util.SortedSet<java.lang.String>[][] sortedset_str_array_array49 = (java.util.SortedSet<java.lang.String>[][])sortedSet_array_array48;
    sortedset_str_array_array49[0] = sortedset_str_array44;
    java.util.SortedSet<java.lang.String>[][] sortedset_str_array_array52 = treeset_str0.toArray(sortedset_str_array_array49);
    java.util.TreeSet<java.lang.String> treeset_str53 = new java.util.TreeSet<java.lang.String>();
    boolean b54 = treeset_str0.containsAll((java.util.Collection<java.lang.String>)treeset_str53);
    java.util.TreeSet<java.lang.String> treeset_str55 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str56 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str55);
    java.util.SortedSet<java.lang.String> sortedset_str58 = treeset_str56.tailSet("");
    java.util.SortedSet<java.lang.String> sortedset_str60 = treeset_str56.headSet("[[hi!]]");
    boolean b61 = treeset_str53.retainAll((java.util.Collection<java.lang.String>)treeset_str56);
    java.lang.String[] str_array64 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str65 = new java.util.TreeSet<java.lang.String>();
    boolean b66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str65, str_array64);
    java.util.NavigableSet<java.lang.String> navigableset_str67 = treeset_str65.descendingSet();
    int i68 = treeset_str65.size();
    java.lang.String str70 = treeset_str65.lower("[]");
    java.lang.Object[] obj_array71 = treeset_str65.toArray();
    // The following exception was thrown during execution in test generation
    try {
    boolean b72 = treeset_str56.contains((java.lang.Object)obj_array71);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet_array_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i68 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str70 + "' != '" + ""+ "'", str70.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array71);

  }

  @Test
  public void test366() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test366"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.util.Iterator<java.lang.String> iterator_str8 = treeset_str0.descendingIterator();
    boolean b10 = treeset_str0.add("");
    java.lang.Object obj11 = treeset_str0.clone();
    java.util.Comparator<? super java.lang.String> comparator_wildcard12 = treeset_str0.comparator();
    // The following exception was thrown during execution in test generation
    try {
    java.util.SortedSet<java.lang.String> sortedset_str15 = treeset_str0.subSet("[]", "[, hi!]");
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard12);

  }

  @Test
  public void test367() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test367"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str0.subSet("", true, "[hi!]", true);
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.SortedSet<java.lang.String> sortedset_str10 = treeset_str8.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array13 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str14 = new java.util.ArrayList<java.lang.String>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str14, str_array13);
    boolean b16 = treeset_str11.retainAll((java.util.Collection<java.lang.String>)arraylist_str14);
    boolean b17 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)treeset_str11);
    java.util.NavigableSet<java.lang.String> navigableset_str20 = treeset_str8.headSet("", false);
    boolean b21 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str23 = treeset_str0.tailSet("hi!");
    treeset_str0.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str23);

  }

  @Test
  public void test368() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test368"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.lang.String str6 = treeset_str3.pollLast();
    java.lang.String str7 = treeset_str3.toString();
    java.lang.String str8 = treeset_str3.first();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!"+ "'", str6.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "[]"+ "'", str7.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + ""+ "'", str8.equals(""));

  }

  @Test
  public void test369() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test369"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.stream.Stream<java.lang.String> stream_str17 = navigableset_str16.parallelStream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str17);

  }

  @Test
  public void test370() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test370"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    boolean b20 = treeset_str13.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str21);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str22.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str22.headSet("", false);
    boolean b28 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b29 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b30 = treeset_str0.equals((java.lang.Object)b29);
    java.lang.String str32 = treeset_str0.ceiling("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str33 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Comparator<? super java.lang.String> comparator_wildcard34 = treeset_str33.comparator();
    java.lang.Object[] obj_array35 = treeset_str33.toArray();
    java.lang.String str36 = treeset_str33.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "[]"+ "'", str36.equals("[]"));

  }

  @Test
  public void test371() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test371"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    boolean b20 = treeset_str13.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str21);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str22.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str22.headSet("", false);
    boolean b28 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b29 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b30 = treeset_str0.equals((java.lang.Object)b29);
    java.lang.String str32 = treeset_str0.ceiling("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str33 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.stream.Stream<java.lang.String> stream_str34 = treeset_str0.parallelStream();
    java.util.TreeSet<java.lang.String> treeset_str35 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array37 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str38 = new java.util.ArrayList<java.lang.String>();
    boolean b39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str38, str_array37);
    boolean b40 = treeset_str35.retainAll((java.util.Collection<java.lang.String>)arraylist_str38);
    boolean b42 = treeset_str35.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str43 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str44 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str43);
    java.util.SortedSet<java.lang.String> sortedset_str46 = treeset_str44.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str49 = treeset_str44.headSet("", false);
    boolean b50 = treeset_str35.retainAll((java.util.Collection<java.lang.String>)navigableset_str49);
    java.lang.String[] str_array53 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str54 = new java.util.TreeSet<java.lang.String>();
    boolean b55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str54, str_array53);
    java.util.NavigableSet<java.lang.String> navigableset_str56 = treeset_str54.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str57 = treeset_str54.iterator();
    java.util.Iterator<java.lang.String> iterator_str58 = treeset_str54.iterator();
    boolean b59 = treeset_str35.removeAll((java.util.Collection<java.lang.String>)treeset_str54);
    java.util.Iterator<java.lang.String> iterator_str60 = treeset_str35.iterator();
    java.lang.String str62 = treeset_str35.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str63 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str35);
    int i64 = treeset_str35.size();
    java.util.SortedSet<java.lang.String> sortedset_str67 = treeset_str35.subSet("[hi!]", "hi!");
    boolean b68 = treeset_str0.containsAll((java.util.Collection<java.lang.String>)sortedset_str67);
    java.lang.String str70 = treeset_str0.floor("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i64 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str70);

  }

  @Test
  public void test372() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test372"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.lang.String str4 = treeset_str1.pollFirst();
    java.util.NavigableSet<java.lang.String> navigableset_str9 = treeset_str1.subSet("", false, "[hi!]", false);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str1.headSet("[hi!]");
    boolean b13 = treeset_str1.add("[hi!]");
    int i14 = treeset_str1.size();
    java.util.SortedSet<java.lang.String> sortedset_str16 = treeset_str1.tailSet("[hi!]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str16);

  }

  @Test
  public void test373() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test373"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.SortedSet<java.lang.String> sortedset_str15 = treeset_str1.headSet("[[hi!]]");
    java.util.SortedSet<java.lang.String> sortedset_str17 = treeset_str1.headSet("[hi!]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str17);

  }

  @Test
  public void test374() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test374"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str0.tailSet("hi!", true);
    java.util.Iterator<java.lang.String> iterator_str11 = treeset_str0.iterator();
    java.util.Comparator<? super java.lang.String> comparator_wildcard12 = treeset_str0.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard12);

  }

  @Test
  public void test375() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test375"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str8 = treeset_str0.headSet("");
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str9);
    java.util.NavigableSet<java.lang.String> navigableset_str15 = treeset_str9.subSet("", true, "[hi!]", true);
    java.util.NavigableSet<java.lang.String> navigableset_str20 = treeset_str9.subSet("", false, "hi!", false);
    java.lang.String str22 = treeset_str9.ceiling("");
    boolean b23 = treeset_str0.containsAll((java.util.Collection<java.lang.String>)treeset_str9);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str24 = treeset_str9.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);

  }

  @Test
  public void test376() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test376"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    boolean b20 = treeset_str13.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str21);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str22.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str22.headSet("", false);
    boolean b28 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b29 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b30 = treeset_str0.equals((java.lang.Object)b29);
    int i31 = treeset_str0.size();
    java.lang.String str33 = treeset_str0.ceiling("hi!");
    int i34 = treeset_str0.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);

  }

  @Test
  public void test377() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test377"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.lang.String str4 = treeset_str1.pollFirst();
    java.util.NavigableSet<java.lang.String> navigableset_str9 = treeset_str1.subSet("", false, "[hi!]", false);
    boolean b10 = treeset_str1.isEmpty();
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array13 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str14 = new java.util.ArrayList<java.lang.String>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str14, str_array13);
    boolean b16 = treeset_str11.retainAll((java.util.Collection<java.lang.String>)arraylist_str14);
    java.lang.String str17 = treeset_str11.pollLast();
    java.util.Spliterator<java.lang.String> spliterator_str18 = treeset_str11.spliterator();
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str20 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str19);
    java.util.SortedSet<java.lang.String> sortedset_str22 = treeset_str20.tailSet("");
    java.lang.String str24 = treeset_str20.higher("");
    boolean b25 = treeset_str11.retainAll((java.util.Collection<java.lang.String>)treeset_str20);
    java.util.SortedSet<java.lang.String> sortedset_str27 = treeset_str11.tailSet("");
    boolean b28 = treeset_str1.containsAll((java.util.Collection<java.lang.String>)sortedset_str27);
    java.util.NavigableSet<java.lang.String> navigableset_str31 = treeset_str1.tailSet("hi!", false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str31);

  }

  @Test
  public void test378() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test378"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.iterator();
    java.lang.String[] str_array5 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str6, str_array5);
    java.util.NavigableSet<java.lang.String> navigableset_str8 = treeset_str6.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str9 = treeset_str6.iterator();
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str6.headSet("[hi!]");
    java.util.SortedSet<java.lang.String> sortedset_str13 = treeset_str6.headSet("[]");
    boolean b14 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)sortedset_str13);
    java.util.Iterator<java.lang.String> iterator_str15 = treeset_str1.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str15);

  }

  @Test
  public void test379() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test379"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str0.headSet("[hi!]", true);
    java.lang.String str28 = treeset_str0.toString();
    java.lang.Object[] obj_array29 = treeset_str0.toArray();
    java.util.stream.Stream<java.lang.String> stream_str30 = treeset_str0.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "[]"+ "'", str28.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str30);

  }

  @Test
  public void test380() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test380"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.lang.String str6 = treeset_str3.pollLast();
    java.util.stream.Stream<java.lang.String> stream_str7 = treeset_str3.stream();
    java.util.Iterator<java.lang.String> iterator_str8 = treeset_str3.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str9);
    java.lang.String str12 = treeset_str10.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str15 = treeset_str10.headSet("hi!", true);
    java.util.stream.Stream<java.lang.String> stream_str16 = treeset_str10.stream();
    java.util.Spliterator<java.lang.String> spliterator_str17 = treeset_str10.spliterator();
    boolean b18 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str10);
    int i19 = treeset_str10.size();
    java.util.NavigableSet<java.lang.String> navigableset_str22 = treeset_str10.headSet("hi!", false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!"+ "'", str6.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str22);

  }

  @Test
  public void test381() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test381"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.lang.String str4 = treeset_str1.pollFirst();
    java.util.NavigableSet<java.lang.String> navigableset_str9 = treeset_str1.subSet("", false, "[hi!]", false);
    java.util.Iterator<java.lang.String> iterator_str10 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str1);
    java.lang.String str12 = treeset_str1.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str12);

  }

  @Test
  public void test382() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test382"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str1.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str1.descendingSet();
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)navigableset_str18);
    java.util.TreeSet<java.lang.String> treeset_str20 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str20);
    java.util.SortedSet<java.lang.String> sortedset_str23 = treeset_str20.tailSet("[hi!]");
    java.lang.Object obj24 = treeset_str20.clone();
    boolean b25 = treeset_str19.retainAll((java.util.Collection<java.lang.String>)treeset_str20);
    java.lang.Object[] obj_array26 = treeset_str20.toArray();
    // The following exception was thrown during execution in test generation
    try {
    java.util.SortedSet<java.lang.String> sortedset_str29 = treeset_str20.subSet("[]", "[[]]");
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);

  }

  @Test
  public void test383() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test383"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.lang.String str6 = treeset_str3.pollLast();
    java.util.stream.Stream<java.lang.String> stream_str7 = treeset_str3.stream();
    java.util.Iterator<java.lang.String> iterator_str8 = treeset_str3.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str9);
    java.lang.String str12 = treeset_str10.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str15 = treeset_str10.headSet("hi!", true);
    java.util.stream.Stream<java.lang.String> stream_str16 = treeset_str10.stream();
    java.util.Spliterator<java.lang.String> spliterator_str17 = treeset_str10.spliterator();
    boolean b18 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str10);
    java.util.stream.Stream<java.lang.String> stream_str19 = treeset_str3.parallelStream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!"+ "'", str6.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str19);

  }

  @Test
  public void test384() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test384"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str4 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array6 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str7 = new java.util.ArrayList<java.lang.String>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str7, str_array6);
    boolean b9 = treeset_str4.retainAll((java.util.Collection<java.lang.String>)arraylist_str7);
    boolean b10 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str4);
    java.lang.String str12 = treeset_str4.ceiling("[[]]");
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str13);
    java.util.Iterator<java.lang.String> iterator_str15 = treeset_str14.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str19 = new java.util.ArrayList<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str19, str_array18);
    boolean b21 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)arraylist_str19);
    boolean b23 = treeset_str16.add("hi!");
    boolean b24 = treeset_str14.contains((java.lang.Object)"hi!");
    java.lang.String str26 = treeset_str14.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str29 = treeset_str14.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str30 = treeset_str14.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str31 = treeset_str14.descendingSet();
    java.util.TreeSet<java.lang.String> treeset_str32 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)navigableset_str31);
    java.lang.Object obj33 = treeset_str32.clone();
    java.util.NavigableSet<java.lang.String> navigableset_str34 = treeset_str32.descendingSet();
    java.util.TreeSet<java.lang.String> treeset_str35 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str36 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str35);
    java.lang.String str38 = treeset_str36.lower("");
    java.lang.String str39 = treeset_str36.pollFirst();
    java.util.TreeSet<java.lang.String> treeset_str40 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str36);
    java.util.SortedSet<java.lang.String> sortedset_str43 = treeset_str36.subSet("[]", "[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str44 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array46 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str47 = new java.util.ArrayList<java.lang.String>();
    boolean b48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str47, str_array46);
    boolean b49 = treeset_str44.retainAll((java.util.Collection<java.lang.String>)arraylist_str47);
    java.util.TreeSet<java.lang.String> treeset_str50 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array52 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str53 = new java.util.ArrayList<java.lang.String>();
    boolean b54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str53, str_array52);
    boolean b55 = treeset_str50.retainAll((java.util.Collection<java.lang.String>)arraylist_str53);
    java.util.TreeSet<java.lang.String> treeset_str56 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array58 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str59 = new java.util.ArrayList<java.lang.String>();
    boolean b60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str59, str_array58);
    boolean b61 = treeset_str56.retainAll((java.util.Collection<java.lang.String>)arraylist_str59);
    java.util.ArrayList[] arrayList_array63 = new java.util.ArrayList[ 3 ];
    @SuppressWarnings("unchecked")
    java.util.ArrayList<java.lang.String>[] arraylist_str_array64 = (java.util.ArrayList<java.lang.String>[])arrayList_array63;
    arraylist_str_array64[0] = arraylist_str47;
    arraylist_str_array64[1] = arraylist_str53;
    arraylist_str_array64[2] = arraylist_str59;
    java.util.ArrayList<java.lang.String>[] arraylist_str_array71 = treeset_str36.toArray(arraylist_str_array64);
    boolean b72 = treeset_str32.contains((java.lang.Object)arraylist_str_array71);
    java.util.AbstractList<java.lang.String>[] abstractlist_str_array73 = treeset_str4.toArray((java.util.AbstractList<java.lang.String>[])arraylist_str_array71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arrayList_array63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(abstractlist_str_array73);

  }

  @Test
  public void test385() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test385"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str8 = treeset_str0.headSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str0.subSet("[hi!]", true, "hi!", false);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str14);
    java.lang.String str17 = treeset_str15.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str20 = treeset_str15.headSet("hi!", true);
    boolean b21 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str15);
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array24 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str25 = new java.util.ArrayList<java.lang.String>();
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str25, str_array24);
    boolean b27 = treeset_str22.retainAll((java.util.Collection<java.lang.String>)arraylist_str25);
    boolean b29 = treeset_str22.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str30 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str31 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str30);
    java.util.SortedSet<java.lang.String> sortedset_str33 = treeset_str31.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str36 = treeset_str31.headSet("", false);
    boolean b37 = treeset_str22.retainAll((java.util.Collection<java.lang.String>)navigableset_str36);
    boolean b39 = treeset_str22.equals((java.lang.Object)0);
    java.util.TreeSet<java.lang.String> treeset_str40 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str22);
    // The following exception was thrown during execution in test generation
    try {
    boolean b41 = treeset_str0.remove((java.lang.Object)treeset_str22);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);

  }

  @Test
  public void test386() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test386"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str1.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str1.descendingSet();
    java.lang.String str20 = treeset_str1.lower("[]");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array23 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str24 = new java.util.ArrayList<java.lang.String>();
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str24, str_array23);
    boolean b26 = treeset_str21.retainAll((java.util.Collection<java.lang.String>)arraylist_str24);
    java.util.TreeSet<java.lang.String> treeset_str27 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array29 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str30 = new java.util.ArrayList<java.lang.String>();
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str30, str_array29);
    boolean b32 = treeset_str27.retainAll((java.util.Collection<java.lang.String>)arraylist_str30);
    java.util.TreeSet<java.lang.String> treeset_str33 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array35 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str36 = new java.util.ArrayList<java.lang.String>();
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str36, str_array35);
    boolean b38 = treeset_str33.retainAll((java.util.Collection<java.lang.String>)arraylist_str36);
    java.util.TreeSet<java.lang.String> treeset_str39 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array41 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str42 = new java.util.ArrayList<java.lang.String>();
    boolean b43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str42, str_array41);
    boolean b44 = treeset_str39.retainAll((java.util.Collection<java.lang.String>)arraylist_str42);
    java.util.TreeSet<java.lang.String> treeset_str45 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array47 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str48 = new java.util.ArrayList<java.lang.String>();
    boolean b49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str48, str_array47);
    boolean b50 = treeset_str45.retainAll((java.util.Collection<java.lang.String>)arraylist_str48);
    java.util.ArrayList[] arrayList_array52 = new java.util.ArrayList[ 5 ];
    @SuppressWarnings("unchecked")
    java.util.ArrayList<java.lang.String>[] arraylist_str_array53 = (java.util.ArrayList<java.lang.String>[])arrayList_array52;
    arraylist_str_array53[0] = arraylist_str24;
    arraylist_str_array53[1] = arraylist_str30;
    arraylist_str_array53[2] = arraylist_str36;
    arraylist_str_array53[3] = arraylist_str42;
    arraylist_str_array53[4] = arraylist_str48;
    java.util.ArrayList<java.lang.String>[] arraylist_str_array64 = treeset_str1.toArray(arraylist_str_array53);
    java.util.NavigableSet<java.lang.String> navigableset_str65 = treeset_str1.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str66 = treeset_str1.descendingIterator();
    // The following exception was thrown during execution in test generation
    try {
    java.util.SortedSet<java.lang.String> sortedset_str69 = treeset_str1.subSet("hi!", "[, hi!]");
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arrayList_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str66);

  }

  @Test
  public void test387() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test387"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.stream.Stream<java.lang.String> stream_str11 = treeset_str0.stream();
    java.util.Iterator<java.lang.String> iterator_str12 = treeset_str0.descendingIterator();
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str0.descendingSet();
    java.util.stream.Stream<java.lang.String> stream_str14 = navigableset_str13.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str14);

  }

  @Test
  public void test388() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test388"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str1.iterator();
    java.util.Iterator<java.lang.String> iterator_str18 = treeset_str1.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str18);

  }

  @Test
  public void test389() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test389"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.util.Iterator<java.lang.String> iterator_str16 = treeset_str0.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str16);

  }

  @Test
  public void test390() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test390"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.lang.String str8 = treeset_str0.lower("");
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    java.lang.String[] str_array27 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>();
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str28, str_array27);
    java.util.NavigableSet<java.lang.String> navigableset_str30 = treeset_str28.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str31 = treeset_str28.iterator();
    java.util.Iterator<java.lang.String> iterator_str32 = treeset_str28.iterator();
    boolean b33 = treeset_str9.removeAll((java.util.Collection<java.lang.String>)treeset_str28);
    java.util.Iterator<java.lang.String> iterator_str34 = treeset_str9.iterator();
    java.util.TreeSet<java.lang.String> treeset_str35 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str36 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str35);
    java.util.Iterator<java.lang.String> iterator_str37 = treeset_str36.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str38 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array40 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str41 = new java.util.ArrayList<java.lang.String>();
    boolean b42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str41, str_array40);
    boolean b43 = treeset_str38.retainAll((java.util.Collection<java.lang.String>)arraylist_str41);
    boolean b45 = treeset_str38.add("hi!");
    boolean b46 = treeset_str36.contains((java.lang.Object)"hi!");
    java.lang.String str48 = treeset_str36.ceiling("hi!");
    treeset_str36.clear();
    java.util.TreeSet<java.lang.String> treeset_str50 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str51 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str50);
    java.util.Iterator<java.lang.String> iterator_str52 = treeset_str51.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str53 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array55 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str56 = new java.util.ArrayList<java.lang.String>();
    boolean b57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str56, str_array55);
    boolean b58 = treeset_str53.retainAll((java.util.Collection<java.lang.String>)arraylist_str56);
    boolean b60 = treeset_str53.add("hi!");
    boolean b61 = treeset_str51.contains((java.lang.Object)"hi!");
    java.lang.String str63 = treeset_str51.ceiling("hi!");
    java.util.TreeSet<java.lang.String> treeset_str64 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str65 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str64);
    java.util.SortedSet<java.lang.String> sortedset_str67 = treeset_str65.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str70 = treeset_str65.headSet("", false);
    java.util.SortedSet[] sortedSet_array72 = new java.util.SortedSet[ 4 ];
    @SuppressWarnings("unchecked")
    java.util.SortedSet<java.lang.String>[] sortedset_str_array73 = (java.util.SortedSet<java.lang.String>[])sortedSet_array72;
    sortedset_str_array73[0] = treeset_str9;
    sortedset_str_array73[1] = treeset_str36;
    sortedset_str_array73[2] = treeset_str51;
    sortedset_str_array73[3] = treeset_str65;
    java.util.SortedSet<java.lang.String>[] sortedset_str_array82 = treeset_str0.toArray(sortedset_str_array73);
    int i83 = treeset_str0.size();
    java.util.Spliterator<java.lang.String> spliterator_str84 = treeset_str0.spliterator();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str85 = treeset_str0.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i83 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str84);

  }

  @Test
  public void test391() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test391"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.lang.String str4 = treeset_str1.pollFirst();
    java.util.NavigableSet<java.lang.String> navigableset_str9 = treeset_str1.subSet("", false, "[hi!]", false);
    java.util.stream.Stream<java.lang.String> stream_str10 = treeset_str1.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str10);

  }

  @Test
  public void test392() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test392"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str0.tailSet("hi!", true);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    boolean b13 = treeset_str11.add("[]");
    java.lang.String str15 = treeset_str11.floor("[[]]");
    java.util.NavigableSet<java.lang.String> navigableset_str20 = treeset_str11.subSet("[, hi!]", true, "[]", true);
    java.lang.String str22 = treeset_str11.higher("[[]]");
    treeset_str11.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "[]"+ "'", str22.equals("[]"));

  }

  @Test
  public void test393() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test393"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("", false);
    java.lang.String str7 = treeset_str1.pollLast();
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str1.tailSet("[, hi!]");
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str12, str_array11);
    int i14 = treeset_str12.size();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str12);
    java.lang.String str17 = treeset_str15.higher("");
    boolean b18 = treeset_str1.addAll((java.util.Collection<java.lang.String>)treeset_str15);
    java.lang.String str19 = treeset_str1.last();
    java.util.TreeSet<java.lang.String> treeset_str20 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str20);
    java.util.Comparator<? super java.lang.String> comparator_wildcard22 = treeset_str20.comparator();
    java.util.SortedSet<java.lang.String> sortedset_str25 = treeset_str20.subSet("[hi!]", "[hi!]");
    boolean b26 = treeset_str20.isEmpty();
    boolean b27 = treeset_str1.addAll((java.util.Collection<java.lang.String>)treeset_str20);
    java.lang.String str28 = treeset_str1.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + ""+ "'", str19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "[]"+ "'", str28.equals("[]"));

  }

  @Test
  public void test394() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test394"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.lang.String str4 = treeset_str1.pollFirst();
    java.util.NavigableSet<java.lang.String> navigableset_str9 = treeset_str1.subSet("", false, "[hi!]", false);
    java.util.Iterator<java.lang.String> iterator_str10 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.Iterator<java.lang.String> iterator_str13 = treeset_str12.iterator();
    java.util.Iterator<java.lang.String> iterator_str14 = treeset_str12.iterator();
    boolean b15 = treeset_str1.containsAll((java.util.Collection<java.lang.String>)treeset_str12);
    treeset_str1.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);

  }

  @Test
  public void test395() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test395"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b25 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b26 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str8);
    boolean b28 = treeset_str8.add("[hi!]");
    java.util.NavigableSet<java.lang.String> navigableset_str31 = treeset_str8.headSet("", false);
    java.util.TreeSet<java.lang.String> treeset_str32 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array34 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str35 = new java.util.ArrayList<java.lang.String>();
    boolean b36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str35, str_array34);
    boolean b37 = treeset_str32.retainAll((java.util.Collection<java.lang.String>)arraylist_str35);
    java.util.stream.Stream<java.lang.String> stream_str38 = treeset_str32.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str40 = treeset_str32.headSet("");
    boolean b41 = treeset_str8.removeAll((java.util.Collection<java.lang.String>)treeset_str32);
    java.util.Comparator<? super java.lang.String> comparator_wildcard42 = treeset_str8.comparator();
    java.lang.String str44 = treeset_str8.lower("[hi!]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str44);

  }

  @Test
  public void test396() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test396"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str0.subSet("", true, "[hi!]", true);
    java.util.NavigableSet<java.lang.String> navigableset_str11 = treeset_str0.subSet("", false, "hi!", false);
    java.util.stream.Stream<java.lang.String> stream_str12 = treeset_str0.parallelStream();
    java.lang.Object obj13 = treeset_str0.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj13);

  }

  @Test
  public void test397() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test397"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str11, str_array10);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str11.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str14 = treeset_str11.iterator();
    boolean b15 = treeset_str0.equals((java.lang.Object)iterator_str14);
    java.util.Iterator<java.lang.String> iterator_str16 = treeset_str0.iterator();
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array19 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str20 = new java.util.ArrayList<java.lang.String>();
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str20, str_array19);
    boolean b22 = treeset_str17.retainAll((java.util.Collection<java.lang.String>)arraylist_str20);
    boolean b24 = treeset_str17.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str26 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str25);
    java.util.SortedSet<java.lang.String> sortedset_str28 = treeset_str26.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str31 = treeset_str26.headSet("", false);
    boolean b32 = treeset_str17.retainAll((java.util.Collection<java.lang.String>)navigableset_str31);
    java.lang.String[] str_array35 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str36 = new java.util.TreeSet<java.lang.String>();
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str36, str_array35);
    java.util.NavigableSet<java.lang.String> navigableset_str38 = treeset_str36.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str39 = treeset_str36.iterator();
    java.util.Iterator<java.lang.String> iterator_str40 = treeset_str36.iterator();
    boolean b41 = treeset_str17.removeAll((java.util.Collection<java.lang.String>)treeset_str36);
    java.util.SortedSet[] sortedSet_array43 = new java.util.SortedSet[ 1 ];
    @SuppressWarnings("unchecked")
    java.util.SortedSet<java.lang.String>[] sortedset_str_array44 = (java.util.SortedSet<java.lang.String>[])sortedSet_array43;
    sortedset_str_array44[0] = treeset_str17;
    java.util.SortedSet[][] sortedSet_array_array48 = new java.util.SortedSet[ 1 ][];
    @SuppressWarnings("unchecked")
    java.util.SortedSet<java.lang.String>[][] sortedset_str_array_array49 = (java.util.SortedSet<java.lang.String>[][])sortedSet_array_array48;
    sortedset_str_array_array49[0] = sortedset_str_array44;
    java.util.SortedSet<java.lang.String>[][] sortedset_str_array_array52 = treeset_str0.toArray(sortedset_str_array_array49);
    java.util.TreeSet<java.lang.String> treeset_str53 = new java.util.TreeSet<java.lang.String>();
    boolean b54 = treeset_str0.containsAll((java.util.Collection<java.lang.String>)treeset_str53);
    java.util.Iterator<java.lang.String> iterator_str55 = treeset_str0.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet_array_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str55);

  }

  @Test
  public void test398() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test398"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b25 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b26 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str8);
    boolean b28 = treeset_str8.add("[hi!]");
    java.util.NavigableSet<java.lang.String> navigableset_str31 = treeset_str8.headSet("", false);
    java.util.TreeSet<java.lang.String> treeset_str32 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array34 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str35 = new java.util.ArrayList<java.lang.String>();
    boolean b36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str35, str_array34);
    boolean b37 = treeset_str32.retainAll((java.util.Collection<java.lang.String>)arraylist_str35);
    java.util.stream.Stream<java.lang.String> stream_str38 = treeset_str32.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str40 = treeset_str32.headSet("");
    boolean b41 = treeset_str8.removeAll((java.util.Collection<java.lang.String>)treeset_str32);
    int i42 = treeset_str32.size();
    java.util.Iterator<java.lang.String> iterator_str43 = treeset_str32.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str46 = treeset_str32.headSet("[]", true);
    java.util.TreeSet<java.lang.String> treeset_str47 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)navigableset_str46);
    java.lang.Object[] obj_array48 = treeset_str47.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array48);

  }

  @Test
  public void test399() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test399"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("", false);
    java.lang.String str7 = treeset_str1.pollLast();
    boolean b8 = treeset_str1.isEmpty();
    java.lang.String str10 = treeset_str1.floor("[]");
    treeset_str1.clear();
    boolean b12 = treeset_str1.isEmpty();
    java.lang.String str14 = treeset_str1.higher("[[]]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str14);

  }

  @Test
  public void test400() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test400"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str0.tailSet("hi!", true);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.SortedSet<java.lang.String> sortedset_str14 = treeset_str11.headSet("[, hi!]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str14);

  }

  @Test
  public void test401() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test401"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str8 = treeset_str0.headSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str0.subSet("[hi!]", true, "hi!", false);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str14);
    java.lang.String str17 = treeset_str15.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str20 = treeset_str15.headSet("hi!", true);
    boolean b21 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str15);
    java.util.SortedSet<java.lang.String> sortedset_str23 = treeset_str0.headSet("[[hi!]]");
    java.util.NavigableSet<java.lang.String> navigableset_str28 = treeset_str0.subSet("", false, "", false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str28);

  }

  @Test
  public void test402() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test402"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str11, str_array10);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str11.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str14 = treeset_str11.iterator();
    boolean b15 = treeset_str0.equals((java.lang.Object)iterator_str14);
    java.util.Iterator<java.lang.String> iterator_str16 = treeset_str0.iterator();
    java.lang.String str18 = treeset_str0.floor("hi!");
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str20 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str19);
    treeset_str19.clear();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str23 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str22);
    java.lang.String str25 = treeset_str23.lower("");
    java.lang.String str26 = treeset_str23.pollFirst();
    java.util.TreeSet<java.lang.String> treeset_str27 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str23);
    java.util.SortedSet<java.lang.String> sortedset_str30 = treeset_str23.subSet("[]", "[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str31 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str32 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str31);
    java.lang.String str34 = treeset_str32.lower("");
    boolean b35 = treeset_str32.isEmpty();
    boolean b36 = treeset_str23.contains((java.lang.Object)b35);
    java.lang.String str37 = treeset_str23.pollFirst();
    boolean b38 = treeset_str19.addAll((java.util.Collection<java.lang.String>)treeset_str23);
    boolean b39 = treeset_str0.addAll((java.util.Collection<java.lang.String>)treeset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);

  }

  @Test
  public void test403() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test403"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Spliterator<java.lang.String> spliterator_str7 = treeset_str0.spliterator();
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str0.tailSet("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array13 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str14 = new java.util.ArrayList<java.lang.String>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str14, str_array13);
    boolean b16 = treeset_str11.retainAll((java.util.Collection<java.lang.String>)arraylist_str14);
    java.lang.String str17 = treeset_str11.pollLast();
    java.util.Iterator<java.lang.String> iterator_str18 = treeset_str11.descendingIterator();
    java.lang.String[] str_array21 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>();
    boolean b23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str22, str_array21);
    java.util.NavigableSet<java.lang.String> navigableset_str24 = treeset_str22.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str22.iterator();
    boolean b26 = treeset_str11.equals((java.lang.Object)iterator_str25);
    java.util.NavigableSet<java.lang.String> navigableset_str29 = treeset_str11.headSet("", true);
    boolean b30 = treeset_str10.removeAll((java.util.Collection<java.lang.String>)treeset_str11);
    java.util.TreeSet<java.lang.String> treeset_str31 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array33 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str34 = new java.util.ArrayList<java.lang.String>();
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str34, str_array33);
    boolean b36 = treeset_str31.retainAll((java.util.Collection<java.lang.String>)arraylist_str34);
    boolean b38 = treeset_str31.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str39 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str40 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str39);
    java.util.SortedSet<java.lang.String> sortedset_str42 = treeset_str40.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str45 = treeset_str40.headSet("", false);
    boolean b46 = treeset_str31.retainAll((java.util.Collection<java.lang.String>)navigableset_str45);
    java.lang.String[] str_array49 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str50 = new java.util.TreeSet<java.lang.String>();
    boolean b51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str50, str_array49);
    java.util.NavigableSet<java.lang.String> navigableset_str52 = treeset_str50.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str53 = treeset_str50.iterator();
    java.util.Iterator<java.lang.String> iterator_str54 = treeset_str50.iterator();
    boolean b55 = treeset_str31.removeAll((java.util.Collection<java.lang.String>)treeset_str50);
    java.util.Iterator<java.lang.String> iterator_str56 = treeset_str31.iterator();
    java.lang.String str58 = treeset_str31.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str59 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str31);
    int i60 = treeset_str31.size();
    java.lang.String str61 = treeset_str31.pollFirst();
    boolean b62 = treeset_str10.addAll((java.util.Collection<java.lang.String>)treeset_str31);
    java.lang.String str64 = treeset_str10.ceiling("[]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i60 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str64);

  }

  @Test
  public void test404() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test404"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("", false);
    int i7 = treeset_str1.size();
    java.lang.String str9 = treeset_str1.ceiling("[]");
    java.lang.String str11 = treeset_str1.ceiling("[]");
    java.lang.Object obj12 = null;
    boolean b13 = treeset_str1.equals(obj12);
    java.util.SortedSet<java.lang.String> sortedset_str16 = treeset_str1.subSet("", "[[hi!]]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str16);

  }

  @Test
  public void test405() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test405"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String str16 = treeset_str0.pollLast();
    java.lang.String str17 = treeset_str0.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str17);

  }

  @Test
  public void test406() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test406"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.lang.String str4 = treeset_str1.pollFirst();
    java.util.NavigableSet<java.lang.String> navigableset_str9 = treeset_str1.subSet("", false, "[hi!]", false);
    java.util.Iterator<java.lang.String> iterator_str10 = treeset_str1.descendingIterator();
    java.lang.String str11 = treeset_str1.toString();
    java.lang.String str12 = treeset_str1.pollFirst();
    java.lang.String str13 = treeset_str1.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "[]"+ "'", str11.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);

  }

  @Test
  public void test407() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test407"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str26 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str25);
    java.util.Iterator<java.lang.String> iterator_str27 = treeset_str26.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array30 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str31 = new java.util.ArrayList<java.lang.String>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str31, str_array30);
    boolean b33 = treeset_str28.retainAll((java.util.Collection<java.lang.String>)arraylist_str31);
    boolean b35 = treeset_str28.add("hi!");
    boolean b36 = treeset_str26.contains((java.lang.Object)"hi!");
    java.lang.String str38 = treeset_str26.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str43 = treeset_str26.subSet("[hi!]", true, "[hi!]", true);
    boolean b44 = treeset_str0.containsAll((java.util.Collection<java.lang.String>)treeset_str26);
    java.util.SortedSet<java.lang.String> sortedset_str46 = treeset_str0.tailSet("[, hi!]");
    java.util.TreeSet<java.lang.String> treeset_str47 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.TreeSet<java.lang.String> treeset_str48 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str49 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str48);
    java.lang.String str51 = treeset_str49.lower("");
    java.lang.String str52 = treeset_str49.pollFirst();
    java.util.NavigableSet<java.lang.String> navigableset_str57 = treeset_str49.subSet("", false, "[hi!]", false);
    java.util.SortedSet<java.lang.String> sortedset_str59 = treeset_str49.headSet("[hi!]");
    boolean b60 = treeset_str0.addAll((java.util.Collection<java.lang.String>)treeset_str49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);

  }

  @Test
  public void test408() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test408"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str0.tailSet("hi!", true);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    boolean b13 = treeset_str11.add("[]");
    java.lang.String str15 = treeset_str11.floor("[[]]");
    java.util.NavigableSet<java.lang.String> navigableset_str20 = treeset_str11.subSet("[, hi!]", true, "[]", true);
    java.lang.String str22 = treeset_str11.higher("[[]]");
    // The following exception was thrown during execution in test generation
    try {
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str11.subSet("[]", false, "[[]]", false);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "[]"+ "'", str22.equals("[]"));

  }

  @Test
  public void test409() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test409"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str0.tailSet("hi!", true);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    boolean b13 = treeset_str11.add("[]");
    java.lang.String str15 = treeset_str11.floor("[[]]");
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str16);
    java.lang.String str19 = treeset_str17.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str22 = treeset_str17.headSet("hi!", true);
    java.util.stream.Stream<java.lang.String> stream_str23 = treeset_str17.stream();
    java.lang.String str24 = treeset_str17.pollFirst();
    boolean b25 = treeset_str17.isEmpty();
    boolean b26 = treeset_str11.addAll((java.util.Collection<java.lang.String>)treeset_str17);
    boolean b27 = treeset_str11.isEmpty();
    java.lang.String str28 = treeset_str11.pollLast();
    // The following exception was thrown during execution in test generation
    try {
    java.util.NavigableSet<java.lang.String> navigableset_str33 = treeset_str11.subSet("[hi!]", true, "", false);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "hi!"+ "'", str28.equals("hi!"));

  }

  @Test
  public void test410() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test410"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str1.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str1.descendingSet();
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)navigableset_str18);
    boolean b21 = treeset_str19.contains((java.lang.Object)"");
    java.util.SortedSet<java.lang.String> sortedset_str23 = treeset_str19.headSet("[, hi!]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str23);

  }

  @Test
  public void test411() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test411"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str0.tailSet("hi!", true);
    java.util.Iterator<java.lang.String> iterator_str11 = treeset_str0.iterator();
    java.lang.Object obj12 = treeset_str0.clone();
    java.lang.Object[] obj_array13 = treeset_str0.toArray();
    // The following exception was thrown during execution in test generation
    try {
    java.util.SortedSet<java.lang.String> sortedset_str16 = treeset_str0.subSet("[hi!]", "[, hi!]");
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);

  }

  @Test
  public void test412() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test412"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    boolean b12 = treeset_str7.add("");
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    java.lang.String str19 = treeset_str13.pollLast();
    java.util.Iterator<java.lang.String> iterator_str20 = treeset_str13.descendingIterator();
    java.util.Iterator<java.lang.String> iterator_str21 = treeset_str13.descendingIterator();
    java.lang.String str22 = treeset_str13.pollFirst();
    java.lang.Object[] obj_array23 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array24 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array25 = new java.lang.Object[] {  };
    java.lang.Object[] obj_array26 = new java.lang.Object[] {  };
    java.lang.Object[][] obj_array_array27 = new java.lang.Object[][] { obj_array23, obj_array24, obj_array25, obj_array26 };
    java.lang.Object[][] obj_array_array28 = treeset_str13.toArray(obj_array_array27);
    // The following exception was thrown during execution in test generation
    try {
    java.io.Serializable[] serializable_array29 = treeset_str7.toArray((java.io.Serializable[])obj_array_array27);
      org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException");
    } catch (java.lang.ArrayStoreException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array_array28);

  }

  @Test
  public void test413() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test413"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    boolean b20 = treeset_str13.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str21);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str22.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str22.headSet("", false);
    boolean b28 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b29 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b30 = treeset_str0.equals((java.lang.Object)b29);
    java.lang.String str32 = treeset_str0.ceiling("[hi!]");
    java.util.Iterator<java.lang.String> iterator_str33 = treeset_str0.iterator();
    java.util.TreeSet<java.lang.String> treeset_str34 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array36 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str37 = new java.util.ArrayList<java.lang.String>();
    boolean b38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str37, str_array36);
    boolean b39 = treeset_str34.retainAll((java.util.Collection<java.lang.String>)arraylist_str37);
    java.util.TreeSet<java.lang.String> treeset_str40 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str41 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str40);
    java.util.SortedSet<java.lang.String> sortedset_str43 = treeset_str41.tailSet("");
    boolean b44 = treeset_str34.equals((java.lang.Object)treeset_str41);
    boolean b46 = treeset_str41.add("[hi!]");
    treeset_str41.clear();
    java.util.SortedSet<java.lang.String> sortedset_str49 = treeset_str41.headSet("[, hi!]");
    boolean b50 = treeset_str0.equals((java.lang.Object)treeset_str41);
    java.util.TreeSet<java.lang.String> treeset_str51 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str52 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str51);
    java.util.Iterator<java.lang.String> iterator_str53 = treeset_str52.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str54 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array56 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str57 = new java.util.ArrayList<java.lang.String>();
    boolean b58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str57, str_array56);
    boolean b59 = treeset_str54.retainAll((java.util.Collection<java.lang.String>)arraylist_str57);
    boolean b61 = treeset_str54.add("hi!");
    boolean b62 = treeset_str52.contains((java.lang.Object)"hi!");
    java.lang.String str64 = treeset_str52.ceiling("hi!");
    java.util.SortedSet<java.lang.String> sortedset_str66 = treeset_str52.tailSet("");
    java.util.stream.Stream<java.lang.String> stream_str67 = treeset_str52.stream();
    java.util.TreeSet<java.lang.String> treeset_str68 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str52);
    java.util.TreeSet<java.lang.String> treeset_str69 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str68);
    // The following exception was thrown during execution in test generation
    try {
    boolean b70 = treeset_str41.contains((java.lang.Object)treeset_str69);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str67);

  }

  @Test
  public void test414() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test414"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str0.iterator();
    java.lang.String str27 = treeset_str0.lower("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str30 = treeset_str0.tailSet("[]", false);
    int i31 = treeset_str0.size();
    java.lang.String str32 = treeset_str0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "[]"+ "'", str32.equals("[]"));

  }

  @Test
  public void test415() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test415"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str0.iterator();
    java.lang.String str27 = treeset_str0.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str30 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str29);
    java.util.TreeSet<java.lang.String> treeset_str31 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array33 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str34 = new java.util.ArrayList<java.lang.String>();
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str34, str_array33);
    boolean b36 = treeset_str31.retainAll((java.util.Collection<java.lang.String>)arraylist_str34);
    boolean b38 = treeset_str31.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str39 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str40 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str39);
    java.util.SortedSet<java.lang.String> sortedset_str42 = treeset_str40.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str45 = treeset_str40.headSet("", false);
    boolean b46 = treeset_str31.retainAll((java.util.Collection<java.lang.String>)navigableset_str45);
    boolean b47 = treeset_str30.retainAll((java.util.Collection<java.lang.String>)navigableset_str45);
    boolean b48 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)treeset_str30);
    java.util.Iterator<java.lang.String> iterator_str49 = treeset_str30.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str49);

  }

  @Test
  public void test416() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test416"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.lang.String str7 = treeset_str3.ceiling("[hi!]");
    java.util.Spliterator<java.lang.String> spliterator_str8 = treeset_str3.spliterator();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str12, str_array11);
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str12.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str15 = treeset_str12.iterator();
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str16);
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array20 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str21 = new java.util.ArrayList<java.lang.String>();
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str21, str_array20);
    boolean b23 = treeset_str18.retainAll((java.util.Collection<java.lang.String>)arraylist_str21);
    boolean b25 = treeset_str18.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str26 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str27 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str26);
    java.util.SortedSet<java.lang.String> sortedset_str29 = treeset_str27.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str32 = treeset_str27.headSet("", false);
    boolean b33 = treeset_str18.retainAll((java.util.Collection<java.lang.String>)navigableset_str32);
    boolean b34 = treeset_str17.retainAll((java.util.Collection<java.lang.String>)navigableset_str32);
    boolean b35 = treeset_str12.removeAll((java.util.Collection<java.lang.String>)treeset_str17);
    boolean b37 = treeset_str17.add("[hi!]");
    java.util.NavigableSet<java.lang.String> navigableset_str40 = treeset_str17.headSet("", false);
    boolean b41 = treeset_str3.remove((java.lang.Object)"");
    java.lang.String str42 = treeset_str3.first();
    java.lang.String str44 = treeset_str3.floor("[[]]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hi!"+ "'", str7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "hi!"+ "'", str42.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str44);

  }

  @Test
  public void test417() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test417"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Spliterator<java.lang.String> spliterator_str7 = treeset_str0.spliterator();
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str0.tailSet("[hi!]");
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str0.tailSet("[]");
    java.lang.String str13 = treeset_str0.higher("[[hi!]]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);

  }

  @Test
  public void test418() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test418"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str0.tailSet("hi!", true);
    java.lang.String str12 = treeset_str0.higher("[hi!]");
    java.util.SortedSet<java.lang.String> sortedset_str14 = treeset_str0.tailSet("[[]]");
    java.util.Spliterator<java.lang.String> spliterator_str15 = treeset_str0.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!"+ "'", str12.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str15);

  }

  @Test
  public void test419() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test419"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str26 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str25);
    java.util.Iterator<java.lang.String> iterator_str27 = treeset_str26.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array30 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str31 = new java.util.ArrayList<java.lang.String>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str31, str_array30);
    boolean b33 = treeset_str28.retainAll((java.util.Collection<java.lang.String>)arraylist_str31);
    boolean b35 = treeset_str28.add("hi!");
    boolean b36 = treeset_str26.contains((java.lang.Object)"hi!");
    java.lang.String str38 = treeset_str26.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str43 = treeset_str26.subSet("[hi!]", true, "[hi!]", true);
    boolean b44 = treeset_str0.containsAll((java.util.Collection<java.lang.String>)treeset_str26);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str45 = treeset_str0.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);

  }

  @Test
  public void test420() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test420"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b25 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b26 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str8);
    java.util.TreeSet<java.lang.String> treeset_str27 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array29 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str30 = new java.util.ArrayList<java.lang.String>();
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str30, str_array29);
    boolean b32 = treeset_str27.retainAll((java.util.Collection<java.lang.String>)arraylist_str30);
    java.lang.String str33 = treeset_str27.pollLast();
    java.util.Iterator<java.lang.String> iterator_str34 = treeset_str27.descendingIterator();
    java.lang.String[] str_array37 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str38 = new java.util.TreeSet<java.lang.String>();
    boolean b39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str38, str_array37);
    java.util.NavigableSet<java.lang.String> navigableset_str40 = treeset_str38.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str41 = treeset_str38.iterator();
    boolean b42 = treeset_str27.equals((java.lang.Object)iterator_str41);
    java.util.Iterator<java.lang.String> iterator_str43 = treeset_str27.iterator();
    boolean b44 = treeset_str8.equals((java.lang.Object)treeset_str27);
    java.util.TreeSet<java.lang.String> treeset_str45 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str8);
    java.lang.String str47 = treeset_str8.ceiling("[hi!]");
    java.lang.String str49 = treeset_str8.floor("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str49);

  }

  @Test
  public void test421() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test421"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.lang.String str8 = treeset_str0.toString();
    java.util.Spliterator<java.lang.String> spliterator_str9 = treeset_str0.spliterator();
    java.util.NavigableSet<java.lang.String> navigableset_str12 = treeset_str0.headSet("hi!", false);
    java.util.Spliterator<java.lang.String> spliterator_str13 = treeset_str0.spliterator();
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str0.headSet("[]", true);
    java.util.Spliterator<java.lang.String> spliterator_str17 = treeset_str0.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "[hi!]"+ "'", str8.equals("[hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str17);

  }

  @Test
  public void test422() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test422"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("", false);
    java.lang.String str7 = treeset_str1.pollLast();
    boolean b8 = treeset_str1.isEmpty();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    java.util.stream.Stream<java.lang.String> stream_str15 = treeset_str9.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str17 = treeset_str9.headSet("");
    java.util.stream.Stream<java.lang.String> stream_str18 = treeset_str9.parallelStream();
    boolean b19 = treeset_str1.equals((java.lang.Object)stream_str18);
    java.util.TreeSet<java.lang.String> treeset_str20 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str20);
    java.util.Comparator<? super java.lang.String> comparator_wildcard22 = treeset_str20.comparator();
    java.util.SortedSet<java.lang.String> sortedset_str25 = treeset_str20.subSet("[hi!]", "[hi!]");
    boolean b26 = treeset_str1.removeAll((java.util.Collection<java.lang.String>)treeset_str20);
    java.util.Iterator<java.lang.String> iterator_str27 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str28);
    java.util.SortedSet<java.lang.String> sortedset_str31 = treeset_str29.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str32 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array34 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str35 = new java.util.ArrayList<java.lang.String>();
    boolean b36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str35, str_array34);
    boolean b37 = treeset_str32.retainAll((java.util.Collection<java.lang.String>)arraylist_str35);
    boolean b38 = treeset_str29.retainAll((java.util.Collection<java.lang.String>)treeset_str32);
    java.lang.String str40 = treeset_str32.higher("");
    java.util.TreeSet<java.lang.String> treeset_str41 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array43 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str44 = new java.util.ArrayList<java.lang.String>();
    boolean b45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str44, str_array43);
    boolean b46 = treeset_str41.retainAll((java.util.Collection<java.lang.String>)arraylist_str44);
    java.util.TreeSet<java.lang.String> treeset_str47 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str41);
    boolean b48 = treeset_str32.removeAll((java.util.Collection<java.lang.String>)treeset_str41);
    java.util.Comparator<? super java.lang.String> comparator_wildcard49 = treeset_str41.comparator();
    java.util.NavigableSet<java.lang.String> navigableset_str52 = treeset_str41.tailSet("[]", true);
    boolean b53 = treeset_str1.equals((java.lang.Object)navigableset_str52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);

  }

  @Test
  public void test423() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test423"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("", false);
    java.lang.String str7 = treeset_str1.pollLast();
    boolean b8 = treeset_str1.isEmpty();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    java.util.stream.Stream<java.lang.String> stream_str15 = treeset_str9.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str17 = treeset_str9.headSet("");
    java.util.stream.Stream<java.lang.String> stream_str18 = treeset_str9.parallelStream();
    boolean b19 = treeset_str1.equals((java.lang.Object)stream_str18);
    java.util.TreeSet<java.lang.String> treeset_str20 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str20);
    java.util.Comparator<? super java.lang.String> comparator_wildcard22 = treeset_str20.comparator();
    java.util.SortedSet<java.lang.String> sortedset_str25 = treeset_str20.subSet("[hi!]", "[hi!]");
    boolean b26 = treeset_str1.removeAll((java.util.Collection<java.lang.String>)treeset_str20);
    boolean b27 = treeset_str1.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);

  }

  @Test
  public void test424() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test424"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("hi!", true);
    treeset_str1.clear();
    java.util.Iterator<java.lang.String> iterator_str8 = treeset_str1.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str8);

  }

  @Test
  public void test425() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test425"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    boolean b20 = treeset_str13.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str21);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str22.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str22.headSet("", false);
    boolean b28 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b29 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b30 = treeset_str0.equals((java.lang.Object)b29);
    java.lang.String str32 = treeset_str0.ceiling("[hi!]");
    java.util.Iterator<java.lang.String> iterator_str33 = treeset_str0.iterator();
    java.util.SortedSet<java.lang.String> sortedset_str36 = treeset_str0.subSet("", "hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str39 = treeset_str0.tailSet("[[]]", false);
    java.util.Iterator<java.lang.String> iterator_str40 = treeset_str0.iterator();
    java.util.Comparator<? super java.lang.String> comparator_wildcard41 = treeset_str0.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard41);

  }

  @Test
  public void test426() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test426"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.Spliterator<java.lang.String> spliterator_str8 = treeset_str0.spliterator();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str12, str_array11);
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str12.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str15 = treeset_str12.iterator();
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str16);
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array20 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str21 = new java.util.ArrayList<java.lang.String>();
    boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str21, str_array20);
    boolean b23 = treeset_str18.retainAll((java.util.Collection<java.lang.String>)arraylist_str21);
    boolean b25 = treeset_str18.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str26 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str27 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str26);
    java.util.SortedSet<java.lang.String> sortedset_str29 = treeset_str27.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str32 = treeset_str27.headSet("", false);
    boolean b33 = treeset_str18.retainAll((java.util.Collection<java.lang.String>)navigableset_str32);
    boolean b34 = treeset_str17.retainAll((java.util.Collection<java.lang.String>)navigableset_str32);
    boolean b35 = treeset_str12.removeAll((java.util.Collection<java.lang.String>)treeset_str17);
    java.util.TreeSet<java.lang.String> treeset_str36 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array38 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str39 = new java.util.ArrayList<java.lang.String>();
    boolean b40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str39, str_array38);
    boolean b41 = treeset_str36.retainAll((java.util.Collection<java.lang.String>)arraylist_str39);
    java.lang.String str42 = treeset_str36.pollLast();
    java.util.Iterator<java.lang.String> iterator_str43 = treeset_str36.descendingIterator();
    java.lang.String[] str_array46 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str47 = new java.util.TreeSet<java.lang.String>();
    boolean b48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str47, str_array46);
    java.util.NavigableSet<java.lang.String> navigableset_str49 = treeset_str47.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str50 = treeset_str47.iterator();
    boolean b51 = treeset_str36.equals((java.lang.Object)iterator_str50);
    java.util.Iterator<java.lang.String> iterator_str52 = treeset_str36.iterator();
    boolean b53 = treeset_str17.equals((java.lang.Object)treeset_str36);
    java.util.SortedSet<java.lang.String> sortedset_str55 = treeset_str17.tailSet("");
    // The following exception was thrown during execution in test generation
    try {
    boolean b56 = treeset_str0.contains((java.lang.Object)treeset_str17);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str55);

  }

  @Test
  public void test427() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test427"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str4 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array6 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str7 = new java.util.ArrayList<java.lang.String>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str7, str_array6);
    boolean b9 = treeset_str4.retainAll((java.util.Collection<java.lang.String>)arraylist_str7);
    boolean b10 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str4);
    java.lang.String[] str_array13 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str14, str_array13);
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str14.descendingSet();
    java.lang.String str18 = treeset_str14.ceiling("[hi!]");
    boolean b19 = treeset_str4.remove((java.lang.Object)"[hi!]");
    java.util.NavigableSet<java.lang.String> navigableset_str24 = treeset_str4.subSet("", false, "hi!", true);
    java.lang.String[] str_array27 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>();
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str28, str_array27);
    java.util.NavigableSet<java.lang.String> navigableset_str30 = treeset_str28.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str31 = treeset_str28.iterator();
    java.util.TreeSet<java.lang.String> treeset_str32 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str33 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str32);
    java.util.TreeSet<java.lang.String> treeset_str34 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array36 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str37 = new java.util.ArrayList<java.lang.String>();
    boolean b38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str37, str_array36);
    boolean b39 = treeset_str34.retainAll((java.util.Collection<java.lang.String>)arraylist_str37);
    boolean b41 = treeset_str34.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str42 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str43 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str42);
    java.util.SortedSet<java.lang.String> sortedset_str45 = treeset_str43.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str48 = treeset_str43.headSet("", false);
    boolean b49 = treeset_str34.retainAll((java.util.Collection<java.lang.String>)navigableset_str48);
    boolean b50 = treeset_str33.retainAll((java.util.Collection<java.lang.String>)navigableset_str48);
    boolean b51 = treeset_str28.removeAll((java.util.Collection<java.lang.String>)treeset_str33);
    boolean b53 = treeset_str33.add("[hi!]");
    boolean b54 = treeset_str4.equals((java.lang.Object)b53);
    java.util.Iterator<java.lang.String> iterator_str55 = treeset_str4.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!"+ "'", str18.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str55);

  }

  @Test
  public void test428() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test428"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b25 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b26 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str8);
    boolean b28 = treeset_str8.add("[hi!]");
    java.util.NavigableSet<java.lang.String> navigableset_str31 = treeset_str8.headSet("", false);
    java.util.TreeSet<java.lang.String> treeset_str32 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array34 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str35 = new java.util.ArrayList<java.lang.String>();
    boolean b36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str35, str_array34);
    boolean b37 = treeset_str32.retainAll((java.util.Collection<java.lang.String>)arraylist_str35);
    java.util.stream.Stream<java.lang.String> stream_str38 = treeset_str32.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str40 = treeset_str32.headSet("");
    boolean b41 = treeset_str8.removeAll((java.util.Collection<java.lang.String>)treeset_str32);
    int i42 = treeset_str32.size();
    java.util.Iterator<java.lang.String> iterator_str43 = treeset_str32.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str46 = treeset_str32.headSet("[]", true);
    java.util.SortedSet<java.lang.String> sortedset_str48 = treeset_str32.headSet("[hi!]");
    treeset_str32.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str48);

  }

  @Test
  public void test429() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test429"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str1.iterator();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str1);
    java.lang.String str20 = treeset_str1.higher("[, hi!]");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str1);
    java.util.Comparator<? super java.lang.String> comparator_wildcard22 = treeset_str1.comparator();
    java.util.Comparator<? super java.lang.String> comparator_wildcard23 = treeset_str1.comparator();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str24 = treeset_str1.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard23);

  }

  @Test
  public void test430() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test430"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str1.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str1.descendingSet();
    java.lang.String str20 = treeset_str1.lower("[]");
    java.lang.String str21 = treeset_str1.pollFirst();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array24 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str25 = new java.util.ArrayList<java.lang.String>();
    boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str25, str_array24);
    boolean b27 = treeset_str22.retainAll((java.util.Collection<java.lang.String>)arraylist_str25);
    java.util.stream.Stream<java.lang.String> stream_str28 = treeset_str22.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str30 = treeset_str22.headSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str35 = treeset_str22.subSet("[hi!]", true, "hi!", false);
    java.util.TreeSet<java.lang.String> treeset_str36 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str37 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str36);
    java.lang.String str39 = treeset_str37.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str42 = treeset_str37.headSet("hi!", true);
    boolean b43 = treeset_str22.removeAll((java.util.Collection<java.lang.String>)treeset_str37);
    java.util.TreeSet<java.lang.String> treeset_str44 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str45 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str44);
    java.lang.String str47 = treeset_str45.lower("");
    java.lang.String str48 = treeset_str45.pollFirst();
    java.util.TreeSet<java.lang.String> treeset_str49 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str45);
    java.util.SortedSet<java.lang.String> sortedset_str52 = treeset_str45.subSet("[]", "[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str53 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array55 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str56 = new java.util.ArrayList<java.lang.String>();
    boolean b57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str56, str_array55);
    boolean b58 = treeset_str53.retainAll((java.util.Collection<java.lang.String>)arraylist_str56);
    java.util.TreeSet<java.lang.String> treeset_str59 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array61 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str62 = new java.util.ArrayList<java.lang.String>();
    boolean b63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str62, str_array61);
    boolean b64 = treeset_str59.retainAll((java.util.Collection<java.lang.String>)arraylist_str62);
    java.util.TreeSet<java.lang.String> treeset_str65 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array67 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str68 = new java.util.ArrayList<java.lang.String>();
    boolean b69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str68, str_array67);
    boolean b70 = treeset_str65.retainAll((java.util.Collection<java.lang.String>)arraylist_str68);
    java.util.ArrayList[] arrayList_array72 = new java.util.ArrayList[ 3 ];
    @SuppressWarnings("unchecked")
    java.util.ArrayList<java.lang.String>[] arraylist_str_array73 = (java.util.ArrayList<java.lang.String>[])arrayList_array72;
    arraylist_str_array73[0] = arraylist_str56;
    arraylist_str_array73[1] = arraylist_str62;
    arraylist_str_array73[2] = arraylist_str68;
    java.util.ArrayList<java.lang.String>[] arraylist_str_array80 = treeset_str45.toArray(arraylist_str_array73);
    java.util.AbstractList<java.lang.String>[] abstractlist_str_array81 = treeset_str22.toArray((java.util.AbstractList<java.lang.String>[])arraylist_str_array73);
    java.util.List<java.lang.String>[] list_str_array82 = treeset_str1.toArray((java.util.List<java.lang.String>[])arraylist_str_array73);
    java.lang.Object obj83 = treeset_str1.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arrayList_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(abstractlist_str_array81);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_str_array82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj83);

  }

  @Test
  public void test431() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test431"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str1.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str1.descendingSet();
    java.lang.String str20 = treeset_str1.lower("[]");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array23 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str24 = new java.util.ArrayList<java.lang.String>();
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str24, str_array23);
    boolean b26 = treeset_str21.retainAll((java.util.Collection<java.lang.String>)arraylist_str24);
    java.util.TreeSet<java.lang.String> treeset_str27 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array29 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str30 = new java.util.ArrayList<java.lang.String>();
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str30, str_array29);
    boolean b32 = treeset_str27.retainAll((java.util.Collection<java.lang.String>)arraylist_str30);
    java.util.TreeSet<java.lang.String> treeset_str33 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array35 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str36 = new java.util.ArrayList<java.lang.String>();
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str36, str_array35);
    boolean b38 = treeset_str33.retainAll((java.util.Collection<java.lang.String>)arraylist_str36);
    java.util.TreeSet<java.lang.String> treeset_str39 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array41 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str42 = new java.util.ArrayList<java.lang.String>();
    boolean b43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str42, str_array41);
    boolean b44 = treeset_str39.retainAll((java.util.Collection<java.lang.String>)arraylist_str42);
    java.util.TreeSet<java.lang.String> treeset_str45 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array47 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str48 = new java.util.ArrayList<java.lang.String>();
    boolean b49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str48, str_array47);
    boolean b50 = treeset_str45.retainAll((java.util.Collection<java.lang.String>)arraylist_str48);
    java.util.ArrayList[] arrayList_array52 = new java.util.ArrayList[ 5 ];
    @SuppressWarnings("unchecked")
    java.util.ArrayList<java.lang.String>[] arraylist_str_array53 = (java.util.ArrayList<java.lang.String>[])arrayList_array52;
    arraylist_str_array53[0] = arraylist_str24;
    arraylist_str_array53[1] = arraylist_str30;
    arraylist_str_array53[2] = arraylist_str36;
    arraylist_str_array53[3] = arraylist_str42;
    arraylist_str_array53[4] = arraylist_str48;
    java.util.ArrayList<java.lang.String>[] arraylist_str_array64 = treeset_str1.toArray(arraylist_str_array53);
    java.lang.String str66 = treeset_str1.ceiling("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arrayList_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str66);

  }

  @Test
  public void test432() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test432"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str1.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str1.descendingSet();
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)navigableset_str18);
    java.util.TreeSet<java.lang.String> treeset_str20 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str20);
    java.util.SortedSet<java.lang.String> sortedset_str23 = treeset_str20.tailSet("[hi!]");
    java.lang.Object obj24 = treeset_str20.clone();
    boolean b25 = treeset_str19.retainAll((java.util.Collection<java.lang.String>)treeset_str20);
    java.lang.Object[] obj_array26 = treeset_str20.toArray();
    java.util.TreeSet<java.lang.String> treeset_str27 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str27);
    java.util.Comparator<? super java.lang.String> comparator_wildcard29 = treeset_str27.comparator();
    java.util.SortedSet<java.lang.String> sortedset_str32 = treeset_str27.subSet("[hi!]", "[hi!]");
    boolean b33 = treeset_str27.isEmpty();
    treeset_str27.clear();
    java.util.TreeSet<java.lang.String> treeset_str35 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str36 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str35);
    java.util.Iterator<java.lang.String> iterator_str37 = treeset_str36.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str38 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array40 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str41 = new java.util.ArrayList<java.lang.String>();
    boolean b42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str41, str_array40);
    boolean b43 = treeset_str38.retainAll((java.util.Collection<java.lang.String>)arraylist_str41);
    boolean b45 = treeset_str38.add("hi!");
    boolean b46 = treeset_str36.contains((java.lang.Object)"hi!");
    java.lang.String str48 = treeset_str36.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str51 = treeset_str36.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str52 = treeset_str36.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str53 = treeset_str36.descendingSet();
    java.util.TreeSet<java.lang.String> treeset_str54 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)navigableset_str53);
    boolean b55 = treeset_str27.equals((java.lang.Object)navigableset_str53);
    boolean b56 = treeset_str20.contains((java.lang.Object)b55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);

  }

  @Test
  public void test433() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test433"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str0.iterator();
    java.lang.String str27 = treeset_str0.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    int i29 = treeset_str0.size();
    // The following exception was thrown during execution in test generation
    try {
    java.util.NavigableSet<java.lang.String> navigableset_str34 = treeset_str0.subSet("[[hi!]]", false, "[[]]", true);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);

  }

  @Test
  public void test434() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test434"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str1.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str1.descendingSet();
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)navigableset_str18);
    java.util.Iterator<java.lang.String> iterator_str20 = treeset_str19.descendingIterator();
    java.lang.String str22 = treeset_str19.higher("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str19.subSet("[]", false, "[]", false);
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array30 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str31 = new java.util.ArrayList<java.lang.String>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str31, str_array30);
    boolean b33 = treeset_str28.retainAll((java.util.Collection<java.lang.String>)arraylist_str31);
    java.util.TreeSet<java.lang.String> treeset_str34 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str35 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str34);
    java.util.SortedSet<java.lang.String> sortedset_str37 = treeset_str35.tailSet("");
    boolean b38 = treeset_str28.equals((java.lang.Object)treeset_str35);
    java.util.TreeSet<java.lang.String> treeset_str39 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str40 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str39);
    java.util.TreeSet<java.lang.String> treeset_str41 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array43 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str44 = new java.util.ArrayList<java.lang.String>();
    boolean b45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str44, str_array43);
    boolean b46 = treeset_str41.retainAll((java.util.Collection<java.lang.String>)arraylist_str44);
    boolean b48 = treeset_str41.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str49 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str50 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str49);
    java.util.SortedSet<java.lang.String> sortedset_str52 = treeset_str50.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str55 = treeset_str50.headSet("", false);
    boolean b56 = treeset_str41.retainAll((java.util.Collection<java.lang.String>)navigableset_str55);
    boolean b57 = treeset_str40.retainAll((java.util.Collection<java.lang.String>)navigableset_str55);
    boolean b58 = treeset_str28.equals((java.lang.Object)b57);
    java.lang.String str60 = treeset_str28.ceiling("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str61 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str28);
    java.util.NavigableSet<java.lang.String> navigableset_str64 = treeset_str28.tailSet("", true);
    java.lang.String str65 = treeset_str28.pollFirst();
    // The following exception was thrown during execution in test generation
    try {
    boolean b66 = treeset_str19.contains((java.lang.Object)treeset_str28);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str65);

  }

  @Test
  public void test435() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test435"); }

    java.lang.String[] str_array1 = new java.lang.String[] { "" };
    java.util.TreeSet<java.lang.String> treeset_str2 = new java.util.TreeSet<java.lang.String>();
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str2, str_array1);
    int i4 = treeset_str2.size();
    java.util.TreeSet<java.lang.String> treeset_str5 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str2);
    java.lang.String str7 = treeset_str5.higher("");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array10 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str11 = new java.util.ArrayList<java.lang.String>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str11, str_array10);
    boolean b13 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)arraylist_str11);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str14);
    java.util.SortedSet<java.lang.String> sortedset_str17 = treeset_str15.tailSet("");
    boolean b18 = treeset_str8.equals((java.lang.Object)treeset_str15);
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str20 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str19);
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array23 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str24 = new java.util.ArrayList<java.lang.String>();
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str24, str_array23);
    boolean b26 = treeset_str21.retainAll((java.util.Collection<java.lang.String>)arraylist_str24);
    boolean b28 = treeset_str21.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str30 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str29);
    java.util.SortedSet<java.lang.String> sortedset_str32 = treeset_str30.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str35 = treeset_str30.headSet("", false);
    boolean b36 = treeset_str21.retainAll((java.util.Collection<java.lang.String>)navigableset_str35);
    boolean b37 = treeset_str20.retainAll((java.util.Collection<java.lang.String>)navigableset_str35);
    boolean b38 = treeset_str8.equals((java.lang.Object)b37);
    boolean b40 = treeset_str8.add("[]");
    boolean b41 = treeset_str5.retainAll((java.util.Collection<java.lang.String>)treeset_str8);
    java.util.NavigableSet<java.lang.String> navigableset_str44 = treeset_str8.headSet("[]", false);
    boolean b46 = treeset_str8.add("[, hi!]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);

  }

  @Test
  public void test436() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test436"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.floor("[]");
    java.lang.String str14 = treeset_str1.toString();
    java.util.Spliterator<java.lang.String> spliterator_str15 = treeset_str1.spliterator();
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str1.tailSet("", false);
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str20 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str19);
    java.util.SortedSet<java.lang.String> sortedset_str22 = treeset_str20.tailSet("");
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str20.headSet("[[hi!]]");
    boolean b25 = treeset_str1.equals((java.lang.Object)treeset_str20);
    java.util.NavigableSet<java.lang.String> navigableset_str28 = treeset_str20.headSet("[]", false);
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array31 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str32 = new java.util.ArrayList<java.lang.String>();
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str32, str_array31);
    boolean b34 = treeset_str29.retainAll((java.util.Collection<java.lang.String>)arraylist_str32);
    boolean b36 = treeset_str29.add("hi!");
    java.lang.String str37 = treeset_str29.toString();
    java.util.Spliterator<java.lang.String> spliterator_str38 = treeset_str29.spliterator();
    java.util.NavigableSet<java.lang.String> navigableset_str41 = treeset_str29.headSet("hi!", false);
    java.util.Spliterator<java.lang.String> spliterator_str42 = treeset_str29.spliterator();
    java.util.SortedSet<java.lang.String> sortedset_str44 = treeset_str29.tailSet("[]");
    boolean b45 = treeset_str20.addAll((java.util.Collection<java.lang.String>)treeset_str29);
    java.util.TreeSet<java.lang.String> treeset_str46 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array48 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str49 = new java.util.ArrayList<java.lang.String>();
    boolean b50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str49, str_array48);
    boolean b51 = treeset_str46.retainAll((java.util.Collection<java.lang.String>)arraylist_str49);
    boolean b53 = treeset_str46.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str56 = treeset_str46.tailSet("hi!", true);
    java.lang.String str58 = treeset_str46.higher("[hi!]");
    java.util.NavigableSet<java.lang.String> navigableset_str61 = treeset_str46.headSet("[[]]", true);
    boolean b62 = treeset_str29.equals((java.lang.Object)"[[]]");
    treeset_str29.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "[]"+ "'", str14.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "[hi!]"+ "'", str37.equals("[hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str58 + "' != '" + "hi!"+ "'", str58.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);

  }

  @Test
  public void test437() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test437"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str8 = treeset_str0.headSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str0.subSet("[hi!]", true, "hi!", false);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str14);
    java.lang.String str17 = treeset_str15.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str20 = treeset_str15.headSet("hi!", true);
    boolean b21 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str15);
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str0.descendingIterator();
    boolean b24 = treeset_str0.add("[]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);

  }

  @Test
  public void test438() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test438"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("", false);
    int i7 = treeset_str1.size();
    java.lang.String str9 = treeset_str1.ceiling("[]");
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str1.descendingSet();
    java.lang.String str12 = treeset_str1.ceiling("[[]]");
    java.lang.String[] str_array15 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str16, str_array15);
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str16.descendingSet();
    // The following exception was thrown during execution in test generation
    try {
    boolean b19 = treeset_str1.contains((java.lang.Object)treeset_str16);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);

  }

  @Test
  public void test439() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test439"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str4 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array6 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str7 = new java.util.ArrayList<java.lang.String>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str7, str_array6);
    boolean b9 = treeset_str4.retainAll((java.util.Collection<java.lang.String>)arraylist_str7);
    boolean b10 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str4);
    java.lang.String str12 = treeset_str4.higher("");
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str13);
    boolean b20 = treeset_str4.removeAll((java.util.Collection<java.lang.String>)treeset_str13);
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array23 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str24 = new java.util.ArrayList<java.lang.String>();
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str24, str_array23);
    boolean b26 = treeset_str21.retainAll((java.util.Collection<java.lang.String>)arraylist_str24);
    boolean b28 = treeset_str21.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str30 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str29);
    java.util.SortedSet<java.lang.String> sortedset_str32 = treeset_str30.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str35 = treeset_str30.headSet("", false);
    boolean b36 = treeset_str21.retainAll((java.util.Collection<java.lang.String>)navigableset_str35);
    java.lang.String[] str_array39 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str40 = new java.util.TreeSet<java.lang.String>();
    boolean b41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str40, str_array39);
    java.util.NavigableSet<java.lang.String> navigableset_str42 = treeset_str40.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str43 = treeset_str40.iterator();
    java.util.Iterator<java.lang.String> iterator_str44 = treeset_str40.iterator();
    boolean b45 = treeset_str21.removeAll((java.util.Collection<java.lang.String>)treeset_str40);
    java.util.Iterator<java.lang.String> iterator_str46 = treeset_str21.iterator();
    java.lang.String str48 = treeset_str21.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str49 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str21);
    int i50 = treeset_str21.size();
    int i51 = treeset_str21.size();
    java.lang.Object obj52 = treeset_str21.clone();
    boolean b53 = treeset_str13.addAll((java.util.Collection<java.lang.String>)treeset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i50 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i51 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);

  }

  @Test
  public void test440() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test440"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b25 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b26 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str28 = treeset_str8.tailSet("hi!");
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>(sortedset_str28);
    treeset_str29.clear();
    java.util.TreeSet<java.lang.String> treeset_str31 = new java.util.TreeSet<java.lang.String>();
    treeset_str31.clear();
    // The following exception was thrown during execution in test generation
    try {
    boolean b33 = treeset_str29.remove((java.lang.Object)treeset_str31);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str28);

  }

  @Test
  public void test441() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test441"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str0.subSet("", true, "[hi!]", true);
    java.lang.Object obj7 = treeset_str0.clone();
    java.util.NavigableSet<java.lang.String> navigableset_str8 = treeset_str0.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str8);

  }

  @Test
  public void test442() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test442"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str9);
    java.util.SortedSet<java.lang.String> sortedset_str12 = treeset_str10.tailSet("");
    boolean b13 = treeset_str3.equals((java.lang.Object)treeset_str10);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str14);
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str19 = new java.util.ArrayList<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str19, str_array18);
    boolean b21 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)arraylist_str19);
    boolean b23 = treeset_str16.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str24 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str24);
    java.util.SortedSet<java.lang.String> sortedset_str27 = treeset_str25.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str30 = treeset_str25.headSet("", false);
    boolean b31 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)navigableset_str30);
    boolean b32 = treeset_str15.retainAll((java.util.Collection<java.lang.String>)navigableset_str30);
    boolean b33 = treeset_str3.equals((java.lang.Object)b32);
    java.lang.String str35 = treeset_str3.ceiling("[hi!]");
    boolean b36 = treeset_str1.addAll((java.util.Collection<java.lang.String>)treeset_str3);
    java.lang.String str38 = treeset_str1.floor("[]");
    java.util.Comparator<? super java.lang.String> comparator_wildcard39 = treeset_str1.comparator();
    java.util.TreeSet<java.lang.String> treeset_str40 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array42 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str43 = new java.util.ArrayList<java.lang.String>();
    boolean b44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str43, str_array42);
    boolean b45 = treeset_str40.retainAll((java.util.Collection<java.lang.String>)arraylist_str43);
    boolean b47 = treeset_str40.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str48 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str49 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str48);
    java.util.SortedSet<java.lang.String> sortedset_str51 = treeset_str49.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str54 = treeset_str49.headSet("", false);
    boolean b55 = treeset_str40.retainAll((java.util.Collection<java.lang.String>)navigableset_str54);
    java.lang.String[] str_array58 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str59 = new java.util.TreeSet<java.lang.String>();
    boolean b60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str59, str_array58);
    java.util.NavigableSet<java.lang.String> navigableset_str61 = treeset_str59.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str62 = treeset_str59.iterator();
    java.util.Iterator<java.lang.String> iterator_str63 = treeset_str59.iterator();
    boolean b64 = treeset_str40.removeAll((java.util.Collection<java.lang.String>)treeset_str59);
    java.util.Iterator<java.lang.String> iterator_str65 = treeset_str40.iterator();
    java.lang.String str67 = treeset_str40.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str68 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str40);
    java.util.NavigableSet<java.lang.String> navigableset_str71 = treeset_str68.headSet("[hi!]", true);
    boolean b72 = treeset_str1.removeAll((java.util.Collection<java.lang.String>)treeset_str68);
    java.lang.String str73 = treeset_str68.toString();
    java.util.Comparator<? super java.lang.String> comparator_wildcard74 = treeset_str68.comparator();
    boolean b76 = treeset_str68.add("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str73 + "' != '" + "[]"+ "'", str73.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b76 == true);

  }

  @Test
  public void test443() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test443"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str4 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array6 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str7 = new java.util.ArrayList<java.lang.String>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str7, str_array6);
    boolean b9 = treeset_str4.retainAll((java.util.Collection<java.lang.String>)arraylist_str7);
    boolean b10 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str4);
    java.lang.String str12 = treeset_str4.higher("");
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str13);
    boolean b20 = treeset_str4.removeAll((java.util.Collection<java.lang.String>)treeset_str13);
    java.lang.String str22 = treeset_str13.floor("hi!");
    java.lang.Object obj23 = treeset_str13.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj23);

  }

  @Test
  public void test444() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test444"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("hi!", true);
    treeset_str1.clear();
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str1.headSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str12 = treeset_str1.tailSet("[]", false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str12);

  }

  @Test
  public void test445() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test445"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str0.iterator();
    java.lang.String str27 = treeset_str0.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    java.util.NavigableSet<java.lang.String> navigableset_str31 = treeset_str0.headSet("[]", true);
    java.util.NavigableSet<java.lang.String> navigableset_str34 = treeset_str0.headSet("[]", true);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str35 = treeset_str0.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str34);

  }

  @Test
  public void test446() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test446"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b25 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b26 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str8);
    java.util.TreeSet<java.lang.String> treeset_str27 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array29 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str30 = new java.util.ArrayList<java.lang.String>();
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str30, str_array29);
    boolean b32 = treeset_str27.retainAll((java.util.Collection<java.lang.String>)arraylist_str30);
    java.lang.String str33 = treeset_str27.pollLast();
    java.util.Iterator<java.lang.String> iterator_str34 = treeset_str27.descendingIterator();
    java.lang.String[] str_array37 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str38 = new java.util.TreeSet<java.lang.String>();
    boolean b39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str38, str_array37);
    java.util.NavigableSet<java.lang.String> navigableset_str40 = treeset_str38.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str41 = treeset_str38.iterator();
    boolean b42 = treeset_str27.equals((java.lang.Object)iterator_str41);
    java.util.Iterator<java.lang.String> iterator_str43 = treeset_str27.iterator();
    boolean b44 = treeset_str8.equals((java.lang.Object)treeset_str27);
    java.util.SortedSet<java.lang.String> sortedset_str46 = treeset_str8.tailSet("");
    java.lang.String str47 = treeset_str8.pollFirst();
    java.util.SortedSet<java.lang.String> sortedset_str50 = treeset_str8.subSet("", "[, hi!]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str50);

  }

  @Test
  public void test447() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test447"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str0.subSet("", true, "[hi!]", true);
    java.util.NavigableSet<java.lang.String> navigableset_str11 = treeset_str0.subSet("", false, "hi!", false);
    java.lang.String str13 = treeset_str0.ceiling("");
    java.lang.String str14 = treeset_str0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "[]"+ "'", str14.equals("[]"));

  }

  @Test
  public void test448() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test448"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.lang.String str6 = treeset_str3.pollLast();
    java.util.stream.Stream<java.lang.String> stream_str7 = treeset_str3.stream();
    java.util.Iterator<java.lang.String> iterator_str8 = treeset_str3.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str9);
    java.lang.String str12 = treeset_str10.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str15 = treeset_str10.headSet("hi!", true);
    java.util.stream.Stream<java.lang.String> stream_str16 = treeset_str10.stream();
    java.util.Spliterator<java.lang.String> spliterator_str17 = treeset_str10.spliterator();
    boolean b18 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str10);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str19 = treeset_str10.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!"+ "'", str6.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);

  }

  @Test
  public void test449() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test449"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    boolean b4 = treeset_str1.isEmpty();
    boolean b6 = treeset_str1.add("[hi!]");
    java.lang.String str7 = treeset_str1.toString();
    java.lang.String str9 = treeset_str1.higher("");
    java.lang.String str11 = treeset_str1.ceiling("[]");
    java.util.Iterator<java.lang.String> iterator_str12 = treeset_str1.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "[[hi!]]"+ "'", str7.equals("[[hi!]]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[hi!]"+ "'", str9.equals("[hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "[hi!]"+ "'", str11.equals("[hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str12);

  }

  @Test
  public void test450() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test450"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("", false);
    int i7 = treeset_str1.size();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str1);
    java.util.NavigableSet<java.lang.String> navigableset_str11 = treeset_str1.tailSet("[, hi!]", true);
    int i12 = treeset_str1.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);

  }

  @Test
  public void test451() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test451"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Spliterator<java.lang.String> spliterator_str7 = treeset_str0.spliterator();
    java.util.NavigableSet<java.lang.String> navigableset_str12 = treeset_str0.subSet("[, hi!]", false, "[[hi!]]", true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str12);

  }

  @Test
  public void test452() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test452"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("", false);
    java.lang.String str7 = treeset_str1.pollLast();
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str1.tailSet("[, hi!]");
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str12, str_array11);
    int i14 = treeset_str12.size();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str12);
    java.lang.String str17 = treeset_str15.higher("");
    boolean b18 = treeset_str1.addAll((java.util.Collection<java.lang.String>)treeset_str15);
    java.lang.String str19 = treeset_str1.last();
    java.util.TreeSet<java.lang.String> treeset_str20 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str20);
    java.util.Comparator<? super java.lang.String> comparator_wildcard22 = treeset_str20.comparator();
    java.util.SortedSet<java.lang.String> sortedset_str25 = treeset_str20.subSet("[hi!]", "[hi!]");
    boolean b26 = treeset_str20.isEmpty();
    boolean b27 = treeset_str1.addAll((java.util.Collection<java.lang.String>)treeset_str20);
    boolean b29 = treeset_str20.add("[[]]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + ""+ "'", str19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);

  }

  @Test
  public void test453() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test453"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("", false);
    java.lang.String str7 = treeset_str1.pollLast();
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str1.tailSet("[, hi!]");
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str12, str_array11);
    int i14 = treeset_str12.size();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str12);
    java.lang.String str17 = treeset_str15.higher("");
    boolean b18 = treeset_str1.addAll((java.util.Collection<java.lang.String>)treeset_str15);
    java.lang.String str19 = treeset_str1.last();
    treeset_str1.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + ""+ "'", str19.equals(""));

  }

  @Test
  public void test454() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test454"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Spliterator<java.lang.String> spliterator_str7 = treeset_str0.spliterator();
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str0.tailSet("[hi!]");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str0.subSet("[, hi!]", true, "[[]]", false);
    java.util.stream.Stream<java.lang.String> stream_str15 = navigableset_str14.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str15);

  }

  @Test
  public void test455() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test455"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str0.tailSet("hi!", true);
    java.util.Iterator<java.lang.String> iterator_str11 = treeset_str0.iterator();
    java.lang.Object obj12 = treeset_str0.clone();
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str20 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str19);
    java.util.SortedSet<java.lang.String> sortedset_str22 = treeset_str20.tailSet("");
    boolean b23 = treeset_str13.equals((java.lang.Object)treeset_str20);
    java.util.stream.Stream<java.lang.String> stream_str24 = treeset_str13.stream();
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array27 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str28 = new java.util.ArrayList<java.lang.String>();
    boolean b29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str28, str_array27);
    boolean b30 = treeset_str25.retainAll((java.util.Collection<java.lang.String>)arraylist_str28);
    java.util.TreeSet<java.lang.String> treeset_str31 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str32 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str31);
    java.util.SortedSet<java.lang.String> sortedset_str34 = treeset_str32.tailSet("");
    boolean b35 = treeset_str25.equals((java.lang.Object)treeset_str32);
    java.util.stream.Stream<java.lang.String> stream_str36 = treeset_str25.stream();
    java.util.Iterator<java.lang.String> iterator_str37 = treeset_str25.descendingIterator();
    java.util.NavigableSet<java.lang.String> navigableset_str38 = treeset_str25.descendingSet();
    boolean b39 = treeset_str13.addAll((java.util.Collection<java.lang.String>)navigableset_str38);
    int i40 = treeset_str13.size();
    boolean b41 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str13);
    java.util.Iterator<java.lang.String> iterator_str42 = treeset_str0.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str42);

  }

  @Test
  public void test456() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test456"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.util.SortedSet<java.lang.String> sortedset_str8 = treeset_str0.headSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str0.subSet("[hi!]", true, "hi!", false);
    int i14 = treeset_str0.size();
    java.util.Iterator<java.lang.String> iterator_str15 = treeset_str0.descendingIterator();
    java.lang.String str17 = treeset_str0.lower("hi!");
    java.lang.String str19 = treeset_str0.ceiling("[]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str19);

  }

  @Test
  public void test457() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test457"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str26 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str25);
    java.util.Iterator<java.lang.String> iterator_str27 = treeset_str26.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array30 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str31 = new java.util.ArrayList<java.lang.String>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str31, str_array30);
    boolean b33 = treeset_str28.retainAll((java.util.Collection<java.lang.String>)arraylist_str31);
    boolean b35 = treeset_str28.add("hi!");
    boolean b36 = treeset_str26.contains((java.lang.Object)"hi!");
    java.lang.String str38 = treeset_str26.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str43 = treeset_str26.subSet("[hi!]", true, "[hi!]", true);
    boolean b44 = treeset_str0.containsAll((java.util.Collection<java.lang.String>)treeset_str26);
    java.util.Iterator<java.lang.String> iterator_str45 = treeset_str0.iterator();
    java.util.SortedSet<java.lang.String> sortedset_str47 = treeset_str0.headSet("[]");
    java.lang.String str49 = treeset_str0.floor("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str49);

  }

  @Test
  public void test458() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test458"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str0.tailSet("hi!", true);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    java.util.NavigableSet<java.lang.String> navigableset_str12 = treeset_str0.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str12);

  }

  @Test
  public void test459() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test459"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b25 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b26 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str8);
    java.util.TreeSet<java.lang.String> treeset_str27 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array29 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str30 = new java.util.ArrayList<java.lang.String>();
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str30, str_array29);
    boolean b32 = treeset_str27.retainAll((java.util.Collection<java.lang.String>)arraylist_str30);
    java.lang.String str33 = treeset_str27.pollLast();
    java.util.Iterator<java.lang.String> iterator_str34 = treeset_str27.descendingIterator();
    java.lang.String[] str_array37 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str38 = new java.util.TreeSet<java.lang.String>();
    boolean b39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str38, str_array37);
    java.util.NavigableSet<java.lang.String> navigableset_str40 = treeset_str38.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str41 = treeset_str38.iterator();
    boolean b42 = treeset_str27.equals((java.lang.Object)iterator_str41);
    java.util.Iterator<java.lang.String> iterator_str43 = treeset_str27.iterator();
    boolean b44 = treeset_str8.equals((java.lang.Object)treeset_str27);
    java.util.TreeSet<java.lang.String> treeset_str45 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str8);
    java.lang.String str47 = treeset_str8.ceiling("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str48 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str49 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str48);
    java.util.TreeSet<java.lang.String> treeset_str50 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array52 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str53 = new java.util.ArrayList<java.lang.String>();
    boolean b54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str53, str_array52);
    boolean b55 = treeset_str50.retainAll((java.util.Collection<java.lang.String>)arraylist_str53);
    boolean b57 = treeset_str50.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str58 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str59 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str58);
    java.util.SortedSet<java.lang.String> sortedset_str61 = treeset_str59.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str64 = treeset_str59.headSet("", false);
    boolean b65 = treeset_str50.retainAll((java.util.Collection<java.lang.String>)navigableset_str64);
    boolean b66 = treeset_str49.retainAll((java.util.Collection<java.lang.String>)navigableset_str64);
    boolean b67 = treeset_str8.containsAll((java.util.Collection<java.lang.String>)treeset_str49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == true);

  }

  @Test
  public void test460() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test460"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str1.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str1.descendingSet();
    java.lang.String str20 = treeset_str1.lower("[]");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array23 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str24 = new java.util.ArrayList<java.lang.String>();
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str24, str_array23);
    boolean b26 = treeset_str21.retainAll((java.util.Collection<java.lang.String>)arraylist_str24);
    java.util.TreeSet<java.lang.String> treeset_str27 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array29 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str30 = new java.util.ArrayList<java.lang.String>();
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str30, str_array29);
    boolean b32 = treeset_str27.retainAll((java.util.Collection<java.lang.String>)arraylist_str30);
    java.util.TreeSet<java.lang.String> treeset_str33 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array35 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str36 = new java.util.ArrayList<java.lang.String>();
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str36, str_array35);
    boolean b38 = treeset_str33.retainAll((java.util.Collection<java.lang.String>)arraylist_str36);
    java.util.TreeSet<java.lang.String> treeset_str39 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array41 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str42 = new java.util.ArrayList<java.lang.String>();
    boolean b43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str42, str_array41);
    boolean b44 = treeset_str39.retainAll((java.util.Collection<java.lang.String>)arraylist_str42);
    java.util.TreeSet<java.lang.String> treeset_str45 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array47 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str48 = new java.util.ArrayList<java.lang.String>();
    boolean b49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str48, str_array47);
    boolean b50 = treeset_str45.retainAll((java.util.Collection<java.lang.String>)arraylist_str48);
    java.util.ArrayList[] arrayList_array52 = new java.util.ArrayList[ 5 ];
    @SuppressWarnings("unchecked")
    java.util.ArrayList<java.lang.String>[] arraylist_str_array53 = (java.util.ArrayList<java.lang.String>[])arrayList_array52;
    arraylist_str_array53[0] = arraylist_str24;
    arraylist_str_array53[1] = arraylist_str30;
    arraylist_str_array53[2] = arraylist_str36;
    arraylist_str_array53[3] = arraylist_str42;
    arraylist_str_array53[4] = arraylist_str48;
    java.util.ArrayList<java.lang.String>[] arraylist_str_array64 = treeset_str1.toArray(arraylist_str_array53);
    java.util.Iterator<java.lang.String> iterator_str65 = treeset_str1.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arrayList_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str65);

  }

  @Test
  public void test461() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test461"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.util.Iterator<java.lang.String> iterator_str17 = treeset_str1.iterator();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str1);
    boolean b19 = treeset_str1.isEmpty();
    java.util.SortedSet<java.lang.String> sortedset_str21 = treeset_str1.headSet("[, hi!]");
    java.lang.String str23 = treeset_str1.lower("[, hi!]");
    java.lang.Object[] obj_array24 = treeset_str1.toArray();
    java.lang.String str26 = treeset_str1.floor("[hi!]");
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str1.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);

  }

  @Test
  public void test462() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test462"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.Iterator<java.lang.String> iterator_str7 = treeset_str0.descendingIterator();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str11, str_array10);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str11.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str14 = treeset_str11.iterator();
    boolean b15 = treeset_str0.equals((java.lang.Object)iterator_str14);
    java.util.Iterator<java.lang.String> iterator_str16 = treeset_str0.iterator();
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array19 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str20 = new java.util.ArrayList<java.lang.String>();
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str20, str_array19);
    boolean b22 = treeset_str17.retainAll((java.util.Collection<java.lang.String>)arraylist_str20);
    boolean b24 = treeset_str17.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str26 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str25);
    java.util.SortedSet<java.lang.String> sortedset_str28 = treeset_str26.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str31 = treeset_str26.headSet("", false);
    boolean b32 = treeset_str17.retainAll((java.util.Collection<java.lang.String>)navigableset_str31);
    java.lang.String[] str_array35 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str36 = new java.util.TreeSet<java.lang.String>();
    boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str36, str_array35);
    java.util.NavigableSet<java.lang.String> navigableset_str38 = treeset_str36.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str39 = treeset_str36.iterator();
    java.util.Iterator<java.lang.String> iterator_str40 = treeset_str36.iterator();
    boolean b41 = treeset_str17.removeAll((java.util.Collection<java.lang.String>)treeset_str36);
    java.util.SortedSet[] sortedSet_array43 = new java.util.SortedSet[ 1 ];
    @SuppressWarnings("unchecked")
    java.util.SortedSet<java.lang.String>[] sortedset_str_array44 = (java.util.SortedSet<java.lang.String>[])sortedSet_array43;
    sortedset_str_array44[0] = treeset_str17;
    java.util.SortedSet[][] sortedSet_array_array48 = new java.util.SortedSet[ 1 ][];
    @SuppressWarnings("unchecked")
    java.util.SortedSet<java.lang.String>[][] sortedset_str_array_array49 = (java.util.SortedSet<java.lang.String>[][])sortedSet_array_array48;
    sortedset_str_array_array49[0] = sortedset_str_array44;
    java.util.SortedSet<java.lang.String>[][] sortedset_str_array_array52 = treeset_str0.toArray(sortedset_str_array_array49);
    java.util.TreeSet<java.lang.String> treeset_str53 = new java.util.TreeSet<java.lang.String>();
    boolean b54 = treeset_str0.containsAll((java.util.Collection<java.lang.String>)treeset_str53);
    java.lang.Object obj55 = treeset_str53.clone();
    java.util.TreeSet<java.lang.String> treeset_str56 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array58 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str59 = new java.util.ArrayList<java.lang.String>();
    boolean b60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str59, str_array58);
    boolean b61 = treeset_str56.retainAll((java.util.Collection<java.lang.String>)arraylist_str59);
    java.util.TreeSet<java.lang.String> treeset_str62 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str63 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str62);
    java.util.SortedSet<java.lang.String> sortedset_str65 = treeset_str63.tailSet("");
    boolean b66 = treeset_str56.equals((java.lang.Object)treeset_str63);
    java.util.TreeSet<java.lang.String> treeset_str67 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str68 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str67);
    java.util.TreeSet<java.lang.String> treeset_str69 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array71 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str72 = new java.util.ArrayList<java.lang.String>();
    boolean b73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str72, str_array71);
    boolean b74 = treeset_str69.retainAll((java.util.Collection<java.lang.String>)arraylist_str72);
    boolean b76 = treeset_str69.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str77 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str78 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str77);
    java.util.SortedSet<java.lang.String> sortedset_str80 = treeset_str78.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str83 = treeset_str78.headSet("", false);
    boolean b84 = treeset_str69.retainAll((java.util.Collection<java.lang.String>)navigableset_str83);
    boolean b85 = treeset_str68.retainAll((java.util.Collection<java.lang.String>)navigableset_str83);
    boolean b86 = treeset_str56.equals((java.lang.Object)b85);
    java.lang.String str88 = treeset_str56.ceiling("[hi!]");
    java.util.Iterator<java.lang.String> iterator_str89 = treeset_str56.iterator();
    java.util.SortedSet<java.lang.String> sortedset_str92 = treeset_str56.subSet("", "hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str95 = treeset_str56.tailSet("[[]]", false);
    boolean b96 = treeset_str53.retainAll((java.util.Collection<java.lang.String>)treeset_str56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet_array_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str_array_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b76 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str83);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b84 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b85 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b86 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str88);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str89);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str92);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str95);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b96 == false);

  }

  @Test
  public void test463() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test463"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.stream.Stream<java.lang.String> stream_str11 = treeset_str0.stream();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array14 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str15 = new java.util.ArrayList<java.lang.String>();
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str15, str_array14);
    boolean b17 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)arraylist_str15);
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str18);
    java.util.SortedSet<java.lang.String> sortedset_str21 = treeset_str19.tailSet("");
    boolean b22 = treeset_str12.equals((java.lang.Object)treeset_str19);
    java.util.stream.Stream<java.lang.String> stream_str23 = treeset_str12.stream();
    java.util.Iterator<java.lang.String> iterator_str24 = treeset_str12.descendingIterator();
    java.util.NavigableSet<java.lang.String> navigableset_str25 = treeset_str12.descendingSet();
    boolean b26 = treeset_str0.addAll((java.util.Collection<java.lang.String>)navigableset_str25);
    int i27 = treeset_str0.size();
    java.util.Spliterator<java.lang.String> spliterator_str28 = treeset_str0.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str28);

  }

  @Test
  public void test464() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test464"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    boolean b20 = treeset_str13.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str21);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str22.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str22.headSet("", false);
    boolean b28 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b29 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b30 = treeset_str0.equals((java.lang.Object)b29);
    boolean b32 = treeset_str0.add("[]");
    java.util.Comparator<? super java.lang.String> comparator_wildcard33 = treeset_str0.comparator();
    java.lang.String str34 = treeset_str0.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "[]"+ "'", str34.equals("[]"));

  }

  @Test
  public void test465() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test465"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.lang.String str8 = treeset_str0.toString();
    java.util.Spliterator<java.lang.String> spliterator_str9 = treeset_str0.spliterator();
    java.util.NavigableSet<java.lang.String> navigableset_str12 = treeset_str0.headSet("hi!", false);
    java.util.Spliterator<java.lang.String> spliterator_str13 = treeset_str0.spliterator();
    boolean b15 = treeset_str0.add("[[hi!]]");
    java.lang.Object obj16 = treeset_str0.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "[hi!]"+ "'", str8.equals("[hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj16);

  }

  @Test
  public void test466() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test466"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.lang.String str4 = treeset_str1.pollFirst();
    java.util.TreeSet<java.lang.String> treeset_str5 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str1);
    java.util.NavigableSet<java.lang.String> navigableset_str8 = treeset_str5.tailSet("", true);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)navigableset_str8);
    java.lang.String str11 = treeset_str9.lower("[[]]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str11);

  }

  @Test
  public void test467() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test467"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str7 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str8 = treeset_str3.iterator();
    java.util.SortedSet<java.lang.String> sortedset_str10 = treeset_str3.tailSet("[, hi!]");
    java.lang.String str11 = treeset_str3.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!"+ "'", str11.equals("hi!"));

  }

  @Test
  public void test468() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test468"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.stream.Stream<java.lang.String> stream_str11 = treeset_str0.stream();
    boolean b13 = treeset_str0.add("[]");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str0.headSet("", true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);

  }

  @Test
  public void test469() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test469"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.lang.String str8 = treeset_str0.toString();
    java.util.NavigableSet<java.lang.String> navigableset_str11 = treeset_str0.headSet("[]", false);
    java.util.NavigableSet<java.lang.String> navigableset_str12 = treeset_str0.descendingSet();
    java.lang.String str14 = treeset_str0.ceiling("[hi!]");
    java.util.SortedSet<java.lang.String> sortedset_str16 = treeset_str0.headSet("[, hi!]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "[hi!]"+ "'", str8.equals("[hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!"+ "'", str14.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str16);

  }

  @Test
  public void test470() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test470"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    boolean b20 = treeset_str13.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str21);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str22.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str22.headSet("", false);
    boolean b28 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b29 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b30 = treeset_str0.equals((java.lang.Object)b29);
    java.lang.String str32 = treeset_str0.ceiling("[hi!]");
    java.util.Iterator<java.lang.String> iterator_str33 = treeset_str0.iterator();
    java.util.SortedSet<java.lang.String> sortedset_str36 = treeset_str0.subSet("", "hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str39 = treeset_str0.tailSet("[[]]", false);
    java.util.Comparator<? super java.lang.String> comparator_wildcard40 = treeset_str0.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard40);

  }

  @Test
  public void test471() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test471"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.lang.String str8 = treeset_str0.toString();
    java.lang.Object[] obj_array9 = treeset_str0.toArray();
    java.lang.String str10 = treeset_str0.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "[hi!]"+ "'", str8.equals("[hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!"+ "'", str10.equals("hi!"));

  }

  @Test
  public void test472() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test472"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.lang.String str8 = treeset_str0.lower("");
    java.lang.String str10 = treeset_str0.higher("");
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array13 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str14 = new java.util.ArrayList<java.lang.String>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str14, str_array13);
    boolean b16 = treeset_str11.retainAll((java.util.Collection<java.lang.String>)arraylist_str14);
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array19 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str20 = new java.util.ArrayList<java.lang.String>();
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str20, str_array19);
    boolean b22 = treeset_str17.retainAll((java.util.Collection<java.lang.String>)arraylist_str20);
    java.util.TreeSet<java.lang.String> treeset_str23 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array25 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str26 = new java.util.ArrayList<java.lang.String>();
    boolean b27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str26, str_array25);
    boolean b28 = treeset_str23.retainAll((java.util.Collection<java.lang.String>)arraylist_str26);
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array31 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str32 = new java.util.ArrayList<java.lang.String>();
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str32, str_array31);
    boolean b34 = treeset_str29.retainAll((java.util.Collection<java.lang.String>)arraylist_str32);
    java.util.ArrayList[] arrayList_array36 = new java.util.ArrayList[ 4 ];
    @SuppressWarnings("unchecked")
    java.util.ArrayList<java.lang.String>[] arraylist_str_array37 = (java.util.ArrayList<java.lang.String>[])arrayList_array36;
    arraylist_str_array37[0] = arraylist_str14;
    arraylist_str_array37[1] = arraylist_str20;
    arraylist_str_array37[2] = arraylist_str26;
    arraylist_str_array37[3] = arraylist_str32;
    java.util.TreeSet<java.lang.String> treeset_str46 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array48 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str49 = new java.util.ArrayList<java.lang.String>();
    boolean b50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str49, str_array48);
    boolean b51 = treeset_str46.retainAll((java.util.Collection<java.lang.String>)arraylist_str49);
    java.util.TreeSet<java.lang.String> treeset_str52 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array54 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str55 = new java.util.ArrayList<java.lang.String>();
    boolean b56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str55, str_array54);
    boolean b57 = treeset_str52.retainAll((java.util.Collection<java.lang.String>)arraylist_str55);
    java.util.TreeSet<java.lang.String> treeset_str58 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array60 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str61 = new java.util.ArrayList<java.lang.String>();
    boolean b62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str61, str_array60);
    boolean b63 = treeset_str58.retainAll((java.util.Collection<java.lang.String>)arraylist_str61);
    java.util.TreeSet<java.lang.String> treeset_str64 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array66 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str67 = new java.util.ArrayList<java.lang.String>();
    boolean b68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str67, str_array66);
    boolean b69 = treeset_str64.retainAll((java.util.Collection<java.lang.String>)arraylist_str67);
    java.util.ArrayList[] arrayList_array71 = new java.util.ArrayList[ 4 ];
    @SuppressWarnings("unchecked")
    java.util.ArrayList<java.lang.String>[] arraylist_str_array72 = (java.util.ArrayList<java.lang.String>[])arrayList_array71;
    arraylist_str_array72[0] = arraylist_str49;
    arraylist_str_array72[1] = arraylist_str55;
    arraylist_str_array72[2] = arraylist_str61;
    arraylist_str_array72[3] = arraylist_str67;
    java.util.ArrayList[][] arrayList_array_array82 = new java.util.ArrayList[ 2 ][];
    @SuppressWarnings("unchecked")
    java.util.ArrayList<java.lang.String>[][] arraylist_str_array_array83 = (java.util.ArrayList<java.lang.String>[][])arrayList_array_array82;
    arraylist_str_array_array83[0] = arraylist_str_array37;
    arraylist_str_array_array83[1] = arraylist_str_array72;
    java.util.ArrayList<java.lang.String>[][] arraylist_str_array_array88 = treeset_str0.toArray(arraylist_str_array_array83);
    java.lang.String str90 = treeset_str0.floor("[hi!]");
    java.lang.String str92 = treeset_str0.higher("hi!");
    java.util.Iterator<java.lang.String> iterator_str93 = treeset_str0.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arrayList_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arrayList_array71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arrayList_array_array82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array_array83);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array_array88);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str90);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str92);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str93);

  }

  @Test
  public void test473() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test473"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str0.tailSet("hi!", true);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    java.lang.String str12 = treeset_str0.toString();
    java.lang.String str13 = treeset_str0.toString();
    boolean b14 = treeset_str0.isEmpty();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.NavigableSet<java.lang.String> navigableset_str18 = treeset_str15.tailSet("", true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "[hi!]"+ "'", str12.equals("[hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "[hi!]"+ "'", str13.equals("[hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str18);

  }

  @Test
  public void test474() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test474"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str0.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str26 = treeset_str0.descendingSet();
    java.util.Spliterator<java.lang.String> spliterator_str27 = treeset_str0.spliterator();
    java.lang.Object[] obj_array28 = treeset_str0.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array28);

  }

  @Test
  public void test475() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test475"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.lang.String str4 = treeset_str1.pollFirst();
    java.util.NavigableSet<java.lang.String> navigableset_str9 = treeset_str1.subSet("", false, "[hi!]", false);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str1.headSet("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array14 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str15 = new java.util.ArrayList<java.lang.String>();
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str15, str_array14);
    boolean b17 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)arraylist_str15);
    java.lang.String str18 = treeset_str12.pollLast();
    boolean b19 = treeset_str1.containsAll((java.util.Collection<java.lang.String>)treeset_str12);
    java.util.TreeSet<java.lang.String> treeset_str20 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str20);
    java.util.SortedSet<java.lang.String> sortedset_str23 = treeset_str21.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str24 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array26 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str27 = new java.util.ArrayList<java.lang.String>();
    boolean b28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str27, str_array26);
    boolean b29 = treeset_str24.retainAll((java.util.Collection<java.lang.String>)arraylist_str27);
    boolean b30 = treeset_str21.retainAll((java.util.Collection<java.lang.String>)treeset_str24);
    java.lang.String str32 = treeset_str24.higher("");
    java.util.SortedSet<java.lang.String> sortedset_str35 = treeset_str24.subSet("", "hi!");
    boolean b36 = treeset_str1.addAll((java.util.Collection<java.lang.String>)treeset_str24);
    java.lang.String str38 = treeset_str1.floor("[[]]");
    java.util.stream.Stream<java.lang.String> stream_str39 = treeset_str1.stream();
    java.util.NavigableSet<java.lang.String> navigableset_str42 = treeset_str1.tailSet("", true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str42);

  }

  @Test
  public void test476() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test476"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str0.iterator();
    java.util.NavigableSet<java.lang.String> navigableset_str26 = treeset_str0.descendingSet();
    java.util.Spliterator<java.lang.String> spliterator_str27 = treeset_str0.spliterator();
    java.lang.String str29 = treeset_str0.lower("[[hi!]]");
    java.util.TreeSet<java.lang.String> treeset_str30 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str31 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str30);
    java.util.SortedSet<java.lang.String> sortedset_str33 = treeset_str31.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str34 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array36 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str37 = new java.util.ArrayList<java.lang.String>();
    boolean b38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str37, str_array36);
    boolean b39 = treeset_str34.retainAll((java.util.Collection<java.lang.String>)arraylist_str37);
    boolean b40 = treeset_str31.retainAll((java.util.Collection<java.lang.String>)treeset_str34);
    java.lang.String str42 = treeset_str31.higher("");
    boolean b44 = treeset_str31.add("[]");
    boolean b46 = treeset_str31.add("[[]]");
    java.util.NavigableSet<java.lang.String> navigableset_str51 = treeset_str31.subSet("[]", true, "[]", true);
    boolean b52 = treeset_str0.containsAll((java.util.Collection<java.lang.String>)navigableset_str51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);

  }

  @Test
  public void test477() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test477"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("hi!", true);
    treeset_str1.clear();
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str1.headSet("hi!", true);
    java.util.stream.Stream<java.lang.String> stream_str11 = treeset_str1.parallelStream();
    java.lang.String str12 = treeset_str1.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str12);

  }

  @Test
  public void test478() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test478"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str0.iterator();
    java.lang.String str27 = treeset_str0.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str30 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str29);
    java.util.TreeSet<java.lang.String> treeset_str31 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array33 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str34 = new java.util.ArrayList<java.lang.String>();
    boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str34, str_array33);
    boolean b36 = treeset_str31.retainAll((java.util.Collection<java.lang.String>)arraylist_str34);
    boolean b38 = treeset_str31.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str39 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str40 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str39);
    java.util.SortedSet<java.lang.String> sortedset_str42 = treeset_str40.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str45 = treeset_str40.headSet("", false);
    boolean b46 = treeset_str31.retainAll((java.util.Collection<java.lang.String>)navigableset_str45);
    boolean b47 = treeset_str30.retainAll((java.util.Collection<java.lang.String>)navigableset_str45);
    boolean b48 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)treeset_str30);
    java.util.Comparator<? super java.lang.String> comparator_wildcard49 = treeset_str0.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard49);

  }

  @Test
  public void test479() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test479"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.NavigableSet<java.lang.String> navigableset_str13 = treeset_str7.tailSet("hi!", false);
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str7);
    // The following exception was thrown during execution in test generation
    try {
    java.util.SortedSet<java.lang.String> sortedset_str17 = treeset_str14.subSet("[hi!]", "[[hi!]]");
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str13);

  }

  @Test
  public void test480() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test480"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.lang.String str4 = treeset_str1.pollFirst();
    java.util.TreeSet<java.lang.String> treeset_str5 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str1);
    java.util.SortedSet<java.lang.String> sortedset_str8 = treeset_str1.subSet("[]", "[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str9);
    java.lang.String str12 = treeset_str10.lower("");
    boolean b13 = treeset_str10.isEmpty();
    boolean b14 = treeset_str1.contains((java.lang.Object)b13);
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str1);
    int i16 = treeset_str15.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);

  }

  @Test
  public void test481() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test481"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str26 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str25);
    java.util.Iterator<java.lang.String> iterator_str27 = treeset_str26.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array30 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str31 = new java.util.ArrayList<java.lang.String>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str31, str_array30);
    boolean b33 = treeset_str28.retainAll((java.util.Collection<java.lang.String>)arraylist_str31);
    boolean b35 = treeset_str28.add("hi!");
    boolean b36 = treeset_str26.contains((java.lang.Object)"hi!");
    java.lang.String str38 = treeset_str26.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str43 = treeset_str26.subSet("[hi!]", true, "[hi!]", true);
    boolean b44 = treeset_str0.containsAll((java.util.Collection<java.lang.String>)treeset_str26);
    java.util.SortedSet<java.lang.String> sortedset_str46 = treeset_str0.tailSet("[, hi!]");
    java.util.NavigableSet<java.lang.String> navigableset_str47 = treeset_str0.descendingSet();
    java.util.NavigableSet<java.lang.String> navigableset_str50 = treeset_str0.headSet("", true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str50);

  }

  @Test
  public void test482() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test482"); }

    java.lang.String[] str_array1 = new java.lang.String[] { "" };
    java.util.TreeSet<java.lang.String> treeset_str2 = new java.util.TreeSet<java.lang.String>();
    boolean b3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str2, str_array1);
    int i4 = treeset_str2.size();
    java.util.TreeSet<java.lang.String> treeset_str5 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str2);
    java.util.NavigableSet<java.lang.String> navigableset_str8 = treeset_str5.headSet("", false);
    java.lang.String str9 = treeset_str5.last();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + ""+ "'", str9.equals(""));

  }

  @Test
  public void test483() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test483"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.lang.String str8 = treeset_str0.lower("");
    java.lang.String str10 = treeset_str0.higher("");
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array13 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str14 = new java.util.ArrayList<java.lang.String>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str14, str_array13);
    boolean b16 = treeset_str11.retainAll((java.util.Collection<java.lang.String>)arraylist_str14);
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array19 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str20 = new java.util.ArrayList<java.lang.String>();
    boolean b21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str20, str_array19);
    boolean b22 = treeset_str17.retainAll((java.util.Collection<java.lang.String>)arraylist_str20);
    java.util.TreeSet<java.lang.String> treeset_str23 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array25 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str26 = new java.util.ArrayList<java.lang.String>();
    boolean b27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str26, str_array25);
    boolean b28 = treeset_str23.retainAll((java.util.Collection<java.lang.String>)arraylist_str26);
    java.util.TreeSet<java.lang.String> treeset_str29 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array31 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str32 = new java.util.ArrayList<java.lang.String>();
    boolean b33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str32, str_array31);
    boolean b34 = treeset_str29.retainAll((java.util.Collection<java.lang.String>)arraylist_str32);
    java.util.ArrayList[] arrayList_array36 = new java.util.ArrayList[ 4 ];
    @SuppressWarnings("unchecked")
    java.util.ArrayList<java.lang.String>[] arraylist_str_array37 = (java.util.ArrayList<java.lang.String>[])arrayList_array36;
    arraylist_str_array37[0] = arraylist_str14;
    arraylist_str_array37[1] = arraylist_str20;
    arraylist_str_array37[2] = arraylist_str26;
    arraylist_str_array37[3] = arraylist_str32;
    java.util.TreeSet<java.lang.String> treeset_str46 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array48 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str49 = new java.util.ArrayList<java.lang.String>();
    boolean b50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str49, str_array48);
    boolean b51 = treeset_str46.retainAll((java.util.Collection<java.lang.String>)arraylist_str49);
    java.util.TreeSet<java.lang.String> treeset_str52 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array54 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str55 = new java.util.ArrayList<java.lang.String>();
    boolean b56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str55, str_array54);
    boolean b57 = treeset_str52.retainAll((java.util.Collection<java.lang.String>)arraylist_str55);
    java.util.TreeSet<java.lang.String> treeset_str58 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array60 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str61 = new java.util.ArrayList<java.lang.String>();
    boolean b62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str61, str_array60);
    boolean b63 = treeset_str58.retainAll((java.util.Collection<java.lang.String>)arraylist_str61);
    java.util.TreeSet<java.lang.String> treeset_str64 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array66 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str67 = new java.util.ArrayList<java.lang.String>();
    boolean b68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str67, str_array66);
    boolean b69 = treeset_str64.retainAll((java.util.Collection<java.lang.String>)arraylist_str67);
    java.util.ArrayList[] arrayList_array71 = new java.util.ArrayList[ 4 ];
    @SuppressWarnings("unchecked")
    java.util.ArrayList<java.lang.String>[] arraylist_str_array72 = (java.util.ArrayList<java.lang.String>[])arrayList_array71;
    arraylist_str_array72[0] = arraylist_str49;
    arraylist_str_array72[1] = arraylist_str55;
    arraylist_str_array72[2] = arraylist_str61;
    arraylist_str_array72[3] = arraylist_str67;
    java.util.ArrayList[][] arrayList_array_array82 = new java.util.ArrayList[ 2 ][];
    @SuppressWarnings("unchecked")
    java.util.ArrayList<java.lang.String>[][] arraylist_str_array_array83 = (java.util.ArrayList<java.lang.String>[][])arrayList_array_array82;
    arraylist_str_array_array83[0] = arraylist_str_array37;
    arraylist_str_array_array83[1] = arraylist_str_array72;
    java.util.ArrayList<java.lang.String>[][] arraylist_str_array_array88 = treeset_str0.toArray(arraylist_str_array_array83);
    java.lang.String str90 = treeset_str0.floor("[hi!]");
    java.lang.String str92 = treeset_str0.lower("hi!");
    java.util.Spliterator<java.lang.String> spliterator_str93 = treeset_str0.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arrayList_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arrayList_array71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arrayList_array_array82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array_array83);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(arraylist_str_array_array88);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str90);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str92);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str93);

  }

  @Test
  public void test484() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test484"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str11 = treeset_str9.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str9.headSet("", false);
    boolean b15 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)navigableset_str14);
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str19, str_array18);
    java.util.NavigableSet<java.lang.String> navigableset_str21 = treeset_str19.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str22 = treeset_str19.iterator();
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str19.iterator();
    boolean b24 = treeset_str0.removeAll((java.util.Collection<java.lang.String>)treeset_str19);
    java.util.Iterator<java.lang.String> iterator_str25 = treeset_str0.iterator();
    java.lang.String str27 = treeset_str0.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str28 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str0);
    java.util.NavigableSet<java.lang.String> navigableset_str31 = treeset_str0.headSet("[]", true);
    java.util.TreeSet<java.lang.String> treeset_str32 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)navigableset_str31);
    java.util.stream.Stream<java.lang.String> stream_str33 = treeset_str32.stream();
    // The following exception was thrown during execution in test generation
    try {
    java.util.NavigableSet<java.lang.String> navigableset_str38 = treeset_str32.subSet("[]", false, "[[hi!]]", false);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str33);

  }

  @Test
  public void test485() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test485"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.TreeSet<java.lang.String> treeset_str2 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array4 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str5 = new java.util.ArrayList<java.lang.String>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str5, str_array4);
    boolean b7 = treeset_str2.retainAll((java.util.Collection<java.lang.String>)arraylist_str5);
    boolean b9 = treeset_str2.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str10);
    java.util.SortedSet<java.lang.String> sortedset_str13 = treeset_str11.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str11.headSet("", false);
    boolean b17 = treeset_str2.retainAll((java.util.Collection<java.lang.String>)navigableset_str16);
    boolean b18 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)navigableset_str16);
    java.lang.String str19 = treeset_str1.toString();
    java.util.SortedSet<java.lang.String> sortedset_str22 = treeset_str1.subSet("", "[hi!]");
    java.util.Iterator<java.lang.String> iterator_str23 = treeset_str1.iterator();
    java.lang.String str25 = treeset_str1.lower("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "[]"+ "'", str19.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str25);

  }

  @Test
  public void test486() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test486"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("hi!", true);
    java.lang.String[] str_array9 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>();
    boolean b11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str10, str_array9);
    java.util.NavigableSet<java.lang.String> navigableset_str12 = treeset_str10.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str13 = treeset_str10.iterator();
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str14);
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array18 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str19 = new java.util.ArrayList<java.lang.String>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str19, str_array18);
    boolean b21 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)arraylist_str19);
    boolean b23 = treeset_str16.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str24 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str25 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str24);
    java.util.SortedSet<java.lang.String> sortedset_str27 = treeset_str25.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str30 = treeset_str25.headSet("", false);
    boolean b31 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)navigableset_str30);
    boolean b32 = treeset_str15.retainAll((java.util.Collection<java.lang.String>)navigableset_str30);
    boolean b33 = treeset_str10.removeAll((java.util.Collection<java.lang.String>)treeset_str15);
    boolean b34 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str10);
    int i35 = treeset_str10.size();
    java.util.stream.Stream<java.lang.String> stream_str36 = treeset_str10.parallelStream();
    java.util.TreeSet<java.lang.String> treeset_str37 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str38 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str37);
    java.util.SortedSet<java.lang.String> sortedset_str40 = treeset_str38.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str41 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array43 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str44 = new java.util.ArrayList<java.lang.String>();
    boolean b45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str44, str_array43);
    boolean b46 = treeset_str41.retainAll((java.util.Collection<java.lang.String>)arraylist_str44);
    boolean b47 = treeset_str38.retainAll((java.util.Collection<java.lang.String>)treeset_str41);
    java.lang.String[] str_array50 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str51 = new java.util.TreeSet<java.lang.String>();
    boolean b52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str51, str_array50);
    java.util.NavigableSet<java.lang.String> navigableset_str53 = treeset_str51.descendingSet();
    java.lang.String str55 = treeset_str51.ceiling("[hi!]");
    boolean b56 = treeset_str41.remove((java.lang.Object)"[hi!]");
    java.util.NavigableSet<java.lang.String> navigableset_str61 = treeset_str41.subSet("[]", true, "[hi!]", false);
    java.util.NavigableSet<java.lang.String> navigableset_str62 = treeset_str41.descendingSet();
    boolean b63 = treeset_str10.addAll((java.util.Collection<java.lang.String>)treeset_str41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i35 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str55 + "' != '" + "hi!"+ "'", str55.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);

  }

  @Test
  public void test487() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test487"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.stream.Stream<java.lang.String> stream_str11 = treeset_str0.stream();
    java.util.Collection<java.lang.String> collection_str12 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b13 = treeset_str0.containsAll(collection_str12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str11);

  }

  @Test
  public void test488() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test488"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str11);
    java.util.TreeSet<java.lang.String> treeset_str13 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array15 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str16, str_array15);
    boolean b18 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)arraylist_str16);
    boolean b20 = treeset_str13.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str22 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str21);
    java.util.SortedSet<java.lang.String> sortedset_str24 = treeset_str22.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str27 = treeset_str22.headSet("", false);
    boolean b28 = treeset_str13.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b29 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)navigableset_str27);
    boolean b30 = treeset_str0.equals((java.lang.Object)b29);
    java.lang.String str32 = treeset_str0.ceiling("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str33 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    int i34 = treeset_str0.size();
    java.util.TreeSet<java.lang.String> treeset_str35 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array37 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str38 = new java.util.ArrayList<java.lang.String>();
    boolean b39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str38, str_array37);
    boolean b40 = treeset_str35.retainAll((java.util.Collection<java.lang.String>)arraylist_str38);
    java.lang.String str41 = treeset_str35.pollLast();
    java.util.Spliterator<java.lang.String> spliterator_str42 = treeset_str35.spliterator();
    java.util.SortedSet<java.lang.String> sortedset_str44 = treeset_str35.tailSet("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str45 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str35);
    boolean b46 = treeset_str45.isEmpty();
    boolean b47 = treeset_str0.contains((java.lang.Object)b46);
    java.util.stream.Stream<java.lang.String> stream_str48 = treeset_str0.stream();
    java.util.TreeSet<java.lang.String> treeset_str49 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array51 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str52 = new java.util.ArrayList<java.lang.String>();
    boolean b53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str52, str_array51);
    boolean b54 = treeset_str49.retainAll((java.util.Collection<java.lang.String>)arraylist_str52);
    boolean b56 = treeset_str49.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str57 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str58 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str57);
    java.util.SortedSet<java.lang.String> sortedset_str60 = treeset_str58.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str63 = treeset_str58.headSet("", false);
    boolean b64 = treeset_str49.retainAll((java.util.Collection<java.lang.String>)navigableset_str63);
    java.lang.String[] str_array67 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str68 = new java.util.TreeSet<java.lang.String>();
    boolean b69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str68, str_array67);
    java.util.NavigableSet<java.lang.String> navigableset_str70 = treeset_str68.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str71 = treeset_str68.iterator();
    java.util.Iterator<java.lang.String> iterator_str72 = treeset_str68.iterator();
    boolean b73 = treeset_str49.removeAll((java.util.Collection<java.lang.String>)treeset_str68);
    java.util.Iterator<java.lang.String> iterator_str74 = treeset_str49.iterator();
    java.lang.String str76 = treeset_str49.lower("hi!");
    java.util.TreeSet<java.lang.String> treeset_str77 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str49);
    int i78 = treeset_str49.size();
    int i79 = treeset_str49.size();
    java.lang.Object obj80 = treeset_str49.clone();
    java.util.TreeSet<java.lang.String> treeset_str81 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str49);
    boolean b82 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)treeset_str49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator_str42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i78 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i79 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b82 == false);

  }

  @Test
  public void test489() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test489"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.TreeSet<java.lang.String> treeset_str2 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array4 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str5 = new java.util.ArrayList<java.lang.String>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str5, str_array4);
    boolean b7 = treeset_str2.retainAll((java.util.Collection<java.lang.String>)arraylist_str5);
    boolean b9 = treeset_str2.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str10);
    java.util.SortedSet<java.lang.String> sortedset_str13 = treeset_str11.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str11.headSet("", false);
    boolean b17 = treeset_str2.retainAll((java.util.Collection<java.lang.String>)navigableset_str16);
    boolean b18 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)navigableset_str16);
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>((java.util.Collection<java.lang.String>)treeset_str1);
    int i20 = treeset_str19.size();
    java.lang.String str21 = treeset_str19.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "[]"+ "'", str21.equals("[]"));

  }

  @Test
  public void test490() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test490"); }

    java.lang.String[] str_array2 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str3, str_array2);
    java.util.NavigableSet<java.lang.String> navigableset_str5 = treeset_str3.descendingSet();
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str3.iterator();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str8 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str7);
    java.util.TreeSet<java.lang.String> treeset_str9 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str12, str_array11);
    boolean b14 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)arraylist_str12);
    boolean b16 = treeset_str9.add("hi!");
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str23 = treeset_str18.headSet("", false);
    boolean b24 = treeset_str9.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b25 = treeset_str8.retainAll((java.util.Collection<java.lang.String>)navigableset_str23);
    boolean b26 = treeset_str3.removeAll((java.util.Collection<java.lang.String>)treeset_str8);
    java.util.SortedSet<java.lang.String> sortedset_str28 = treeset_str8.tailSet("hi!");
    java.lang.String str30 = treeset_str8.higher("");
    java.util.SortedSet<java.lang.String> sortedset_str32 = treeset_str8.tailSet("[hi!]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str32);

  }

  @Test
  public void test491() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test491"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str1.headSet("", false);
    java.lang.String str18 = treeset_str1.higher("[, hi!]");
    java.util.stream.Stream<java.lang.String> stream_str19 = treeset_str1.parallelStream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str19);

  }

  @Test
  public void test492() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test492"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.lang.String str6 = treeset_str0.pollLast();
    java.util.stream.Stream<java.lang.String> stream_str7 = treeset_str0.parallelStream();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str8 = treeset_str0.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str7);

  }

  @Test
  public void test493() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test493"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.Iterator<java.lang.String> iterator_str2 = treeset_str1.descendingIterator();
    java.util.TreeSet<java.lang.String> treeset_str3 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array5 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    boolean b8 = treeset_str3.retainAll((java.util.Collection<java.lang.String>)arraylist_str6);
    boolean b10 = treeset_str3.add("hi!");
    boolean b11 = treeset_str1.contains((java.lang.Object)"hi!");
    java.lang.String str13 = treeset_str1.ceiling("hi!");
    boolean b15 = treeset_str1.add("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str16 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str16);
    java.util.NavigableSet<java.lang.String> navigableset_str22 = treeset_str16.subSet("", true, "[hi!]", true);
    java.util.TreeSet<java.lang.String> treeset_str23 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str24 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str23);
    java.util.SortedSet<java.lang.String> sortedset_str26 = treeset_str24.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str27 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array29 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str30 = new java.util.ArrayList<java.lang.String>();
    boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str30, str_array29);
    boolean b32 = treeset_str27.retainAll((java.util.Collection<java.lang.String>)arraylist_str30);
    boolean b33 = treeset_str24.retainAll((java.util.Collection<java.lang.String>)treeset_str27);
    java.util.NavigableSet<java.lang.String> navigableset_str36 = treeset_str24.headSet("", false);
    boolean b37 = treeset_str16.retainAll((java.util.Collection<java.lang.String>)treeset_str24);
    java.lang.String str38 = treeset_str24.pollFirst();
    boolean b39 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);

  }

  @Test
  public void test494() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test494"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("", false);
    java.lang.String str7 = treeset_str1.pollLast();
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str1.tailSet("[, hi!]");
    java.lang.String[] str_array11 = new java.lang.String[] { "" };
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str12, str_array11);
    int i14 = treeset_str12.size();
    java.util.TreeSet<java.lang.String> treeset_str15 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str12);
    java.lang.String str17 = treeset_str15.higher("");
    boolean b18 = treeset_str1.addAll((java.util.Collection<java.lang.String>)treeset_str15);
    java.lang.String str19 = treeset_str1.last();
    java.util.TreeSet<java.lang.String> treeset_str20 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str20);
    java.util.Comparator<? super java.lang.String> comparator_wildcard22 = treeset_str20.comparator();
    java.util.SortedSet<java.lang.String> sortedset_str25 = treeset_str20.subSet("[hi!]", "[hi!]");
    boolean b26 = treeset_str20.isEmpty();
    boolean b27 = treeset_str1.addAll((java.util.Collection<java.lang.String>)treeset_str20);
    treeset_str20.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + ""+ "'", str19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator_wildcard22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);

  }

  @Test
  public void test495() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test495"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.util.SortedSet<java.lang.String> sortedset_str3 = treeset_str1.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str4 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array6 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str7 = new java.util.ArrayList<java.lang.String>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str7, str_array6);
    boolean b9 = treeset_str4.retainAll((java.util.Collection<java.lang.String>)arraylist_str7);
    boolean b10 = treeset_str1.retainAll((java.util.Collection<java.lang.String>)treeset_str4);
    java.lang.String[] str_array13 = new java.lang.String[] { "hi!", "" };
    java.util.TreeSet<java.lang.String> treeset_str14 = new java.util.TreeSet<java.lang.String>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)treeset_str14, str_array13);
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str14.descendingSet();
    java.lang.String str18 = treeset_str14.ceiling("[hi!]");
    boolean b19 = treeset_str4.remove((java.lang.Object)"[hi!]");
    java.util.Iterator<java.lang.String> iterator_str20 = treeset_str4.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!"+ "'", str18.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str20);

  }

  @Test
  public void test496() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test496"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.TreeSet<java.lang.String> treeset_str6 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str7 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str6);
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str7.tailSet("");
    boolean b10 = treeset_str0.equals((java.lang.Object)treeset_str7);
    java.util.stream.Stream<java.lang.String> stream_str11 = treeset_str0.stream();
    java.util.TreeSet<java.lang.String> treeset_str12 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array14 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str15 = new java.util.ArrayList<java.lang.String>();
    boolean b16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str15, str_array14);
    boolean b17 = treeset_str12.retainAll((java.util.Collection<java.lang.String>)arraylist_str15);
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str19 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str18);
    java.util.SortedSet<java.lang.String> sortedset_str21 = treeset_str19.tailSet("");
    boolean b22 = treeset_str12.equals((java.lang.Object)treeset_str19);
    java.util.stream.Stream<java.lang.String> stream_str23 = treeset_str12.stream();
    java.util.Iterator<java.lang.String> iterator_str24 = treeset_str12.descendingIterator();
    java.util.NavigableSet<java.lang.String> navigableset_str25 = treeset_str12.descendingSet();
    boolean b26 = treeset_str0.addAll((java.util.Collection<java.lang.String>)navigableset_str25);
    boolean b28 = treeset_str0.contains((java.lang.Object)0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);

  }

  @Test
  public void test497() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test497"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.lang.String str4 = treeset_str1.pollFirst();
    java.util.TreeSet<java.lang.String> treeset_str5 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str1);
    java.util.Iterator<java.lang.String> iterator_str6 = treeset_str5.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_str6);

  }

  @Test
  public void test498() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test498"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    java.util.stream.Stream<java.lang.String> stream_str6 = treeset_str0.parallelStream();
    java.lang.String str8 = treeset_str0.lower("");
    java.lang.String str10 = treeset_str0.higher("");
    java.lang.String str11 = treeset_str0.toString();
    java.util.NavigableSet<java.lang.String> navigableset_str14 = treeset_str0.tailSet("[]", true);
    boolean b16 = treeset_str0.add("[hi!]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "[]"+ "'", str11.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);

  }

  @Test
  public void test499() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test499"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str1 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str0);
    java.lang.String str3 = treeset_str1.lower("");
    java.util.NavigableSet<java.lang.String> navigableset_str6 = treeset_str1.headSet("hi!", true);
    boolean b7 = treeset_str1.isEmpty();
    java.util.SortedSet<java.lang.String> sortedset_str9 = treeset_str1.headSet("[hi!]");
    java.util.TreeSet<java.lang.String> treeset_str10 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str11 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str10);
    java.util.NavigableSet<java.lang.String> navigableset_str16 = treeset_str10.subSet("", true, "[hi!]", true);
    java.util.TreeSet<java.lang.String> treeset_str17 = new java.util.TreeSet<java.lang.String>();
    java.util.TreeSet<java.lang.String> treeset_str18 = new java.util.TreeSet<java.lang.String>((java.util.SortedSet<java.lang.String>)treeset_str17);
    java.util.SortedSet<java.lang.String> sortedset_str20 = treeset_str18.tailSet("");
    java.util.TreeSet<java.lang.String> treeset_str21 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array23 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str24 = new java.util.ArrayList<java.lang.String>();
    boolean b25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str24, str_array23);
    boolean b26 = treeset_str21.retainAll((java.util.Collection<java.lang.String>)arraylist_str24);
    boolean b27 = treeset_str18.retainAll((java.util.Collection<java.lang.String>)treeset_str21);
    java.util.NavigableSet<java.lang.String> navigableset_str30 = treeset_str18.headSet("", false);
    boolean b31 = treeset_str10.retainAll((java.util.Collection<java.lang.String>)treeset_str18);
    java.lang.String str32 = treeset_str18.pollFirst();
    boolean b33 = treeset_str1.addAll((java.util.Collection<java.lang.String>)treeset_str18);
    int i34 = treeset_str1.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);

  }

  @Test
  public void test500() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test500"); }

    java.util.TreeSet<java.lang.String> treeset_str0 = new java.util.TreeSet<java.lang.String>();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.util.ArrayList<java.lang.String> arraylist_str3 = new java.util.ArrayList<java.lang.String>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str3, str_array2);
    boolean b5 = treeset_str0.retainAll((java.util.Collection<java.lang.String>)arraylist_str3);
    boolean b7 = treeset_str0.add("hi!");
    java.util.NavigableSet<java.lang.String> navigableset_str10 = treeset_str0.tailSet("hi!", true);
    java.lang.String str12 = treeset_str0.higher("[hi!]");
    java.util.SortedSet<java.lang.String> sortedset_str14 = treeset_str0.tailSet("[[]]");
    java.util.SortedSet<java.lang.String> sortedset_str16 = treeset_str0.headSet("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableset_str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!"+ "'", str12.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedset_str16);

  }

}
